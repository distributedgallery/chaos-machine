{"id":"node_modules/csv-parser/index.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/csv-parser/package.json","includedInParent":true,"mtime":1535727512868},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"stream","loc":{"line":1,"column":21},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/csv-parser/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/stream-browserify/index.js"},{"name":"inherits","loc":{"line":2,"column":23},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/csv-parser/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/inherits/inherits_browser.js"},{"name":"generate-object-property","loc":{"line":3,"column":21},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/csv-parser/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/generate-object-property/index.js"},{"name":"generate-function","loc":{"line":4,"column":21},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/csv-parser/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/generate-function/index.js"},{"name":"buffer-from","loc":{"line":5,"column":25},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/csv-parser/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/buffer-from/index.js"},{"name":"buffer-alloc","loc":{"line":6,"column":26},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/csv-parser/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/buffer-alloc/index.js"},{"name":"buffer","parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/csv-parser/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar stream = require('stream')\nvar inherits = require('inherits')\nvar genobj = require('generate-object-property')\nvar genfun = require('generate-function')\nvar bufferFrom = require('buffer-from')\nvar bufferAlloc = require('buffer-alloc')\n\nvar quote = bufferFrom('\"')[0]\nvar comma = bufferFrom(',')[0]\nvar cr = bufferFrom('\\r')[0]\nvar nl = bufferFrom('\\n')[0]\n\nvar Parser = function (opts) {\n  if (!opts) opts = {}\n  if (Array.isArray(opts)) opts = {headers: opts}\n\n  stream.Transform.call(this, {objectMode: true, highWaterMark: 16})\n\n  this.separator = opts.separator ? bufferFrom(opts.separator)[0] : comma\n  this.quote = opts.quote ? bufferFrom(opts.quote)[0] : quote\n  this.escape = opts.escape ? bufferFrom(opts.escape)[0] : this.quote\n  if (opts.newline) {\n    this.newline = bufferFrom(opts.newline)[0]\n    this.customNewline = true\n  } else {\n    this.newline = nl\n    this.customNewline = false\n  }\n\n  this.headers = opts.headers || null\n  this.strict = opts.strict || null\n  this.mapHeaders = opts.mapHeaders || identity\n  this.mapValues = opts.mapValues || identity\n\n  this._raw = !!opts.raw\n  this._prev = null\n  this._prevEnd = 0\n  this._first = true\n  this._quoted = false\n  this._escaped = false\n  this._empty = this._raw ? bufferAlloc(0) : ''\n  this._Row = null\n\n  if (this.headers) {\n    this._first = false\n    this._compile(this.headers)\n  }\n}\n\ninherits(Parser, stream.Transform)\n\nParser.prototype._transform = function (data, enc, cb) {\n  if (typeof data === 'string') data = bufferFrom(data)\n\n  var start = 0\n  var buf = data\n\n  if (this._prev) {\n    start = this._prev.length\n    buf = Buffer.concat([this._prev, data])\n    this._prev = null\n  }\n\n  var bufLen = buf.length\n\n  for (var i = start; i < bufLen; i++) {\n    var chr = buf[i]\n    var nextChr = i + 1 < bufLen ? buf[i + 1] : null\n\n    if (!this._escaped && chr === this.escape && nextChr === this.quote && i !== start) {\n      this._escaped = true\n      continue\n    } else if (chr === this.quote) {\n      if (this._escaped) {\n        this._escaped = false\n      // non-escaped quote (quoting the cell)\n      } else {\n        this._quoted = !this._quoted\n      }\n      continue\n    }\n\n    if (!this._quoted) {\n      if (this._first && !this.customNewline) {\n        if (chr === nl) {\n          this.newline = nl\n        } else if (chr === cr) {\n          if (nextChr !== nl) {\n            this.newline = cr\n          }\n        }\n      }\n\n      if (chr === this.newline) {\n        this._online(buf, this._prevEnd, i + 1)\n        this._prevEnd = i + 1\n      }\n    }\n  }\n\n  if (this._prevEnd === bufLen) {\n    this._prevEnd = 0\n    return cb()\n  }\n\n  if (bufLen - this._prevEnd < data.length) {\n    this._prev = data\n    this._prevEnd -= (bufLen - data.length)\n    return cb()\n  }\n\n  this._prev = buf\n  cb()\n}\n\nParser.prototype._flush = function (cb) {\n  if (this._escaped || !this._prev) return cb()\n  this._online(this._prev, this._prevEnd, this._prev.length + 1) // plus since online -1s\n  cb()\n}\n\nParser.prototype._online = function (buf, start, end) {\n  end-- // trim newline\n  if (!this.customNewline && buf.length && buf[end - 1] === cr) end--\n\n  var comma = this.separator\n  var cells = []\n  var isQuoted = false\n  var offset = start\n\n  for (var i = start; i < end; i++) {\n    var isStartingQuote = !isQuoted && buf[i] === this.quote\n    var isEndingQuote = isQuoted && buf[i] === this.quote && i + 1 <= end && buf[i + 1] === comma\n    var isEscape = isQuoted && buf[i] === this.escape && i + 1 < end && buf[i + 1] === this.quote\n\n    if (isStartingQuote || isEndingQuote) {\n      isQuoted = !isQuoted\n      continue\n    } else if (isEscape) {\n      i++\n      continue\n    }\n\n    if (buf[i] === comma && !isQuoted) {\n      cells.push(this._oncell(buf, offset, i))\n      offset = i + 1\n    }\n  }\n\n  if (offset < end) cells.push(this._oncell(buf, offset, end))\n  if (buf[end - 1] === comma) cells.push(this._empty)\n\n  if (this._first) {\n    this._first = false\n    this.headers = cells\n    this._compile(cells)\n    this.emit('headers', this.headers)\n    return\n  }\n\n  if (this.strict && cells.length !== this.headers.length) {\n    this.emit('error', new Error('Row length does not match headers'))\n  } else {\n    this._emit(this._Row, cells)\n  }\n}\n\nParser.prototype._compile = function () {\n  if (this._Row) return\n\n  var Row = genfun()('function Row (cells) {')\n\n  var self = this\n  this.headers.forEach(function (cell, i) {\n    var newHeader = self.mapHeaders(cell, i)\n    if (newHeader) {\n      Row('%s = cells[%d]', genobj('this', newHeader), i)\n    }\n  })\n\n  Row('}')\n\n  this._Row = Row.toFunction()\n\n  if (Object.defineProperty) {\n    Object.defineProperty(this._Row.prototype, 'headers', {\n      enumerable: false,\n      value: this.headers\n    })\n  } else {\n    this._Row.prototype.headers = this.headers\n  }\n}\n\nParser.prototype._emit = function (Row, cells) {\n  this.push(new Row(cells))\n}\n\nParser.prototype._oncell = function (buf, start, end) {\n  // remove quotes from quoted cells\n  if (buf[start] === this.quote && buf[end - 1] === this.quote) {\n    start++\n    end--\n  }\n\n  for (var i = start, y = start; i < end; i++) {\n    // check for escape characters and skip them\n    if (buf[i] === this.escape && i + 1 < end && buf[i + 1] === this.quote) i++\n    if (y !== i) buf[y] = buf[i]\n    y++\n  }\n\n  var value = this._onvalue(buf, start, y)\n  return this._first ? value : this.mapValues(value)\n}\n\nParser.prototype._onvalue = function (buf, start, end) {\n  if (this._raw) return buf.slice(start, end)\n  return buf.toString('utf-8', start, end)\n}\n\nfunction identity (id) {\n  return id\n}\n\nmodule.exports = function (opts) {\n  return new Parser(opts)\n}\n","map":{"mappings":[{"source":"node_modules/csv-parser/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/csv-parser/index.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}}],"sources":{"node_modules/csv-parser/index.js":"var stream = require('stream')\nvar inherits = require('inherits')\nvar genobj = require('generate-object-property')\nvar genfun = require('generate-function')\nvar bufferFrom = require('buffer-from')\nvar bufferAlloc = require('buffer-alloc')\n\nvar quote = bufferFrom('\"')[0]\nvar comma = bufferFrom(',')[0]\nvar cr = bufferFrom('\\r')[0]\nvar nl = bufferFrom('\\n')[0]\n\nvar Parser = function (opts) {\n  if (!opts) opts = {}\n  if (Array.isArray(opts)) opts = {headers: opts}\n\n  stream.Transform.call(this, {objectMode: true, highWaterMark: 16})\n\n  this.separator = opts.separator ? bufferFrom(opts.separator)[0] : comma\n  this.quote = opts.quote ? bufferFrom(opts.quote)[0] : quote\n  this.escape = opts.escape ? bufferFrom(opts.escape)[0] : this.quote\n  if (opts.newline) {\n    this.newline = bufferFrom(opts.newline)[0]\n    this.customNewline = true\n  } else {\n    this.newline = nl\n    this.customNewline = false\n  }\n\n  this.headers = opts.headers || null\n  this.strict = opts.strict || null\n  this.mapHeaders = opts.mapHeaders || identity\n  this.mapValues = opts.mapValues || identity\n\n  this._raw = !!opts.raw\n  this._prev = null\n  this._prevEnd = 0\n  this._first = true\n  this._quoted = false\n  this._escaped = false\n  this._empty = this._raw ? bufferAlloc(0) : ''\n  this._Row = null\n\n  if (this.headers) {\n    this._first = false\n    this._compile(this.headers)\n  }\n}\n\ninherits(Parser, stream.Transform)\n\nParser.prototype._transform = function (data, enc, cb) {\n  if (typeof data === 'string') data = bufferFrom(data)\n\n  var start = 0\n  var buf = data\n\n  if (this._prev) {\n    start = this._prev.length\n    buf = Buffer.concat([this._prev, data])\n    this._prev = null\n  }\n\n  var bufLen = buf.length\n\n  for (var i = start; i < bufLen; i++) {\n    var chr = buf[i]\n    var nextChr = i + 1 < bufLen ? buf[i + 1] : null\n\n    if (!this._escaped && chr === this.escape && nextChr === this.quote && i !== start) {\n      this._escaped = true\n      continue\n    } else if (chr === this.quote) {\n      if (this._escaped) {\n        this._escaped = false\n      // non-escaped quote (quoting the cell)\n      } else {\n        this._quoted = !this._quoted\n      }\n      continue\n    }\n\n    if (!this._quoted) {\n      if (this._first && !this.customNewline) {\n        if (chr === nl) {\n          this.newline = nl\n        } else if (chr === cr) {\n          if (nextChr !== nl) {\n            this.newline = cr\n          }\n        }\n      }\n\n      if (chr === this.newline) {\n        this._online(buf, this._prevEnd, i + 1)\n        this._prevEnd = i + 1\n      }\n    }\n  }\n\n  if (this._prevEnd === bufLen) {\n    this._prevEnd = 0\n    return cb()\n  }\n\n  if (bufLen - this._prevEnd < data.length) {\n    this._prev = data\n    this._prevEnd -= (bufLen - data.length)\n    return cb()\n  }\n\n  this._prev = buf\n  cb()\n}\n\nParser.prototype._flush = function (cb) {\n  if (this._escaped || !this._prev) return cb()\n  this._online(this._prev, this._prevEnd, this._prev.length + 1) // plus since online -1s\n  cb()\n}\n\nParser.prototype._online = function (buf, start, end) {\n  end-- // trim newline\n  if (!this.customNewline && buf.length && buf[end - 1] === cr) end--\n\n  var comma = this.separator\n  var cells = []\n  var isQuoted = false\n  var offset = start\n\n  for (var i = start; i < end; i++) {\n    var isStartingQuote = !isQuoted && buf[i] === this.quote\n    var isEndingQuote = isQuoted && buf[i] === this.quote && i + 1 <= end && buf[i + 1] === comma\n    var isEscape = isQuoted && buf[i] === this.escape && i + 1 < end && buf[i + 1] === this.quote\n\n    if (isStartingQuote || isEndingQuote) {\n      isQuoted = !isQuoted\n      continue\n    } else if (isEscape) {\n      i++\n      continue\n    }\n\n    if (buf[i] === comma && !isQuoted) {\n      cells.push(this._oncell(buf, offset, i))\n      offset = i + 1\n    }\n  }\n\n  if (offset < end) cells.push(this._oncell(buf, offset, end))\n  if (buf[end - 1] === comma) cells.push(this._empty)\n\n  if (this._first) {\n    this._first = false\n    this.headers = cells\n    this._compile(cells)\n    this.emit('headers', this.headers)\n    return\n  }\n\n  if (this.strict && cells.length !== this.headers.length) {\n    this.emit('error', new Error('Row length does not match headers'))\n  } else {\n    this._emit(this._Row, cells)\n  }\n}\n\nParser.prototype._compile = function () {\n  if (this._Row) return\n\n  var Row = genfun()('function Row (cells) {')\n\n  var self = this\n  this.headers.forEach(function (cell, i) {\n    var newHeader = self.mapHeaders(cell, i)\n    if (newHeader) {\n      Row('%s = cells[%d]', genobj('this', newHeader), i)\n    }\n  })\n\n  Row('}')\n\n  this._Row = Row.toFunction()\n\n  if (Object.defineProperty) {\n    Object.defineProperty(this._Row.prototype, 'headers', {\n      enumerable: false,\n      value: this.headers\n    })\n  } else {\n    this._Row.prototype.headers = this.headers\n  }\n}\n\nParser.prototype._emit = function (Row, cells) {\n  this.push(new Row(cells))\n}\n\nParser.prototype._oncell = function (buf, start, end) {\n  // remove quotes from quoted cells\n  if (buf[start] === this.quote && buf[end - 1] === this.quote) {\n    start++\n    end--\n  }\n\n  for (var i = start, y = start; i < end; i++) {\n    // check for escape characters and skip them\n    if (buf[i] === this.escape && i + 1 < end && buf[i + 1] === this.quote) i++\n    if (y !== i) buf[y] = buf[i]\n    y++\n  }\n\n  var value = this._onvalue(buf, start, y)\n  return this._first ? value : this.mapValues(value)\n}\n\nParser.prototype._onvalue = function (buf, start, end) {\n  if (this._raw) return buf.slice(start, end)\n  return buf.toString('utf-8', start, end)\n}\n\nfunction identity (id) {\n  return id\n}\n\nmodule.exports = function (opts) {\n  return new Parser(opts)\n}\n"},"lineCount":230}},"hash":"af2c76239f06cff2f1524678d3654f6e","cacheData":{"env":{}}}