{"id":"node_modules/eth-lib/lib/array.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/eth-lib/package.json","includedInParent":true,"mtime":1535727511828},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246}],"generated":{"js":"const generate = (num, fn) => {\n  let a = [];\n  for (var i = 0; i < num; ++i) a.push(fn(i));\n  return a;\n};\n\nconst replicate = (num, val) => generate(num, () => val);\n\nconst concat = (a, b) => a.concat(b);\n\nconst flatten = a => {\n  let r = [];\n  for (let j = 0, J = a.length; j < J; ++j) for (let i = 0, I = a[j].length; i < I; ++i) r.push(a[j][i]);\n  return r;\n};\n\nconst chunksOf = (n, a) => {\n  let b = [];\n  for (let i = 0, l = a.length; i < l; i += n) b.push(a.slice(i, i + n));\n  return b;\n};\n\nmodule.exports = {\n  generate,\n  replicate,\n  concat,\n  flatten,\n  chunksOf\n};","map":{"mappings":[{"source":"node_modules/eth-lib/lib/array.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/eth-lib/lib/array.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"node_modules/eth-lib/lib/array.js":"const generate = (num, fn) => {\n  let a = [];\n  for (var i = 0; i < num; ++i) a.push(fn(i));\n  return a;\n};\n\nconst replicate = (num, val) => generate(num, () => val);\n\nconst concat = (a, b) => a.concat(b);\n\nconst flatten = a => {\n  let r = [];\n  for (let j = 0, J = a.length; j < J; ++j) for (let i = 0, I = a[j].length; i < I; ++i) r.push(a[j][i]);\n  return r;\n};\n\nconst chunksOf = (n, a) => {\n  let b = [];\n  for (let i = 0, l = a.length; i < l; i += n) b.push(a.slice(i, i + n));\n  return b;\n};\n\nmodule.exports = {\n  generate,\n  replicate,\n  concat,\n  flatten,\n  chunksOf\n};"},"lineCount":29}},"hash":"c89daf01f4b09e1f5fc0e54ae5071cfb","cacheData":{"env":{}}}