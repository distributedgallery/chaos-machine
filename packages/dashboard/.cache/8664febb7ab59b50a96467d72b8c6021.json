{"id":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/@chaosmachine/chaos.js/package.json","includedInParent":true,"mtime":1535727511817},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/@chaosmachine/chaos.js/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"chalk","loc":{"line":6,"column":40},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/chalk/index.js"},{"name":"columnify","loc":{"line":7,"column":44},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/columnify/columnify.js"},{"name":"fs","loc":{"line":8,"column":37},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/parcel-bundler/src/builtins/_empty.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst chalk_1 = __importDefault(require(\"chalk\"));\nconst columnify_1 = __importDefault(require(\"columnify\"));\nconst fs_1 = __importDefault(require(\"fs\"));\nclass Log {\n    constructor(machine) {\n        this.machine = machine;\n    }\n    info(event, args) {\n        const data = [{ level: chalk_1.default.green('INFO'), timestamp: '[' + new Date(Date.now()).toISOString() + ']', event }];\n        const dataRaw = [{ level: 'INFO', timestamp: '[' + new Date(Date.now()).toISOString() + ']', event }];\n        /* tslint:disable:forin */\n        for (const arg in args) {\n            data[0][arg] = chalk_1.default.green(arg) + '=' + args[arg];\n            dataRaw[0][arg] = arg + '=' + args[arg];\n        }\n        /* tslint:enable:forin */\n        const line = columnify_1.default(data, { showHeaders: false, config: { event: { minWidth: 30 } } });\n        const lineRaw = columnify_1.default(dataRaw, { showHeaders: false, config: { event: { minWidth: 30 } } }) + '\\n';\n        /* tslint:disable:no-console */\n        console.log(line);\n        /* tslint:enable:no-console */\n        fs_1.default.appendFile(this.machine.paths.log, lineRaw, (err) => {\n            if (err) {\n                this.error('Log', { error: err });\n            }\n        });\n    }\n    error(event, args) {\n        const data = [{ level: chalk_1.default.red('ERR'), timestamp: '[' + new Date(Date.now()).toISOString() + ']', event }];\n        const dataRaw = [{ level: 'ERR', timestamp: '[' + new Date(Date.now()).toISOString() + ']', event }];\n        /* tslint:disable:forin */\n        for (const arg in args) {\n            data[0][arg] = chalk_1.default.red(arg) + '=' + args[arg];\n            dataRaw[0][arg] = arg + '=' + args[arg];\n        }\n        /* tslint:enable:forin */\n        const line = columnify_1.default(data, { showHeaders: false, config: { level: { minWidth: 4 }, event: { minWidth: 30 } } });\n        const lineRaw = columnify_1.default(dataRaw, { showHeaders: false, config: { level: { minWidth: 4 }, event: { minWidth: 30 } } }) + '\\n';\n        /* tslint:disable:no-console */\n        console.log(line);\n        /* tslint:enable:no-console */\n        fs_1.default.appendFile(this.machine.paths.log, lineRaw, (err) => {\n            if (err) {\n                /* tslint:disable:no-console */\n                console.log(err);\n                /* tslint:enable:no-console */\n            }\n        });\n    }\n}\nexports.default = Log;\n","map":{"mappings":[{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"node_modules/@chaosmachine/chaos.js/lib/machine/log/index.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst chalk_1 = __importDefault(require(\"chalk\"));\nconst columnify_1 = __importDefault(require(\"columnify\"));\nconst fs_1 = __importDefault(require(\"fs\"));\nclass Log {\n    constructor(machine) {\n        this.machine = machine;\n    }\n    info(event, args) {\n        const data = [{ level: chalk_1.default.green('INFO'), timestamp: '[' + new Date(Date.now()).toISOString() + ']', event }];\n        const dataRaw = [{ level: 'INFO', timestamp: '[' + new Date(Date.now()).toISOString() + ']', event }];\n        /* tslint:disable:forin */\n        for (const arg in args) {\n            data[0][arg] = chalk_1.default.green(arg) + '=' + args[arg];\n            dataRaw[0][arg] = arg + '=' + args[arg];\n        }\n        /* tslint:enable:forin */\n        const line = columnify_1.default(data, { showHeaders: false, config: { event: { minWidth: 30 } } });\n        const lineRaw = columnify_1.default(dataRaw, { showHeaders: false, config: { event: { minWidth: 30 } } }) + '\\n';\n        /* tslint:disable:no-console */\n        console.log(line);\n        /* tslint:enable:no-console */\n        fs_1.default.appendFile(this.machine.paths.log, lineRaw, (err) => {\n            if (err) {\n                this.error('Log', { error: err });\n            }\n        });\n    }\n    error(event, args) {\n        const data = [{ level: chalk_1.default.red('ERR'), timestamp: '[' + new Date(Date.now()).toISOString() + ']', event }];\n        const dataRaw = [{ level: 'ERR', timestamp: '[' + new Date(Date.now()).toISOString() + ']', event }];\n        /* tslint:disable:forin */\n        for (const arg in args) {\n            data[0][arg] = chalk_1.default.red(arg) + '=' + args[arg];\n            dataRaw[0][arg] = arg + '=' + args[arg];\n        }\n        /* tslint:enable:forin */\n        const line = columnify_1.default(data, { showHeaders: false, config: { level: { minWidth: 4 }, event: { minWidth: 30 } } });\n        const lineRaw = columnify_1.default(dataRaw, { showHeaders: false, config: { level: { minWidth: 4 }, event: { minWidth: 30 } } }) + '\\n';\n        /* tslint:disable:no-console */\n        console.log(line);\n        /* tslint:enable:no-console */\n        fs_1.default.appendFile(this.machine.paths.log, lineRaw, (err) => {\n            if (err) {\n                /* tslint:disable:no-console */\n                console.log(err);\n                /* tslint:enable:no-console */\n            }\n        });\n    }\n}\nexports.default = Log;\n"},"lineCount":57}},"hash":"a8615ed06be52b4a01334ad9b0498268","cacheData":{"env":{}}}