{"id":"node_modules/crypto-js/mode-ofb.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/package.json","includedInParent":true,"mtime":1533122127393},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1533219493444},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"./core","loc":{"line":4,"column":45},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/mode-ofb.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/core.js"},{"name":"./cipher-core","loc":{"line":4,"column":64},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/mode-ofb.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/cipher-core.js"}],"generated":{"js":"var define;\n;(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));","map":{"mappings":[{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/crypto-js/mode-ofb.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/crypto-js/mode-ofb.js":";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));"},"lineCount":55}},"hash":"1018f45827850766a630f6ace4004656","cacheData":{"env":{}}}