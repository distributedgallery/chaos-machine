{"id":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/node_modules/webrtc-adapter/package.json","includedInParent":true,"mtime":1533059672071},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/package.json","includedInParent":true,"mtime":1533059672870},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/.babelrc","includedInParent":true,"mtime":1533058453931},{"name":"sdp","loc":{"line":11,"column":23},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/node_modules/webrtc-adapter/src/js/edge/edge_shim.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/node_modules/sdp/sdp.js"},{"name":"../utils","loc":{"line":12,"column":22},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/node_modules/webrtc-adapter/src/js/edge/edge_shim.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/node_modules/webrtc-adapter/src/js/utils.js"},{"name":"./getusermedia","loc":{"line":1046,"column":28},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/node_modules/webrtc-adapter/src/js/edge/edge_shim.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/node_modules/webrtc-adapter/src/js/edge/getusermedia.js"}],"generated":{"js":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nvar logging = require('../utils').log;\n\nvar edgeShim = {\n  shimPeerConnection: function() {\n    if (window.RTCIceGatherer) {\n      // ORTC defines an RTCIceCandidate object but no constructor.\n      // Not implemented in Edge.\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      // ORTC does not have a session description object but\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\n      // in the future might have this defined already.\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n    }\n\n    window.RTCPeerConnection = function(config) {\n      var self = this;\n\n      var _eventTarget = document.createDocumentFragment();\n      ['addEventListener', 'removeEventListener', 'dispatchEvent']\n          .forEach(function(method) {\n            self[method] = _eventTarget[method].bind(_eventTarget);\n          });\n\n      this.onicecandidate = null;\n      this.onaddstream = null;\n      this.ontrack = null;\n      this.onremovestream = null;\n      this.onsignalingstatechange = null;\n      this.oniceconnectionstatechange = null;\n      this.onnegotiationneeded = null;\n      this.ondatachannel = null;\n\n      this.localStreams = [];\n      this.remoteStreams = [];\n      this.getLocalStreams = function() {\n        return self.localStreams;\n      };\n      this.getRemoteStreams = function() {\n        return self.remoteStreams;\n      };\n\n      this.localDescription = new RTCSessionDescription({\n        type: '',\n        sdp: ''\n      });\n      this.remoteDescription = new RTCSessionDescription({\n        type: '',\n        sdp: ''\n      });\n      this.signalingState = 'stable';\n      this.iceConnectionState = 'new';\n      this.iceGatheringState = 'new';\n\n      this.iceOptions = {\n        gatherPolicy: 'all',\n        iceServers: []\n      };\n      if (config && config.iceTransportPolicy) {\n        switch (config.iceTransportPolicy) {\n          case 'all':\n          case 'relay':\n            this.iceOptions.gatherPolicy = config.iceTransportPolicy;\n            break;\n          case 'none':\n            // FIXME: remove once implementation and spec have added this.\n            throw new TypeError('iceTransportPolicy \"none\" not supported');\n          default:\n            // don't set iceTransportPolicy.\n            break;\n        }\n      }\n      this.usingBundle = config && config.bundlePolicy === 'max-bundle';\n\n      if (config && config.iceServers) {\n        // Edge does not like\n        // 1) stun:\n        // 2) turn: that does not have all of turn:host:port?transport=udp\n        var iceServers = JSON.parse(JSON.stringify(config.iceServers));\n        this.iceOptions.iceServers = iceServers.filter(function(server) {\n          if (server && server.urls) {\n            var urls = server.urls;\n            if (typeof urls === 'string') {\n              urls = [urls];\n            }\n            urls = urls.filter(function(url) {\n              return url.indexOf('turn:') === 0 &&\n                  url.indexOf('transport=udp') !== -1;\n            })[0];\n            return !!urls;\n          }\n          return false;\n        });\n      }\n\n      // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n      // everything that is needed to describe a SDP m-line.\n      this.transceivers = [];\n\n      // since the iceGatherer is currently created in createOffer but we\n      // must not emit candidates until after setLocalDescription we buffer\n      // them in this array.\n      this._localIceCandidatesBuffer = [];\n    };\n\n    window.RTCPeerConnection.prototype._emitBufferedCandidates = function() {\n      var self = this;\n      var sections = SDPUtils.splitSections(self.localDescription.sdp);\n      // FIXME: need to apply ice candidates in a way which is async but\n      // in-order\n      this._localIceCandidatesBuffer.forEach(function(event) {\n        var end = !event.candidate || Object.keys(event.candidate).length === 0;\n        if (end) {\n          for (var j = 1; j < sections.length; j++) {\n            if (sections[j].indexOf('\\r\\na=end-of-candidates\\r\\n') === -1) {\n              sections[j] += 'a=end-of-candidates\\r\\n';\n            }\n          }\n        } else if (event.candidate.candidate.indexOf('typ endOfCandidates')\n            === -1) {\n          sections[event.candidate.sdpMLineIndex + 1] +=\n              'a=' + event.candidate.candidate + '\\r\\n';\n        }\n        self.localDescription.sdp = sections.join('');\n        self.dispatchEvent(event);\n        if (self.onicecandidate !== null) {\n          self.onicecandidate(event);\n        }\n        if (!event.candidate && self.iceGatheringState !== 'complete') {\n          var complete = self.transceivers.every(function(transceiver) {\n            return transceiver.iceGatherer &&\n                transceiver.iceGatherer.state === 'completed';\n          });\n          if (complete) {\n            self.iceGatheringState = 'complete';\n          }\n        }\n      });\n      this._localIceCandidatesBuffer = [];\n    };\n\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      this.localStreams.push(stream.clone());\n      this._maybeFireNegotiationNeeded();\n    };\n\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var idx = this.localStreams.indexOf(stream);\n      if (idx > -1) {\n        this.localStreams.splice(idx, 1);\n        this._maybeFireNegotiationNeeded();\n      }\n    };\n\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      return this.transceivers.filter(function(transceiver) {\n        return !!transceiver.rtpSender;\n      })\n      .map(function(transceiver) {\n        return transceiver.rtpSender;\n      });\n    };\n\n    window.RTCPeerConnection.prototype.getReceivers = function() {\n      return this.transceivers.filter(function(transceiver) {\n        return !!transceiver.rtpReceiver;\n      })\n      .map(function(transceiver) {\n        return transceiver.rtpReceiver;\n      });\n    };\n\n    // Determines the intersection of local and remote capabilities.\n    window.RTCPeerConnection.prototype._getCommonCapabilities =\n        function(localCapabilities, remoteCapabilities) {\n          var commonCapabilities = {\n            codecs: [],\n            headerExtensions: [],\n            fecMechanisms: []\n          };\n          localCapabilities.codecs.forEach(function(lCodec) {\n            for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n              var rCodec = remoteCapabilities.codecs[i];\n              if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n                  lCodec.clockRate === rCodec.clockRate &&\n                  lCodec.numChannels === rCodec.numChannels) {\n                // push rCodec so we reply with offerer payload type\n                commonCapabilities.codecs.push(rCodec);\n\n                // FIXME: also need to determine intersection between\n                // .rtcpFeedback and .parameters\n                break;\n              }\n            }\n          });\n\n          localCapabilities.headerExtensions\n              .forEach(function(lHeaderExtension) {\n                for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n                     i++) {\n                  var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n                  if (lHeaderExtension.uri === rHeaderExtension.uri) {\n                    commonCapabilities.headerExtensions.push(rHeaderExtension);\n                    break;\n                  }\n                }\n              });\n\n          // FIXME: fecMechanisms\n          return commonCapabilities;\n        };\n\n    // Create ICE gatherer, ICE transport and DTLS transport.\n    window.RTCPeerConnection.prototype._createIceAndDtlsTransports =\n        function(mid, sdpMLineIndex) {\n          var self = this;\n          var iceGatherer = new RTCIceGatherer(self.iceOptions);\n          var iceTransport = new RTCIceTransport(iceGatherer);\n          iceGatherer.onlocalcandidate = function(evt) {\n            var event = new Event('icecandidate');\n            event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n            var cand = evt.candidate;\n            var end = !cand || Object.keys(cand).length === 0;\n            // Edge emits an empty object for RTCIceCandidateComplete‥\n            if (end) {\n              // polyfill since RTCIceGatherer.state is not implemented in\n              // Edge 10547 yet.\n              if (iceGatherer.state === undefined) {\n                iceGatherer.state = 'completed';\n              }\n\n              // Emit a candidate with type endOfCandidates to make the samples\n              // work. Edge requires addIceCandidate with this empty candidate\n              // to start checking. The real solution is to signal\n              // end-of-candidates to the other side when getting the null\n              // candidate but some apps (like the samples) don't do that.\n              event.candidate.candidate =\n                  'candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates';\n            } else {\n              // RTCIceCandidate doesn't have a component, needs to be added\n              cand.component = iceTransport.component === 'RTCP' ? 2 : 1;\n              event.candidate.candidate = SDPUtils.writeCandidate(cand);\n            }\n\n            // update local description.\n            var sections = SDPUtils.splitSections(self.localDescription.sdp);\n            if (event.candidate.candidate.indexOf('typ endOfCandidates')\n                === -1) {\n              sections[event.candidate.sdpMLineIndex + 1] +=\n                  'a=' + event.candidate.candidate + '\\r\\n';\n            } else {\n              sections[event.candidate.sdpMLineIndex + 1] +=\n                  'a=end-of-candidates\\r\\n';\n            }\n            self.localDescription.sdp = sections.join('');\n\n            var complete = self.transceivers.every(function(transceiver) {\n              return transceiver.iceGatherer &&\n                  transceiver.iceGatherer.state === 'completed';\n            });\n\n            // Emit candidate if localDescription is set.\n            // Also emits null candidate when all gatherers are complete.\n            switch (self.iceGatheringState) {\n              case 'new':\n                self._localIceCandidatesBuffer.push(event);\n                if (end && complete) {\n                  self._localIceCandidatesBuffer.push(\n                      new Event('icecandidate'));\n                }\n                break;\n              case 'gathering':\n                self._emitBufferedCandidates();\n                self.dispatchEvent(event);\n                if (self.onicecandidate !== null) {\n                  self.onicecandidate(event);\n                }\n                if (complete) {\n                  self.dispatchEvent(new Event('icecandidate'));\n                  if (self.onicecandidate !== null) {\n                    self.onicecandidate(new Event('icecandidate'));\n                  }\n                  self.iceGatheringState = 'complete';\n                }\n                break;\n              case 'complete':\n                // should not happen... currently!\n                break;\n              default: // no-op.\n                break;\n            }\n          };\n          iceTransport.onicestatechange = function() {\n            self._updateConnectionState();\n          };\n\n          var dtlsTransport = new RTCDtlsTransport(iceTransport);\n          dtlsTransport.ondtlsstatechange = function() {\n            self._updateConnectionState();\n          };\n          dtlsTransport.onerror = function() {\n            // onerror does not set state to failed by itself.\n            dtlsTransport.state = 'failed';\n            self._updateConnectionState();\n          };\n\n          return {\n            iceGatherer: iceGatherer,\n            iceTransport: iceTransport,\n            dtlsTransport: dtlsTransport\n          };\n        };\n\n    // Start the RTP Sender and Receiver for a transceiver.\n    window.RTCPeerConnection.prototype._transceive = function(transceiver,\n        send, recv) {\n      var params = this._getCommonCapabilities(transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n      if (send && transceiver.rtpSender) {\n        params.encodings = transceiver.sendEncodingParameters;\n        params.rtcp = {\n          cname: SDPUtils.localCName\n        };\n        if (transceiver.recvEncodingParameters.length) {\n          params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n        }\n        transceiver.rtpSender.send(params);\n      }\n      if (recv && transceiver.rtpReceiver) {\n        params.encodings = transceiver.recvEncodingParameters;\n        params.rtcp = {\n          cname: transceiver.cname\n        };\n        if (transceiver.sendEncodingParameters.length) {\n          params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n        }\n        transceiver.rtpReceiver.receive(params);\n      }\n    };\n\n    window.RTCPeerConnection.prototype.setLocalDescription =\n        function(description) {\n          var self = this;\n          var sections;\n          var sessionpart;\n          if (description.type === 'offer') {\n            // FIXME: What was the purpose of this empty if statement?\n            // if (!this._pendingOffer) {\n            // } else {\n            if (this._pendingOffer) {\n              // VERY limited support for SDP munging. Limited to:\n              // * changing the order of codecs\n              sections = SDPUtils.splitSections(description.sdp);\n              sessionpart = sections.shift();\n              sections.forEach(function(mediaSection, sdpMLineIndex) {\n                var caps = SDPUtils.parseRtpParameters(mediaSection);\n                self._pendingOffer[sdpMLineIndex].localCapabilities = caps;\n              });\n              this.transceivers = this._pendingOffer;\n              delete this._pendingOffer;\n            }\n          } else if (description.type === 'answer') {\n            sections = SDPUtils.splitSections(self.remoteDescription.sdp);\n            sessionpart = sections.shift();\n            var isIceLite = SDPUtils.matchPrefix(sessionpart,\n                'a=ice-lite').length > 0;\n            sections.forEach(function(mediaSection, sdpMLineIndex) {\n              var transceiver = self.transceivers[sdpMLineIndex];\n              var iceGatherer = transceiver.iceGatherer;\n              var iceTransport = transceiver.iceTransport;\n              var dtlsTransport = transceiver.dtlsTransport;\n              var localCapabilities = transceiver.localCapabilities;\n              var remoteCapabilities = transceiver.remoteCapabilities;\n              var rejected = mediaSection.split('\\n', 1)[0]\n                  .split(' ', 2)[1] === '0';\n\n              if (!rejected) {\n                var remoteIceParameters = SDPUtils.getIceParameters(\n                    mediaSection, sessionpart);\n                if (isIceLite) {\n                  var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n                  .map(function(cand) {\n                    return SDPUtils.parseCandidate(cand);\n                  })\n                  .filter(function(cand) {\n                    return cand.component === '1';\n                  });\n                  // ice-lite only includes host candidates in the SDP so we can\n                  // use setRemoteCandidates (which implies an\n                  // RTCIceCandidateComplete)\n                  if (cands.length) {\n                    iceTransport.setRemoteCandidates(cands);\n                  }\n                }\n                var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n                    mediaSection, sessionpart);\n                if (isIceLite) {\n                  remoteDtlsParameters.role = 'server';\n                }\n\n                if (!self.usingBundle || sdpMLineIndex === 0) {\n                  iceTransport.start(iceGatherer, remoteIceParameters,\n                      isIceLite ? 'controlling' : 'controlled');\n                  dtlsTransport.start(remoteDtlsParameters);\n                }\n\n                // Calculate intersection of capabilities.\n                var params = self._getCommonCapabilities(localCapabilities,\n                    remoteCapabilities);\n\n                // Start the RTCRtpSender. The RTCRtpReceiver for this\n                // transceiver has already been started in setRemoteDescription.\n                self._transceive(transceiver,\n                    params.codecs.length > 0,\n                    false);\n              }\n            });\n          }\n\n          this.localDescription = {\n            type: description.type,\n            sdp: description.sdp\n          };\n          switch (description.type) {\n            case 'offer':\n              this._updateSignalingState('have-local-offer');\n              break;\n            case 'answer':\n              this._updateSignalingState('stable');\n              break;\n            default:\n              throw new TypeError('unsupported type \"' + description.type +\n                  '\"');\n          }\n\n          // If a success callback was provided, emit ICE candidates after it\n          // has been executed. Otherwise, emit callback after the Promise is\n          // resolved.\n          var hasCallback = arguments.length > 1 &&\n            typeof arguments[1] === 'function';\n          if (hasCallback) {\n            var cb = arguments[1];\n            window.setTimeout(function() {\n              cb();\n              if (self.iceGatheringState === 'new') {\n                self.iceGatheringState = 'gathering';\n              }\n              self._emitBufferedCandidates();\n            }, 0);\n          }\n          var p = Promise.resolve();\n          p.then(function() {\n            if (!hasCallback) {\n              if (self.iceGatheringState === 'new') {\n                self.iceGatheringState = 'gathering';\n              }\n              // Usually candidates will be emitted earlier.\n              window.setTimeout(self._emitBufferedCandidates.bind(self), 500);\n            }\n          });\n          return p;\n        };\n\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n        function(description) {\n          var self = this;\n          var stream = new MediaStream();\n          var receiverList = [];\n          var sections = SDPUtils.splitSections(description.sdp);\n          var sessionpart = sections.shift();\n          var isIceLite = SDPUtils.matchPrefix(sessionpart,\n              'a=ice-lite').length > 0;\n          this.usingBundle = SDPUtils.matchPrefix(sessionpart,\n              'a=group:BUNDLE ').length > 0;\n          sections.forEach(function(mediaSection, sdpMLineIndex) {\n            var lines = SDPUtils.splitLines(mediaSection);\n            var mline = lines[0].substr(2).split(' ');\n            var kind = mline[0];\n            var rejected = mline[1] === '0';\n            var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n\n            var transceiver;\n            var iceGatherer;\n            var iceTransport;\n            var dtlsTransport;\n            var rtpSender;\n            var rtpReceiver;\n            var sendEncodingParameters;\n            var recvEncodingParameters;\n            var localCapabilities;\n\n            var track;\n            // FIXME: ensure the mediaSection has rtcp-mux set.\n            var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n            var remoteIceParameters;\n            var remoteDtlsParameters;\n            if (!rejected) {\n              remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n                  sessionpart);\n              remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n                  sessionpart);\n              remoteDtlsParameters.role = 'client';\n            }\n            recvEncodingParameters =\n                SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n            var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:');\n            if (mid.length) {\n              mid = mid[0].substr(6);\n            } else {\n              mid = SDPUtils.generateIdentifier();\n            }\n\n            var cname;\n            // Gets the first SSRC. Note that with RTX there might be multiple\n            // SSRCs.\n            var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n                .map(function(line) {\n                  return SDPUtils.parseSsrcMedia(line);\n                })\n                .filter(function(obj) {\n                  return obj.attribute === 'cname';\n                })[0];\n            if (remoteSsrc) {\n              cname = remoteSsrc.value;\n            }\n\n            var isComplete = SDPUtils.matchPrefix(mediaSection,\n                'a=end-of-candidates').length > 0;\n            var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n                .map(function(cand) {\n                  return SDPUtils.parseCandidate(cand);\n                })\n                .filter(function(cand) {\n                  return cand.component === '1';\n                });\n            if (description.type === 'offer' && !rejected) {\n              var transports = self.usingBundle && sdpMLineIndex > 0 ? {\n                iceGatherer: self.transceivers[0].iceGatherer,\n                iceTransport: self.transceivers[0].iceTransport,\n                dtlsTransport: self.transceivers[0].dtlsTransport\n              } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n              if (isComplete) {\n                transports.iceTransport.setRemoteCandidates(cands);\n              }\n\n              localCapabilities = RTCRtpReceiver.getCapabilities(kind);\n              sendEncodingParameters = [{\n                ssrc: (2 * sdpMLineIndex + 2) * 1001\n              }];\n\n              rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport, kind);\n\n              track = rtpReceiver.track;\n              receiverList.push([track, rtpReceiver]);\n              // FIXME: not correct when there are multiple streams but that is\n              // not currently supported in this shim.\n              stream.addTrack(track);\n\n              // FIXME: look at direction.\n              if (self.localStreams.length > 0 &&\n                  self.localStreams[0].getTracks().length >= sdpMLineIndex) {\n                // FIXME: actually more complicated, needs to match types etc\n                var localtrack = self.localStreams[0]\n                    .getTracks()[sdpMLineIndex];\n                rtpSender = new RTCRtpSender(localtrack,\n                    transports.dtlsTransport);\n              }\n\n              self.transceivers[sdpMLineIndex] = {\n                iceGatherer: transports.iceGatherer,\n                iceTransport: transports.iceTransport,\n                dtlsTransport: transports.dtlsTransport,\n                localCapabilities: localCapabilities,\n                remoteCapabilities: remoteCapabilities,\n                rtpSender: rtpSender,\n                rtpReceiver: rtpReceiver,\n                kind: kind,\n                mid: mid,\n                cname: cname,\n                sendEncodingParameters: sendEncodingParameters,\n                recvEncodingParameters: recvEncodingParameters\n              };\n              // Start the RTCRtpReceiver now. The RTPSender is started in\n              // setLocalDescription.\n              self._transceive(self.transceivers[sdpMLineIndex],\n                  false,\n                  direction === 'sendrecv' || direction === 'sendonly');\n            } else if (description.type === 'answer' && !rejected) {\n              transceiver = self.transceivers[sdpMLineIndex];\n              iceGatherer = transceiver.iceGatherer;\n              iceTransport = transceiver.iceTransport;\n              dtlsTransport = transceiver.dtlsTransport;\n              rtpSender = transceiver.rtpSender;\n              rtpReceiver = transceiver.rtpReceiver;\n              sendEncodingParameters = transceiver.sendEncodingParameters;\n              localCapabilities = transceiver.localCapabilities;\n\n              self.transceivers[sdpMLineIndex].recvEncodingParameters =\n                  recvEncodingParameters;\n              self.transceivers[sdpMLineIndex].remoteCapabilities =\n                  remoteCapabilities;\n              self.transceivers[sdpMLineIndex].cname = cname;\n\n              if ((isIceLite || isComplete) && cands.length) {\n                iceTransport.setRemoteCandidates(cands);\n              }\n              if (!self.usingBundle || sdpMLineIndex === 0) {\n                iceTransport.start(iceGatherer, remoteIceParameters,\n                    'controlling');\n                dtlsTransport.start(remoteDtlsParameters);\n              }\n\n              self._transceive(transceiver,\n                  direction === 'sendrecv' || direction === 'recvonly',\n                  direction === 'sendrecv' || direction === 'sendonly');\n\n              if (rtpReceiver &&\n                  (direction === 'sendrecv' || direction === 'sendonly')) {\n                track = rtpReceiver.track;\n                receiverList.push([track, rtpReceiver]);\n                stream.addTrack(track);\n              } else {\n                // FIXME: actually the receiver should be created later.\n                delete transceiver.rtpReceiver;\n              }\n            }\n          });\n\n          this.remoteDescription = {\n            type: description.type,\n            sdp: description.sdp\n          };\n          switch (description.type) {\n            case 'offer':\n              this._updateSignalingState('have-remote-offer');\n              break;\n            case 'answer':\n              this._updateSignalingState('stable');\n              break;\n            default:\n              throw new TypeError('unsupported type \"' + description.type +\n                  '\"');\n          }\n          if (stream.getTracks().length) {\n            self.remoteStreams.push(stream);\n            window.setTimeout(function() {\n              var event = new Event('addstream');\n              event.stream = stream;\n              self.dispatchEvent(event);\n              if (self.onaddstream !== null) {\n                window.setTimeout(function() {\n                  self.onaddstream(event);\n                }, 0);\n              }\n\n              receiverList.forEach(function(item) {\n                var track = item[0];\n                var receiver = item[1];\n                var trackEvent = new Event('track');\n                trackEvent.track = track;\n                trackEvent.receiver = receiver;\n                trackEvent.streams = [stream];\n                self.dispatchEvent(event);\n                if (self.ontrack !== null) {\n                  window.setTimeout(function() {\n                    self.ontrack(trackEvent);\n                  }, 0);\n                }\n              });\n            }, 0);\n          }\n          if (arguments.length > 1 && typeof arguments[1] === 'function') {\n            window.setTimeout(arguments[1], 0);\n          }\n          return Promise.resolve();\n        };\n\n    window.RTCPeerConnection.prototype.close = function() {\n      this.transceivers.forEach(function(transceiver) {\n        /* not yet\n        if (transceiver.iceGatherer) {\n          transceiver.iceGatherer.close();\n        }\n        */\n        if (transceiver.iceTransport) {\n          transceiver.iceTransport.stop();\n        }\n        if (transceiver.dtlsTransport) {\n          transceiver.dtlsTransport.stop();\n        }\n        if (transceiver.rtpSender) {\n          transceiver.rtpSender.stop();\n        }\n        if (transceiver.rtpReceiver) {\n          transceiver.rtpReceiver.stop();\n        }\n      });\n      // FIXME: clean up tracks, local streams, remote streams, etc\n      this._updateSignalingState('closed');\n    };\n\n    // Update the signaling state.\n    window.RTCPeerConnection.prototype._updateSignalingState =\n        function(newState) {\n          this.signalingState = newState;\n          var event = new Event('signalingstatechange');\n          this.dispatchEvent(event);\n          if (this.onsignalingstatechange !== null) {\n            this.onsignalingstatechange(event);\n          }\n        };\n\n    // Determine whether to fire the negotiationneeded event.\n    window.RTCPeerConnection.prototype._maybeFireNegotiationNeeded =\n        function() {\n          // Fire away (for now).\n          var event = new Event('negotiationneeded');\n          this.dispatchEvent(event);\n          if (this.onnegotiationneeded !== null) {\n            this.onnegotiationneeded(event);\n          }\n        };\n\n    // Update the connection state.\n    window.RTCPeerConnection.prototype._updateConnectionState = function() {\n      var self = this;\n      var newState;\n      var states = {\n        'new': 0,\n        closed: 0,\n        connecting: 0,\n        checking: 0,\n        connected: 0,\n        completed: 0,\n        failed: 0\n      };\n      this.transceivers.forEach(function(transceiver) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      });\n      // ICETransport.completed and connected are the same for this purpose.\n      states.connected += states.completed;\n\n      newState = 'new';\n      if (states.failed > 0) {\n        newState = 'failed';\n      } else if (states.connecting > 0 || states.checking > 0) {\n        newState = 'connecting';\n      } else if (states.disconnected > 0) {\n        newState = 'disconnected';\n      } else if (states.new > 0) {\n        newState = 'new';\n      } else if (states.connected > 0 || states.completed > 0) {\n        newState = 'connected';\n      }\n\n      if (newState !== self.iceConnectionState) {\n        self.iceConnectionState = newState;\n        var event = new Event('iceconnectionstatechange');\n        this.dispatchEvent(event);\n        if (this.oniceconnectionstatechange !== null) {\n          this.oniceconnectionstatechange(event);\n        }\n      }\n    };\n\n    window.RTCPeerConnection.prototype.createOffer = function() {\n      var self = this;\n      if (this._pendingOffer) {\n        throw new Error('createOffer called while there is a pending offer.');\n      }\n      var offerOptions;\n      if (arguments.length === 1 && typeof arguments[0] !== 'function') {\n        offerOptions = arguments[0];\n      } else if (arguments.length === 3) {\n        offerOptions = arguments[2];\n      }\n\n      var tracks = [];\n      var numAudioTracks = 0;\n      var numVideoTracks = 0;\n      // Default to sendrecv.\n      if (this.localStreams.length) {\n        numAudioTracks = this.localStreams[0].getAudioTracks().length;\n        numVideoTracks = this.localStreams[0].getVideoTracks().length;\n      }\n      // Determine number of audio and video tracks we need to send/recv.\n      if (offerOptions) {\n        // Reject Chrome legacy constraints.\n        if (offerOptions.mandatory || offerOptions.optional) {\n          throw new TypeError(\n              'Legacy mandatory/optional constraints not supported.');\n        }\n        if (offerOptions.offerToReceiveAudio !== undefined) {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n        if (offerOptions.offerToReceiveVideo !== undefined) {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n      if (this.localStreams.length) {\n        // Push local streams.\n        this.localStreams[0].getTracks().forEach(function(track) {\n          tracks.push({\n            kind: track.kind,\n            track: track,\n            wantReceive: track.kind === 'audio' ?\n                numAudioTracks > 0 : numVideoTracks > 0\n          });\n          if (track.kind === 'audio') {\n            numAudioTracks--;\n          } else if (track.kind === 'video') {\n            numVideoTracks--;\n          }\n        });\n      }\n      // Create M-lines for recvonly streams.\n      while (numAudioTracks > 0 || numVideoTracks > 0) {\n        if (numAudioTracks > 0) {\n          tracks.push({\n            kind: 'audio',\n            wantReceive: true\n          });\n          numAudioTracks--;\n        }\n        if (numVideoTracks > 0) {\n          tracks.push({\n            kind: 'video',\n            wantReceive: true\n          });\n          numVideoTracks--;\n        }\n      }\n\n      var sdp = SDPUtils.writeSessionBoilerplate();\n      var transceivers = [];\n      tracks.forEach(function(mline, sdpMLineIndex) {\n        // For each track, create an ice gatherer, ice transport,\n        // dtls transport, potentially rtpsender and rtpreceiver.\n        var track = mline.track;\n        var kind = mline.kind;\n        var mid = SDPUtils.generateIdentifier();\n\n        var transports = self.usingBundle && sdpMLineIndex > 0 ? {\n          iceGatherer: transceivers[0].iceGatherer,\n          iceTransport: transceivers[0].iceTransport,\n          dtlsTransport: transceivers[0].dtlsTransport\n        } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n        var localCapabilities = RTCRtpSender.getCapabilities(kind);\n        var rtpSender;\n        var rtpReceiver;\n\n        // generate an ssrc now, to be used later in rtpSender.send\n        var sendEncodingParameters = [{\n          ssrc: (2 * sdpMLineIndex + 1) * 1001\n        }];\n        if (track) {\n          rtpSender = new RTCRtpSender(track, transports.dtlsTransport);\n        }\n\n        if (mline.wantReceive) {\n          rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport, kind);\n        }\n\n        transceivers[sdpMLineIndex] = {\n          iceGatherer: transports.iceGatherer,\n          iceTransport: transports.iceTransport,\n          dtlsTransport: transports.dtlsTransport,\n          localCapabilities: localCapabilities,\n          remoteCapabilities: null,\n          rtpSender: rtpSender,\n          rtpReceiver: rtpReceiver,\n          kind: kind,\n          mid: mid,\n          sendEncodingParameters: sendEncodingParameters,\n          recvEncodingParameters: null\n        };\n      });\n      if (this.usingBundle) {\n        sdp += 'a=group:BUNDLE ' + transceivers.map(function(t) {\n          return t.mid;\n        }).join(' ') + '\\r\\n';\n      }\n      tracks.forEach(function(mline, sdpMLineIndex) {\n        var transceiver = transceivers[sdpMLineIndex];\n        sdp += SDPUtils.writeMediaSection(transceiver,\n            transceiver.localCapabilities, 'offer', self.localStreams[0]);\n      });\n\n      this._pendingOffer = transceivers;\n      var desc = new RTCSessionDescription({\n        type: 'offer',\n        sdp: sdp\n      });\n      if (arguments.length && typeof arguments[0] === 'function') {\n        window.setTimeout(arguments[0], 0, desc);\n      }\n      return Promise.resolve(desc);\n    };\n\n    window.RTCPeerConnection.prototype.createAnswer = function() {\n      var self = this;\n\n      var sdp = SDPUtils.writeSessionBoilerplate();\n      if (this.usingBundle) {\n        sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\n          return t.mid;\n        }).join(' ') + '\\r\\n';\n      }\n      this.transceivers.forEach(function(transceiver) {\n        // Calculate intersection of capabilities.\n        var commonCapabilities = self._getCommonCapabilities(\n            transceiver.localCapabilities,\n            transceiver.remoteCapabilities);\n\n        sdp += SDPUtils.writeMediaSection(transceiver, commonCapabilities,\n            'answer', self.localStreams[0]);\n      });\n\n      var desc = new RTCSessionDescription({\n        type: 'answer',\n        sdp: sdp\n      });\n      if (arguments.length && typeof arguments[0] === 'function') {\n        window.setTimeout(arguments[0], 0, desc);\n      }\n      return Promise.resolve(desc);\n    };\n\n    window.RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n      if (candidate === null) {\n        this.transceivers.forEach(function(transceiver) {\n          transceiver.iceTransport.addRemoteCandidate({});\n        });\n      } else {\n        var mLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < this.transceivers.length; i++) {\n            if (this.transceivers[i].mid === candidate.sdpMid) {\n              mLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = this.transceivers[mLineIndex];\n        if (transceiver) {\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && cand.port === 0) {\n            return;\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component !== '1') {\n            return;\n          }\n          // A dirty hack to make samples work.\n          if (cand.type === 'endOfCandidates') {\n            cand = {};\n          }\n          transceiver.iceTransport.addRemoteCandidate(cand);\n\n          // update the remoteDescription.\n          var sections = SDPUtils.splitSections(this.remoteDescription.sdp);\n          sections[mLineIndex + 1] += (cand.type ? candidate.candidate.trim()\n              : 'a=end-of-candidates') + '\\r\\n';\n          this.remoteDescription.sdp = sections.join('');\n        }\n      }\n      if (arguments.length > 1 && typeof arguments[1] === 'function') {\n        window.setTimeout(arguments[1], 0);\n      }\n      return Promise.resolve();\n    };\n\n    window.RTCPeerConnection.prototype.getStats = function() {\n      var promises = [];\n      this.transceivers.forEach(function(transceiver) {\n        ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n            'dtlsTransport'].forEach(function(method) {\n              if (transceiver[method]) {\n                promises.push(transceiver[method].getStats());\n              }\n            });\n      });\n      var cb = arguments.length > 1 && typeof arguments[1] === 'function' &&\n          arguments[1];\n      return new Promise(function(resolve) {\n        // shim getStats with maplike support\n        var results = new Map();\n        Promise.all(promises).then(function(res) {\n          res.forEach(function(result) {\n            Object.keys(result).forEach(function(id) {\n              results.set(id, result[id]);\n              results[id] = result[id];\n            });\n          });\n          if (cb) {\n            window.setTimeout(cb, 0, results);\n          }\n          resolve(results);\n        });\n      });\n    };\n  },\n\n  // Attach a media stream to an element.\n  attachMediaStream: function(element, stream) {\n    logging('DEPRECATED, attachMediaStream will soon be removed.');\n    element.srcObject = stream;\n  },\n\n  reattachMediaStream: function(to, from) {\n    logging('DEPRECATED, reattachMediaStream will soon be removed.');\n    to.srcObject = from.srcObject;\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimPeerConnection: edgeShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia'),\n  attachMediaStream: edgeShim.attachMediaStream,\n  reattachMediaStream: edgeShim.reattachMediaStream\n};\n","map":{"mappings":[{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/webrtc-adapter/src/js/edge/edge_shim.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}}],"sources":{"node_modules/webrtc-adapter/src/js/edge/edge_shim.js":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nvar logging = require('../utils').log;\n\nvar edgeShim = {\n  shimPeerConnection: function() {\n    if (window.RTCIceGatherer) {\n      // ORTC defines an RTCIceCandidate object but no constructor.\n      // Not implemented in Edge.\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      // ORTC does not have a session description object but\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\n      // in the future might have this defined already.\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n    }\n\n    window.RTCPeerConnection = function(config) {\n      var self = this;\n\n      var _eventTarget = document.createDocumentFragment();\n      ['addEventListener', 'removeEventListener', 'dispatchEvent']\n          .forEach(function(method) {\n            self[method] = _eventTarget[method].bind(_eventTarget);\n          });\n\n      this.onicecandidate = null;\n      this.onaddstream = null;\n      this.ontrack = null;\n      this.onremovestream = null;\n      this.onsignalingstatechange = null;\n      this.oniceconnectionstatechange = null;\n      this.onnegotiationneeded = null;\n      this.ondatachannel = null;\n\n      this.localStreams = [];\n      this.remoteStreams = [];\n      this.getLocalStreams = function() {\n        return self.localStreams;\n      };\n      this.getRemoteStreams = function() {\n        return self.remoteStreams;\n      };\n\n      this.localDescription = new RTCSessionDescription({\n        type: '',\n        sdp: ''\n      });\n      this.remoteDescription = new RTCSessionDescription({\n        type: '',\n        sdp: ''\n      });\n      this.signalingState = 'stable';\n      this.iceConnectionState = 'new';\n      this.iceGatheringState = 'new';\n\n      this.iceOptions = {\n        gatherPolicy: 'all',\n        iceServers: []\n      };\n      if (config && config.iceTransportPolicy) {\n        switch (config.iceTransportPolicy) {\n          case 'all':\n          case 'relay':\n            this.iceOptions.gatherPolicy = config.iceTransportPolicy;\n            break;\n          case 'none':\n            // FIXME: remove once implementation and spec have added this.\n            throw new TypeError('iceTransportPolicy \"none\" not supported');\n          default:\n            // don't set iceTransportPolicy.\n            break;\n        }\n      }\n      this.usingBundle = config && config.bundlePolicy === 'max-bundle';\n\n      if (config && config.iceServers) {\n        // Edge does not like\n        // 1) stun:\n        // 2) turn: that does not have all of turn:host:port?transport=udp\n        var iceServers = JSON.parse(JSON.stringify(config.iceServers));\n        this.iceOptions.iceServers = iceServers.filter(function(server) {\n          if (server && server.urls) {\n            var urls = server.urls;\n            if (typeof urls === 'string') {\n              urls = [urls];\n            }\n            urls = urls.filter(function(url) {\n              return url.indexOf('turn:') === 0 &&\n                  url.indexOf('transport=udp') !== -1;\n            })[0];\n            return !!urls;\n          }\n          return false;\n        });\n      }\n\n      // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n      // everything that is needed to describe a SDP m-line.\n      this.transceivers = [];\n\n      // since the iceGatherer is currently created in createOffer but we\n      // must not emit candidates until after setLocalDescription we buffer\n      // them in this array.\n      this._localIceCandidatesBuffer = [];\n    };\n\n    window.RTCPeerConnection.prototype._emitBufferedCandidates = function() {\n      var self = this;\n      var sections = SDPUtils.splitSections(self.localDescription.sdp);\n      // FIXME: need to apply ice candidates in a way which is async but\n      // in-order\n      this._localIceCandidatesBuffer.forEach(function(event) {\n        var end = !event.candidate || Object.keys(event.candidate).length === 0;\n        if (end) {\n          for (var j = 1; j < sections.length; j++) {\n            if (sections[j].indexOf('\\r\\na=end-of-candidates\\r\\n') === -1) {\n              sections[j] += 'a=end-of-candidates\\r\\n';\n            }\n          }\n        } else if (event.candidate.candidate.indexOf('typ endOfCandidates')\n            === -1) {\n          sections[event.candidate.sdpMLineIndex + 1] +=\n              'a=' + event.candidate.candidate + '\\r\\n';\n        }\n        self.localDescription.sdp = sections.join('');\n        self.dispatchEvent(event);\n        if (self.onicecandidate !== null) {\n          self.onicecandidate(event);\n        }\n        if (!event.candidate && self.iceGatheringState !== 'complete') {\n          var complete = self.transceivers.every(function(transceiver) {\n            return transceiver.iceGatherer &&\n                transceiver.iceGatherer.state === 'completed';\n          });\n          if (complete) {\n            self.iceGatheringState = 'complete';\n          }\n        }\n      });\n      this._localIceCandidatesBuffer = [];\n    };\n\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      this.localStreams.push(stream.clone());\n      this._maybeFireNegotiationNeeded();\n    };\n\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var idx = this.localStreams.indexOf(stream);\n      if (idx > -1) {\n        this.localStreams.splice(idx, 1);\n        this._maybeFireNegotiationNeeded();\n      }\n    };\n\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      return this.transceivers.filter(function(transceiver) {\n        return !!transceiver.rtpSender;\n      })\n      .map(function(transceiver) {\n        return transceiver.rtpSender;\n      });\n    };\n\n    window.RTCPeerConnection.prototype.getReceivers = function() {\n      return this.transceivers.filter(function(transceiver) {\n        return !!transceiver.rtpReceiver;\n      })\n      .map(function(transceiver) {\n        return transceiver.rtpReceiver;\n      });\n    };\n\n    // Determines the intersection of local and remote capabilities.\n    window.RTCPeerConnection.prototype._getCommonCapabilities =\n        function(localCapabilities, remoteCapabilities) {\n          var commonCapabilities = {\n            codecs: [],\n            headerExtensions: [],\n            fecMechanisms: []\n          };\n          localCapabilities.codecs.forEach(function(lCodec) {\n            for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n              var rCodec = remoteCapabilities.codecs[i];\n              if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n                  lCodec.clockRate === rCodec.clockRate &&\n                  lCodec.numChannels === rCodec.numChannels) {\n                // push rCodec so we reply with offerer payload type\n                commonCapabilities.codecs.push(rCodec);\n\n                // FIXME: also need to determine intersection between\n                // .rtcpFeedback and .parameters\n                break;\n              }\n            }\n          });\n\n          localCapabilities.headerExtensions\n              .forEach(function(lHeaderExtension) {\n                for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n                     i++) {\n                  var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n                  if (lHeaderExtension.uri === rHeaderExtension.uri) {\n                    commonCapabilities.headerExtensions.push(rHeaderExtension);\n                    break;\n                  }\n                }\n              });\n\n          // FIXME: fecMechanisms\n          return commonCapabilities;\n        };\n\n    // Create ICE gatherer, ICE transport and DTLS transport.\n    window.RTCPeerConnection.prototype._createIceAndDtlsTransports =\n        function(mid, sdpMLineIndex) {\n          var self = this;\n          var iceGatherer = new RTCIceGatherer(self.iceOptions);\n          var iceTransport = new RTCIceTransport(iceGatherer);\n          iceGatherer.onlocalcandidate = function(evt) {\n            var event = new Event('icecandidate');\n            event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n            var cand = evt.candidate;\n            var end = !cand || Object.keys(cand).length === 0;\n            // Edge emits an empty object for RTCIceCandidateComplete‥\n            if (end) {\n              // polyfill since RTCIceGatherer.state is not implemented in\n              // Edge 10547 yet.\n              if (iceGatherer.state === undefined) {\n                iceGatherer.state = 'completed';\n              }\n\n              // Emit a candidate with type endOfCandidates to make the samples\n              // work. Edge requires addIceCandidate with this empty candidate\n              // to start checking. The real solution is to signal\n              // end-of-candidates to the other side when getting the null\n              // candidate but some apps (like the samples) don't do that.\n              event.candidate.candidate =\n                  'candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates';\n            } else {\n              // RTCIceCandidate doesn't have a component, needs to be added\n              cand.component = iceTransport.component === 'RTCP' ? 2 : 1;\n              event.candidate.candidate = SDPUtils.writeCandidate(cand);\n            }\n\n            // update local description.\n            var sections = SDPUtils.splitSections(self.localDescription.sdp);\n            if (event.candidate.candidate.indexOf('typ endOfCandidates')\n                === -1) {\n              sections[event.candidate.sdpMLineIndex + 1] +=\n                  'a=' + event.candidate.candidate + '\\r\\n';\n            } else {\n              sections[event.candidate.sdpMLineIndex + 1] +=\n                  'a=end-of-candidates\\r\\n';\n            }\n            self.localDescription.sdp = sections.join('');\n\n            var complete = self.transceivers.every(function(transceiver) {\n              return transceiver.iceGatherer &&\n                  transceiver.iceGatherer.state === 'completed';\n            });\n\n            // Emit candidate if localDescription is set.\n            // Also emits null candidate when all gatherers are complete.\n            switch (self.iceGatheringState) {\n              case 'new':\n                self._localIceCandidatesBuffer.push(event);\n                if (end && complete) {\n                  self._localIceCandidatesBuffer.push(\n                      new Event('icecandidate'));\n                }\n                break;\n              case 'gathering':\n                self._emitBufferedCandidates();\n                self.dispatchEvent(event);\n                if (self.onicecandidate !== null) {\n                  self.onicecandidate(event);\n                }\n                if (complete) {\n                  self.dispatchEvent(new Event('icecandidate'));\n                  if (self.onicecandidate !== null) {\n                    self.onicecandidate(new Event('icecandidate'));\n                  }\n                  self.iceGatheringState = 'complete';\n                }\n                break;\n              case 'complete':\n                // should not happen... currently!\n                break;\n              default: // no-op.\n                break;\n            }\n          };\n          iceTransport.onicestatechange = function() {\n            self._updateConnectionState();\n          };\n\n          var dtlsTransport = new RTCDtlsTransport(iceTransport);\n          dtlsTransport.ondtlsstatechange = function() {\n            self._updateConnectionState();\n          };\n          dtlsTransport.onerror = function() {\n            // onerror does not set state to failed by itself.\n            dtlsTransport.state = 'failed';\n            self._updateConnectionState();\n          };\n\n          return {\n            iceGatherer: iceGatherer,\n            iceTransport: iceTransport,\n            dtlsTransport: dtlsTransport\n          };\n        };\n\n    // Start the RTP Sender and Receiver for a transceiver.\n    window.RTCPeerConnection.prototype._transceive = function(transceiver,\n        send, recv) {\n      var params = this._getCommonCapabilities(transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n      if (send && transceiver.rtpSender) {\n        params.encodings = transceiver.sendEncodingParameters;\n        params.rtcp = {\n          cname: SDPUtils.localCName\n        };\n        if (transceiver.recvEncodingParameters.length) {\n          params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n        }\n        transceiver.rtpSender.send(params);\n      }\n      if (recv && transceiver.rtpReceiver) {\n        params.encodings = transceiver.recvEncodingParameters;\n        params.rtcp = {\n          cname: transceiver.cname\n        };\n        if (transceiver.sendEncodingParameters.length) {\n          params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n        }\n        transceiver.rtpReceiver.receive(params);\n      }\n    };\n\n    window.RTCPeerConnection.prototype.setLocalDescription =\n        function(description) {\n          var self = this;\n          var sections;\n          var sessionpart;\n          if (description.type === 'offer') {\n            // FIXME: What was the purpose of this empty if statement?\n            // if (!this._pendingOffer) {\n            // } else {\n            if (this._pendingOffer) {\n              // VERY limited support for SDP munging. Limited to:\n              // * changing the order of codecs\n              sections = SDPUtils.splitSections(description.sdp);\n              sessionpart = sections.shift();\n              sections.forEach(function(mediaSection, sdpMLineIndex) {\n                var caps = SDPUtils.parseRtpParameters(mediaSection);\n                self._pendingOffer[sdpMLineIndex].localCapabilities = caps;\n              });\n              this.transceivers = this._pendingOffer;\n              delete this._pendingOffer;\n            }\n          } else if (description.type === 'answer') {\n            sections = SDPUtils.splitSections(self.remoteDescription.sdp);\n            sessionpart = sections.shift();\n            var isIceLite = SDPUtils.matchPrefix(sessionpart,\n                'a=ice-lite').length > 0;\n            sections.forEach(function(mediaSection, sdpMLineIndex) {\n              var transceiver = self.transceivers[sdpMLineIndex];\n              var iceGatherer = transceiver.iceGatherer;\n              var iceTransport = transceiver.iceTransport;\n              var dtlsTransport = transceiver.dtlsTransport;\n              var localCapabilities = transceiver.localCapabilities;\n              var remoteCapabilities = transceiver.remoteCapabilities;\n              var rejected = mediaSection.split('\\n', 1)[0]\n                  .split(' ', 2)[1] === '0';\n\n              if (!rejected) {\n                var remoteIceParameters = SDPUtils.getIceParameters(\n                    mediaSection, sessionpart);\n                if (isIceLite) {\n                  var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n                  .map(function(cand) {\n                    return SDPUtils.parseCandidate(cand);\n                  })\n                  .filter(function(cand) {\n                    return cand.component === '1';\n                  });\n                  // ice-lite only includes host candidates in the SDP so we can\n                  // use setRemoteCandidates (which implies an\n                  // RTCIceCandidateComplete)\n                  if (cands.length) {\n                    iceTransport.setRemoteCandidates(cands);\n                  }\n                }\n                var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n                    mediaSection, sessionpart);\n                if (isIceLite) {\n                  remoteDtlsParameters.role = 'server';\n                }\n\n                if (!self.usingBundle || sdpMLineIndex === 0) {\n                  iceTransport.start(iceGatherer, remoteIceParameters,\n                      isIceLite ? 'controlling' : 'controlled');\n                  dtlsTransport.start(remoteDtlsParameters);\n                }\n\n                // Calculate intersection of capabilities.\n                var params = self._getCommonCapabilities(localCapabilities,\n                    remoteCapabilities);\n\n                // Start the RTCRtpSender. The RTCRtpReceiver for this\n                // transceiver has already been started in setRemoteDescription.\n                self._transceive(transceiver,\n                    params.codecs.length > 0,\n                    false);\n              }\n            });\n          }\n\n          this.localDescription = {\n            type: description.type,\n            sdp: description.sdp\n          };\n          switch (description.type) {\n            case 'offer':\n              this._updateSignalingState('have-local-offer');\n              break;\n            case 'answer':\n              this._updateSignalingState('stable');\n              break;\n            default:\n              throw new TypeError('unsupported type \"' + description.type +\n                  '\"');\n          }\n\n          // If a success callback was provided, emit ICE candidates after it\n          // has been executed. Otherwise, emit callback after the Promise is\n          // resolved.\n          var hasCallback = arguments.length > 1 &&\n            typeof arguments[1] === 'function';\n          if (hasCallback) {\n            var cb = arguments[1];\n            window.setTimeout(function() {\n              cb();\n              if (self.iceGatheringState === 'new') {\n                self.iceGatheringState = 'gathering';\n              }\n              self._emitBufferedCandidates();\n            }, 0);\n          }\n          var p = Promise.resolve();\n          p.then(function() {\n            if (!hasCallback) {\n              if (self.iceGatheringState === 'new') {\n                self.iceGatheringState = 'gathering';\n              }\n              // Usually candidates will be emitted earlier.\n              window.setTimeout(self._emitBufferedCandidates.bind(self), 500);\n            }\n          });\n          return p;\n        };\n\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n        function(description) {\n          var self = this;\n          var stream = new MediaStream();\n          var receiverList = [];\n          var sections = SDPUtils.splitSections(description.sdp);\n          var sessionpart = sections.shift();\n          var isIceLite = SDPUtils.matchPrefix(sessionpart,\n              'a=ice-lite').length > 0;\n          this.usingBundle = SDPUtils.matchPrefix(sessionpart,\n              'a=group:BUNDLE ').length > 0;\n          sections.forEach(function(mediaSection, sdpMLineIndex) {\n            var lines = SDPUtils.splitLines(mediaSection);\n            var mline = lines[0].substr(2).split(' ');\n            var kind = mline[0];\n            var rejected = mline[1] === '0';\n            var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n\n            var transceiver;\n            var iceGatherer;\n            var iceTransport;\n            var dtlsTransport;\n            var rtpSender;\n            var rtpReceiver;\n            var sendEncodingParameters;\n            var recvEncodingParameters;\n            var localCapabilities;\n\n            var track;\n            // FIXME: ensure the mediaSection has rtcp-mux set.\n            var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n            var remoteIceParameters;\n            var remoteDtlsParameters;\n            if (!rejected) {\n              remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n                  sessionpart);\n              remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n                  sessionpart);\n              remoteDtlsParameters.role = 'client';\n            }\n            recvEncodingParameters =\n                SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n            var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:');\n            if (mid.length) {\n              mid = mid[0].substr(6);\n            } else {\n              mid = SDPUtils.generateIdentifier();\n            }\n\n            var cname;\n            // Gets the first SSRC. Note that with RTX there might be multiple\n            // SSRCs.\n            var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n                .map(function(line) {\n                  return SDPUtils.parseSsrcMedia(line);\n                })\n                .filter(function(obj) {\n                  return obj.attribute === 'cname';\n                })[0];\n            if (remoteSsrc) {\n              cname = remoteSsrc.value;\n            }\n\n            var isComplete = SDPUtils.matchPrefix(mediaSection,\n                'a=end-of-candidates').length > 0;\n            var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n                .map(function(cand) {\n                  return SDPUtils.parseCandidate(cand);\n                })\n                .filter(function(cand) {\n                  return cand.component === '1';\n                });\n            if (description.type === 'offer' && !rejected) {\n              var transports = self.usingBundle && sdpMLineIndex > 0 ? {\n                iceGatherer: self.transceivers[0].iceGatherer,\n                iceTransport: self.transceivers[0].iceTransport,\n                dtlsTransport: self.transceivers[0].dtlsTransport\n              } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n              if (isComplete) {\n                transports.iceTransport.setRemoteCandidates(cands);\n              }\n\n              localCapabilities = RTCRtpReceiver.getCapabilities(kind);\n              sendEncodingParameters = [{\n                ssrc: (2 * sdpMLineIndex + 2) * 1001\n              }];\n\n              rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport, kind);\n\n              track = rtpReceiver.track;\n              receiverList.push([track, rtpReceiver]);\n              // FIXME: not correct when there are multiple streams but that is\n              // not currently supported in this shim.\n              stream.addTrack(track);\n\n              // FIXME: look at direction.\n              if (self.localStreams.length > 0 &&\n                  self.localStreams[0].getTracks().length >= sdpMLineIndex) {\n                // FIXME: actually more complicated, needs to match types etc\n                var localtrack = self.localStreams[0]\n                    .getTracks()[sdpMLineIndex];\n                rtpSender = new RTCRtpSender(localtrack,\n                    transports.dtlsTransport);\n              }\n\n              self.transceivers[sdpMLineIndex] = {\n                iceGatherer: transports.iceGatherer,\n                iceTransport: transports.iceTransport,\n                dtlsTransport: transports.dtlsTransport,\n                localCapabilities: localCapabilities,\n                remoteCapabilities: remoteCapabilities,\n                rtpSender: rtpSender,\n                rtpReceiver: rtpReceiver,\n                kind: kind,\n                mid: mid,\n                cname: cname,\n                sendEncodingParameters: sendEncodingParameters,\n                recvEncodingParameters: recvEncodingParameters\n              };\n              // Start the RTCRtpReceiver now. The RTPSender is started in\n              // setLocalDescription.\n              self._transceive(self.transceivers[sdpMLineIndex],\n                  false,\n                  direction === 'sendrecv' || direction === 'sendonly');\n            } else if (description.type === 'answer' && !rejected) {\n              transceiver = self.transceivers[sdpMLineIndex];\n              iceGatherer = transceiver.iceGatherer;\n              iceTransport = transceiver.iceTransport;\n              dtlsTransport = transceiver.dtlsTransport;\n              rtpSender = transceiver.rtpSender;\n              rtpReceiver = transceiver.rtpReceiver;\n              sendEncodingParameters = transceiver.sendEncodingParameters;\n              localCapabilities = transceiver.localCapabilities;\n\n              self.transceivers[sdpMLineIndex].recvEncodingParameters =\n                  recvEncodingParameters;\n              self.transceivers[sdpMLineIndex].remoteCapabilities =\n                  remoteCapabilities;\n              self.transceivers[sdpMLineIndex].cname = cname;\n\n              if ((isIceLite || isComplete) && cands.length) {\n                iceTransport.setRemoteCandidates(cands);\n              }\n              if (!self.usingBundle || sdpMLineIndex === 0) {\n                iceTransport.start(iceGatherer, remoteIceParameters,\n                    'controlling');\n                dtlsTransport.start(remoteDtlsParameters);\n              }\n\n              self._transceive(transceiver,\n                  direction === 'sendrecv' || direction === 'recvonly',\n                  direction === 'sendrecv' || direction === 'sendonly');\n\n              if (rtpReceiver &&\n                  (direction === 'sendrecv' || direction === 'sendonly')) {\n                track = rtpReceiver.track;\n                receiverList.push([track, rtpReceiver]);\n                stream.addTrack(track);\n              } else {\n                // FIXME: actually the receiver should be created later.\n                delete transceiver.rtpReceiver;\n              }\n            }\n          });\n\n          this.remoteDescription = {\n            type: description.type,\n            sdp: description.sdp\n          };\n          switch (description.type) {\n            case 'offer':\n              this._updateSignalingState('have-remote-offer');\n              break;\n            case 'answer':\n              this._updateSignalingState('stable');\n              break;\n            default:\n              throw new TypeError('unsupported type \"' + description.type +\n                  '\"');\n          }\n          if (stream.getTracks().length) {\n            self.remoteStreams.push(stream);\n            window.setTimeout(function() {\n              var event = new Event('addstream');\n              event.stream = stream;\n              self.dispatchEvent(event);\n              if (self.onaddstream !== null) {\n                window.setTimeout(function() {\n                  self.onaddstream(event);\n                }, 0);\n              }\n\n              receiverList.forEach(function(item) {\n                var track = item[0];\n                var receiver = item[1];\n                var trackEvent = new Event('track');\n                trackEvent.track = track;\n                trackEvent.receiver = receiver;\n                trackEvent.streams = [stream];\n                self.dispatchEvent(event);\n                if (self.ontrack !== null) {\n                  window.setTimeout(function() {\n                    self.ontrack(trackEvent);\n                  }, 0);\n                }\n              });\n            }, 0);\n          }\n          if (arguments.length > 1 && typeof arguments[1] === 'function') {\n            window.setTimeout(arguments[1], 0);\n          }\n          return Promise.resolve();\n        };\n\n    window.RTCPeerConnection.prototype.close = function() {\n      this.transceivers.forEach(function(transceiver) {\n        /* not yet\n        if (transceiver.iceGatherer) {\n          transceiver.iceGatherer.close();\n        }\n        */\n        if (transceiver.iceTransport) {\n          transceiver.iceTransport.stop();\n        }\n        if (transceiver.dtlsTransport) {\n          transceiver.dtlsTransport.stop();\n        }\n        if (transceiver.rtpSender) {\n          transceiver.rtpSender.stop();\n        }\n        if (transceiver.rtpReceiver) {\n          transceiver.rtpReceiver.stop();\n        }\n      });\n      // FIXME: clean up tracks, local streams, remote streams, etc\n      this._updateSignalingState('closed');\n    };\n\n    // Update the signaling state.\n    window.RTCPeerConnection.prototype._updateSignalingState =\n        function(newState) {\n          this.signalingState = newState;\n          var event = new Event('signalingstatechange');\n          this.dispatchEvent(event);\n          if (this.onsignalingstatechange !== null) {\n            this.onsignalingstatechange(event);\n          }\n        };\n\n    // Determine whether to fire the negotiationneeded event.\n    window.RTCPeerConnection.prototype._maybeFireNegotiationNeeded =\n        function() {\n          // Fire away (for now).\n          var event = new Event('negotiationneeded');\n          this.dispatchEvent(event);\n          if (this.onnegotiationneeded !== null) {\n            this.onnegotiationneeded(event);\n          }\n        };\n\n    // Update the connection state.\n    window.RTCPeerConnection.prototype._updateConnectionState = function() {\n      var self = this;\n      var newState;\n      var states = {\n        'new': 0,\n        closed: 0,\n        connecting: 0,\n        checking: 0,\n        connected: 0,\n        completed: 0,\n        failed: 0\n      };\n      this.transceivers.forEach(function(transceiver) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      });\n      // ICETransport.completed and connected are the same for this purpose.\n      states.connected += states.completed;\n\n      newState = 'new';\n      if (states.failed > 0) {\n        newState = 'failed';\n      } else if (states.connecting > 0 || states.checking > 0) {\n        newState = 'connecting';\n      } else if (states.disconnected > 0) {\n        newState = 'disconnected';\n      } else if (states.new > 0) {\n        newState = 'new';\n      } else if (states.connected > 0 || states.completed > 0) {\n        newState = 'connected';\n      }\n\n      if (newState !== self.iceConnectionState) {\n        self.iceConnectionState = newState;\n        var event = new Event('iceconnectionstatechange');\n        this.dispatchEvent(event);\n        if (this.oniceconnectionstatechange !== null) {\n          this.oniceconnectionstatechange(event);\n        }\n      }\n    };\n\n    window.RTCPeerConnection.prototype.createOffer = function() {\n      var self = this;\n      if (this._pendingOffer) {\n        throw new Error('createOffer called while there is a pending offer.');\n      }\n      var offerOptions;\n      if (arguments.length === 1 && typeof arguments[0] !== 'function') {\n        offerOptions = arguments[0];\n      } else if (arguments.length === 3) {\n        offerOptions = arguments[2];\n      }\n\n      var tracks = [];\n      var numAudioTracks = 0;\n      var numVideoTracks = 0;\n      // Default to sendrecv.\n      if (this.localStreams.length) {\n        numAudioTracks = this.localStreams[0].getAudioTracks().length;\n        numVideoTracks = this.localStreams[0].getVideoTracks().length;\n      }\n      // Determine number of audio and video tracks we need to send/recv.\n      if (offerOptions) {\n        // Reject Chrome legacy constraints.\n        if (offerOptions.mandatory || offerOptions.optional) {\n          throw new TypeError(\n              'Legacy mandatory/optional constraints not supported.');\n        }\n        if (offerOptions.offerToReceiveAudio !== undefined) {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n        if (offerOptions.offerToReceiveVideo !== undefined) {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n      if (this.localStreams.length) {\n        // Push local streams.\n        this.localStreams[0].getTracks().forEach(function(track) {\n          tracks.push({\n            kind: track.kind,\n            track: track,\n            wantReceive: track.kind === 'audio' ?\n                numAudioTracks > 0 : numVideoTracks > 0\n          });\n          if (track.kind === 'audio') {\n            numAudioTracks--;\n          } else if (track.kind === 'video') {\n            numVideoTracks--;\n          }\n        });\n      }\n      // Create M-lines for recvonly streams.\n      while (numAudioTracks > 0 || numVideoTracks > 0) {\n        if (numAudioTracks > 0) {\n          tracks.push({\n            kind: 'audio',\n            wantReceive: true\n          });\n          numAudioTracks--;\n        }\n        if (numVideoTracks > 0) {\n          tracks.push({\n            kind: 'video',\n            wantReceive: true\n          });\n          numVideoTracks--;\n        }\n      }\n\n      var sdp = SDPUtils.writeSessionBoilerplate();\n      var transceivers = [];\n      tracks.forEach(function(mline, sdpMLineIndex) {\n        // For each track, create an ice gatherer, ice transport,\n        // dtls transport, potentially rtpsender and rtpreceiver.\n        var track = mline.track;\n        var kind = mline.kind;\n        var mid = SDPUtils.generateIdentifier();\n\n        var transports = self.usingBundle && sdpMLineIndex > 0 ? {\n          iceGatherer: transceivers[0].iceGatherer,\n          iceTransport: transceivers[0].iceTransport,\n          dtlsTransport: transceivers[0].dtlsTransport\n        } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n        var localCapabilities = RTCRtpSender.getCapabilities(kind);\n        var rtpSender;\n        var rtpReceiver;\n\n        // generate an ssrc now, to be used later in rtpSender.send\n        var sendEncodingParameters = [{\n          ssrc: (2 * sdpMLineIndex + 1) * 1001\n        }];\n        if (track) {\n          rtpSender = new RTCRtpSender(track, transports.dtlsTransport);\n        }\n\n        if (mline.wantReceive) {\n          rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport, kind);\n        }\n\n        transceivers[sdpMLineIndex] = {\n          iceGatherer: transports.iceGatherer,\n          iceTransport: transports.iceTransport,\n          dtlsTransport: transports.dtlsTransport,\n          localCapabilities: localCapabilities,\n          remoteCapabilities: null,\n          rtpSender: rtpSender,\n          rtpReceiver: rtpReceiver,\n          kind: kind,\n          mid: mid,\n          sendEncodingParameters: sendEncodingParameters,\n          recvEncodingParameters: null\n        };\n      });\n      if (this.usingBundle) {\n        sdp += 'a=group:BUNDLE ' + transceivers.map(function(t) {\n          return t.mid;\n        }).join(' ') + '\\r\\n';\n      }\n      tracks.forEach(function(mline, sdpMLineIndex) {\n        var transceiver = transceivers[sdpMLineIndex];\n        sdp += SDPUtils.writeMediaSection(transceiver,\n            transceiver.localCapabilities, 'offer', self.localStreams[0]);\n      });\n\n      this._pendingOffer = transceivers;\n      var desc = new RTCSessionDescription({\n        type: 'offer',\n        sdp: sdp\n      });\n      if (arguments.length && typeof arguments[0] === 'function') {\n        window.setTimeout(arguments[0], 0, desc);\n      }\n      return Promise.resolve(desc);\n    };\n\n    window.RTCPeerConnection.prototype.createAnswer = function() {\n      var self = this;\n\n      var sdp = SDPUtils.writeSessionBoilerplate();\n      if (this.usingBundle) {\n        sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\n          return t.mid;\n        }).join(' ') + '\\r\\n';\n      }\n      this.transceivers.forEach(function(transceiver) {\n        // Calculate intersection of capabilities.\n        var commonCapabilities = self._getCommonCapabilities(\n            transceiver.localCapabilities,\n            transceiver.remoteCapabilities);\n\n        sdp += SDPUtils.writeMediaSection(transceiver, commonCapabilities,\n            'answer', self.localStreams[0]);\n      });\n\n      var desc = new RTCSessionDescription({\n        type: 'answer',\n        sdp: sdp\n      });\n      if (arguments.length && typeof arguments[0] === 'function') {\n        window.setTimeout(arguments[0], 0, desc);\n      }\n      return Promise.resolve(desc);\n    };\n\n    window.RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n      if (candidate === null) {\n        this.transceivers.forEach(function(transceiver) {\n          transceiver.iceTransport.addRemoteCandidate({});\n        });\n      } else {\n        var mLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < this.transceivers.length; i++) {\n            if (this.transceivers[i].mid === candidate.sdpMid) {\n              mLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = this.transceivers[mLineIndex];\n        if (transceiver) {\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && cand.port === 0) {\n            return;\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component !== '1') {\n            return;\n          }\n          // A dirty hack to make samples work.\n          if (cand.type === 'endOfCandidates') {\n            cand = {};\n          }\n          transceiver.iceTransport.addRemoteCandidate(cand);\n\n          // update the remoteDescription.\n          var sections = SDPUtils.splitSections(this.remoteDescription.sdp);\n          sections[mLineIndex + 1] += (cand.type ? candidate.candidate.trim()\n              : 'a=end-of-candidates') + '\\r\\n';\n          this.remoteDescription.sdp = sections.join('');\n        }\n      }\n      if (arguments.length > 1 && typeof arguments[1] === 'function') {\n        window.setTimeout(arguments[1], 0);\n      }\n      return Promise.resolve();\n    };\n\n    window.RTCPeerConnection.prototype.getStats = function() {\n      var promises = [];\n      this.transceivers.forEach(function(transceiver) {\n        ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n            'dtlsTransport'].forEach(function(method) {\n              if (transceiver[method]) {\n                promises.push(transceiver[method].getStats());\n              }\n            });\n      });\n      var cb = arguments.length > 1 && typeof arguments[1] === 'function' &&\n          arguments[1];\n      return new Promise(function(resolve) {\n        // shim getStats with maplike support\n        var results = new Map();\n        Promise.all(promises).then(function(res) {\n          res.forEach(function(result) {\n            Object.keys(result).forEach(function(id) {\n              results.set(id, result[id]);\n              results[id] = result[id];\n            });\n          });\n          if (cb) {\n            window.setTimeout(cb, 0, results);\n          }\n          resolve(results);\n        });\n      });\n    };\n  },\n\n  // Attach a media stream to an element.\n  attachMediaStream: function(element, stream) {\n    logging('DEPRECATED, attachMediaStream will soon be removed.');\n    element.srcObject = stream;\n  },\n\n  reattachMediaStream: function(to, from) {\n    logging('DEPRECATED, reattachMediaStream will soon be removed.');\n    to.srcObject = from.srcObject;\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimPeerConnection: edgeShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia'),\n  attachMediaStream: edgeShim.attachMediaStream,\n  reattachMediaStream: edgeShim.reattachMediaStream\n};\n"},"lineCount":1050}},"hash":"90e75122e841b5f7449a8e7eae6c930e","cacheData":{"env":{}}}