{"id":"node_modules/truffle-contract-schema/index.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/package.json","includedInParent":true,"mtime":1535727512013},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"crypto-js/sha3","loc":{"line":1,"column":19},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/node_modules/crypto-js/sha3.js"},{"name":"./package.json","loc":{"line":2,"column":25},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/package.json"},{"name":"ajv","loc":{"line":3,"column":18},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/node_modules/ajv/lib/ajv.js"},{"name":"./spec/contract-object.spec.json","loc":{"line":5,"column":35},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/spec/contract-object.spec.json"},{"name":"./spec/network-object.spec.json","loc":{"line":6,"column":34},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/spec/network-object.spec.json"},{"name":"./spec/abi.spec.json","loc":{"line":7,"column":24},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract-schema/spec/abi.spec.json"}],"generated":{"js":"var sha3 = require(\"crypto-js/sha3\");\nvar pkgVersion = require(\"./package.json\").version;\nvar Ajv = require(\"ajv\");\n\nvar contractObjectSchema = require(\"./spec/contract-object.spec.json\");\nvar networkObjectSchema = require(\"./spec/network-object.spec.json\");\nvar abiSchema = require(\"./spec/abi.spec.json\");\n\n\n/**\n * Property definitions for Contract Objects\n *\n * Describes canonical output properties as sourced from some \"dirty\" input\n * object. Describes normalization process to account for deprecated and/or\n * nonstandard keys and values.\n *\n * Maps (key -> property) where:\n *  - `key` is the top-level output key matching up with those in the schema\n *  - `property` is an object with optional values:\n *      - `sources`: list of sources (see below); default `key`\n *      - `transform`: function(value) -> transformed value; default x -> x\n *\n * Each source represents a means to select a value from dirty object.\n * Allows:\n *  - dot-separated (`.`) string, corresponding to path to value in dirty\n *    object\n *  - function(dirtyObj) -> (cleanValue | undefined)\n *\n * The optional `transform` parameter standardizes value regardless of source,\n * for purposes of ensuring data type and/or string schemas.\n */\nvar properties = {\n  \"contractName\": {\n    \"sources\": [\"contractName\", \"contract_name\"]\n  },\n  \"abi\": {\n    \"sources\": [\"abi\", \"interface\"],\n    \"transform\": function(value) {\n      if (typeof value === \"string\") {\n        try {\n          value = JSON.parse(value)\n        } catch (e) {\n          value = undefined;\n        }\n      }\n      return value;\n    }\n  },\n  \"bytecode\": {\n    \"sources\": [\n      \"bytecode\", \"binary\", \"unlinked_binary\", \"evm.bytecode.object\"\n    ],\n    \"transform\": function(value) {\n      if (value && value.indexOf(\"0x\") != 0) {\n        value = \"0x\" + value;\n      }\n      return value;\n    }\n  },\n  \"deployedBytecode\": {\n    \"sources\": [\n      \"deployedBytecode\", \"runtimeBytecode\", \"evm.deployedBytecode.object\"\n    ],\n    \"transform\": function(value) {\n      if (value && value.indexOf(\"0x\") != 0) {\n        value = \"0x\" + value;\n      }\n      return value;\n    }\n  },\n  \"sourceMap\": {\n    \"sources\": [\"sourceMap\", \"srcmap\", \"evm.bytecode.sourceMap\"]\n  },\n  \"deployedSourceMap\": {\n    \"sources\": [\"deployedSourceMap\", \"srcmapRuntime\", \"evm.deployedBytecode.sourceMap\"]\n  },\n  \"source\": {},\n  \"sourcePath\": {},\n  \"ast\": {},\n  \"legacyAST\": {\n    \"transform\": function(value, obj) {\n      var schemaVersion = obj.schemaVersion || \"0.0.0\";\n\n      // legacyAST introduced in v2.0.0\n      if (schemaVersion[0] < 2) {\n        return obj.ast;\n      } else {\n        return value\n      }\n    }\n  },\n  \"compiler\": {},\n  \"networks\": {\n    \"transform\": function(value) {\n      if (value === undefined) {\n        value = {}\n      }\n      return value;\n    }\n  },\n  \"schemaVersion\": {\n    \"sources\": [\"schemaVersion\", \"schema_version\"]\n  },\n  \"updatedAt\": {\n    \"sources\": [\"updatedAt\", \"updated_at\"],\n    \"transform\": function(value) {\n      if (typeof value === \"number\") {\n        value = new Date(value).toISOString();\n      }\n      return value;\n    }\n  }\n};\n\n\n/**\n * Construct a getter for a given key, possibly applying some post-retrieve\n * transformation on the resulting value.\n *\n * @return {Function} Accepting dirty object and returning value || undefined\n */\nfunction getter(key, transform) {\n  if (transform === undefined) {\n    transform = function(x) { return x };\n  }\n\n  return function(obj) {\n    try {\n      return transform(obj[key]);\n    } catch (e) {\n      return undefined;\n    }\n  }\n}\n\n\n/**\n * Chains together a series of function(obj) -> value, passing resulting\n * returned value to next function in chain.\n *\n * Accepts any number of functions passed as arguments\n * @return {Function} Accepting initial object, returning end-of-chain value\n *\n * Assumes all intermediary values to be objects, with well-formed sequence\n * of operations.\n */\nfunction chain() {\n  var getters = Array.prototype.slice.call(arguments);\n  return function(obj) {\n    return getters.reduce(function (cur, get) {\n      return get(cur);\n    }, obj);\n  }\n}\n\n\n// Schema module\n//\n\nvar TruffleContractSchema = {\n  // Return a promise to validate a contract object\n  // - Resolves as validated `contractObj`\n  // - Rejects with list of errors from schema validator\n  validate: function(contractObj) {\n    var ajv = new Ajv({ useDefaults: true });\n    ajv.addSchema(abiSchema);\n    ajv.addSchema(networkObjectSchema);\n    ajv.addSchema(contractObjectSchema);\n    if (ajv.validate(\"contract-object.spec.json\", contractObj)) {\n      return contractObj;\n    } else {\n      throw ajv.errors;\n    }\n  },\n\n  // accepts as argument anything that can be turned into a contract object\n  // returns a contract object\n  normalize: function(objDirty, options) {\n    options = options || {};\n    var normalized = {};\n\n    // iterate over each property\n    Object.keys(properties).forEach(function(key) {\n      var property = properties[key];\n      var value;  // normalized value || undefined\n\n      // either used the defined sources or assume the key will only ever be\n      // listed as its canonical name (itself)\n      var sources = property.sources || [key];\n\n      // iterate over sources until value is defined or end of list met\n      for (var i = 0; value === undefined && i < sources.length; i++) {\n        var source = sources[i];\n        // string refers to path to value in objDirty, split and chain\n        // getters\n        if (typeof source === \"string\") {\n          var traversals = source.split(\".\")\n            .map(function(k) { return getter(k) });\n          source = chain.apply(null, traversals);\n        }\n\n        // source should be a function that takes the objDirty and returns\n        // value or undefined\n        value = source(objDirty);\n      }\n\n      // run source-agnostic transform on value\n      // (e.g. make sure bytecode begins 0x)\n      if (property.transform) {\n        value = property.transform(value, objDirty);\n      }\n\n      // add resulting (possibly undefined) to normalized obj\n      normalized[key] = value;\n    });\n\n    // Copy x- options\n    Object.keys(objDirty).forEach(function(key) {\n      if (key.indexOf(\"x-\") === 0) {\n        normalized[key] = getter(key)(objDirty);\n      }\n    });\n\n    // update schema version\n    normalized.schemaVersion = pkgVersion;\n\n    if (options.validate) {\n      this.validate(normalized);\n    }\n\n    return normalized\n  }\n};\n\nmodule.exports = TruffleContractSchema;\n","map":{"mappings":[{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/truffle-contract-schema/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}}],"sources":{"node_modules/truffle-contract-schema/index.js":"var sha3 = require(\"crypto-js/sha3\");\nvar pkgVersion = require(\"./package.json\").version;\nvar Ajv = require(\"ajv\");\n\nvar contractObjectSchema = require(\"./spec/contract-object.spec.json\");\nvar networkObjectSchema = require(\"./spec/network-object.spec.json\");\nvar abiSchema = require(\"./spec/abi.spec.json\");\n\n\n/**\n * Property definitions for Contract Objects\n *\n * Describes canonical output properties as sourced from some \"dirty\" input\n * object. Describes normalization process to account for deprecated and/or\n * nonstandard keys and values.\n *\n * Maps (key -> property) where:\n *  - `key` is the top-level output key matching up with those in the schema\n *  - `property` is an object with optional values:\n *      - `sources`: list of sources (see below); default `key`\n *      - `transform`: function(value) -> transformed value; default x -> x\n *\n * Each source represents a means to select a value from dirty object.\n * Allows:\n *  - dot-separated (`.`) string, corresponding to path to value in dirty\n *    object\n *  - function(dirtyObj) -> (cleanValue | undefined)\n *\n * The optional `transform` parameter standardizes value regardless of source,\n * for purposes of ensuring data type and/or string schemas.\n */\nvar properties = {\n  \"contractName\": {\n    \"sources\": [\"contractName\", \"contract_name\"]\n  },\n  \"abi\": {\n    \"sources\": [\"abi\", \"interface\"],\n    \"transform\": function(value) {\n      if (typeof value === \"string\") {\n        try {\n          value = JSON.parse(value)\n        } catch (e) {\n          value = undefined;\n        }\n      }\n      return value;\n    }\n  },\n  \"bytecode\": {\n    \"sources\": [\n      \"bytecode\", \"binary\", \"unlinked_binary\", \"evm.bytecode.object\"\n    ],\n    \"transform\": function(value) {\n      if (value && value.indexOf(\"0x\") != 0) {\n        value = \"0x\" + value;\n      }\n      return value;\n    }\n  },\n  \"deployedBytecode\": {\n    \"sources\": [\n      \"deployedBytecode\", \"runtimeBytecode\", \"evm.deployedBytecode.object\"\n    ],\n    \"transform\": function(value) {\n      if (value && value.indexOf(\"0x\") != 0) {\n        value = \"0x\" + value;\n      }\n      return value;\n    }\n  },\n  \"sourceMap\": {\n    \"sources\": [\"sourceMap\", \"srcmap\", \"evm.bytecode.sourceMap\"]\n  },\n  \"deployedSourceMap\": {\n    \"sources\": [\"deployedSourceMap\", \"srcmapRuntime\", \"evm.deployedBytecode.sourceMap\"]\n  },\n  \"source\": {},\n  \"sourcePath\": {},\n  \"ast\": {},\n  \"legacyAST\": {\n    \"transform\": function(value, obj) {\n      var schemaVersion = obj.schemaVersion || \"0.0.0\";\n\n      // legacyAST introduced in v2.0.0\n      if (schemaVersion[0] < 2) {\n        return obj.ast;\n      } else {\n        return value\n      }\n    }\n  },\n  \"compiler\": {},\n  \"networks\": {\n    \"transform\": function(value) {\n      if (value === undefined) {\n        value = {}\n      }\n      return value;\n    }\n  },\n  \"schemaVersion\": {\n    \"sources\": [\"schemaVersion\", \"schema_version\"]\n  },\n  \"updatedAt\": {\n    \"sources\": [\"updatedAt\", \"updated_at\"],\n    \"transform\": function(value) {\n      if (typeof value === \"number\") {\n        value = new Date(value).toISOString();\n      }\n      return value;\n    }\n  }\n};\n\n\n/**\n * Construct a getter for a given key, possibly applying some post-retrieve\n * transformation on the resulting value.\n *\n * @return {Function} Accepting dirty object and returning value || undefined\n */\nfunction getter(key, transform) {\n  if (transform === undefined) {\n    transform = function(x) { return x };\n  }\n\n  return function(obj) {\n    try {\n      return transform(obj[key]);\n    } catch (e) {\n      return undefined;\n    }\n  }\n}\n\n\n/**\n * Chains together a series of function(obj) -> value, passing resulting\n * returned value to next function in chain.\n *\n * Accepts any number of functions passed as arguments\n * @return {Function} Accepting initial object, returning end-of-chain value\n *\n * Assumes all intermediary values to be objects, with well-formed sequence\n * of operations.\n */\nfunction chain() {\n  var getters = Array.prototype.slice.call(arguments);\n  return function(obj) {\n    return getters.reduce(function (cur, get) {\n      return get(cur);\n    }, obj);\n  }\n}\n\n\n// Schema module\n//\n\nvar TruffleContractSchema = {\n  // Return a promise to validate a contract object\n  // - Resolves as validated `contractObj`\n  // - Rejects with list of errors from schema validator\n  validate: function(contractObj) {\n    var ajv = new Ajv({ useDefaults: true });\n    ajv.addSchema(abiSchema);\n    ajv.addSchema(networkObjectSchema);\n    ajv.addSchema(contractObjectSchema);\n    if (ajv.validate(\"contract-object.spec.json\", contractObj)) {\n      return contractObj;\n    } else {\n      throw ajv.errors;\n    }\n  },\n\n  // accepts as argument anything that can be turned into a contract object\n  // returns a contract object\n  normalize: function(objDirty, options) {\n    options = options || {};\n    var normalized = {};\n\n    // iterate over each property\n    Object.keys(properties).forEach(function(key) {\n      var property = properties[key];\n      var value;  // normalized value || undefined\n\n      // either used the defined sources or assume the key will only ever be\n      // listed as its canonical name (itself)\n      var sources = property.sources || [key];\n\n      // iterate over sources until value is defined or end of list met\n      for (var i = 0; value === undefined && i < sources.length; i++) {\n        var source = sources[i];\n        // string refers to path to value in objDirty, split and chain\n        // getters\n        if (typeof source === \"string\") {\n          var traversals = source.split(\".\")\n            .map(function(k) { return getter(k) });\n          source = chain.apply(null, traversals);\n        }\n\n        // source should be a function that takes the objDirty and returns\n        // value or undefined\n        value = source(objDirty);\n      }\n\n      // run source-agnostic transform on value\n      // (e.g. make sure bytecode begins 0x)\n      if (property.transform) {\n        value = property.transform(value, objDirty);\n      }\n\n      // add resulting (possibly undefined) to normalized obj\n      normalized[key] = value;\n    });\n\n    // Copy x- options\n    Object.keys(objDirty).forEach(function(key) {\n      if (key.indexOf(\"x-\") === 0) {\n        normalized[key] = getter(key)(objDirty);\n      }\n    });\n\n    // update schema version\n    normalized.schemaVersion = pkgVersion;\n\n    if (options.validate) {\n      this.validate(normalized);\n    }\n\n    return normalized\n  }\n};\n\nmodule.exports = TruffleContractSchema;\n"},"lineCount":236}},"hash":"6fe0006344ea848df0fb3256669e5df8","cacheData":{"env":{}}}