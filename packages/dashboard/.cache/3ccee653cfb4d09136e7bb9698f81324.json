{"id":"node_modules/cwise-compiler/lib/thunk.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/cwise-compiler/package.json","includedInParent":true,"mtime":1535727513053},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"./compile.js","loc":{"line":26,"column":22},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/cwise-compiler/lib/thunk.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/cwise-compiler/lib/compile.js"}],"generated":{"js":"\"use strict\"\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = require(\"./compile.js\")\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n","map":{"mappings":[{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/cwise-compiler/lib/thunk.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}}],"sources":{"node_modules/cwise-compiler/lib/thunk.js":"\"use strict\"\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = require(\"./compile.js\")\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n"},"lineCount":87}},"hash":"2c995b102e771d4516478ee4d4151627","cacheData":{"env":{}}}