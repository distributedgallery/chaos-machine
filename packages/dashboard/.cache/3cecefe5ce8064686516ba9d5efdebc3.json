{"id":"node_modules/@serialport/parser-cctalk/cctalk.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/@serialport/parser-cctalk/package.json","includedInParent":true,"mtime":1535727511604},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"stream","loc":{"line":2,"column":26},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/@serialport/parser-cctalk/cctalk.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/stream-browserify/index.js"},{"name":"safe-buffer","loc":{"line":3,"column":23},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/@serialport/parser-cctalk/cctalk.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/safe-buffer/index.js"}],"generated":{"js":"\n'use strict'\nconst Transform = require('stream').Transform\nconst Buffer = require('safe-buffer').Buffer\n\n/**\n * Parse the CCTalk protocol\n * @extends Transform\n * @summary A transform stream that emits CCTalk packets as they are received.\n * @example\nconst SerialPort = require('serialport')\nconst CCTalk = require('@serialport/parser-cctalk')\nconst port = new SerialPort('/dev/ttyUSB0')\nconst parser = port.pipe(new CCtalk())\nparser.on('data', console.log)\n */\nclass CCTalkParser extends Transform {\n  constructor () {\n    super()\n    this.array = []\n    this.cursor = 0\n  }\n  _transform (buffer, _, cb) {\n    this.cursor += buffer.length\n    // TODO: Better Faster es7 no supported by node 4\n    // ES7 allows directly push [...buffer]\n    // this.array = this.array.concat(Array.from(buffer)) //Slower ?!?\n    Array.from(buffer)\n      .map((byte) => this.array.push(byte))\n    while (this.cursor > 1 && this.cursor >= this.array[1] + 5) {\n      // full frame accumulated\n      // copy command from the array\n      const FullMsgLength = this.array[1] + 5\n\n      const frame = Buffer.from(this.array.slice(0, FullMsgLength))\n      // Preserve Extra Data\n      this.array = this.array.slice(frame.length, this.array.length)\n      this.cursor -= FullMsgLength\n      this.push(frame)\n    }\n    cb()\n  }\n}\n\nmodule.exports = CCTalkParser\n","map":{"mappings":[{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@serialport/parser-cctalk/cctalk.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}}],"sources":{"node_modules/@serialport/parser-cctalk/cctalk.js":"'use strict'\nconst Transform = require('stream').Transform\nconst Buffer = require('safe-buffer').Buffer\n\n/**\n * Parse the CCTalk protocol\n * @extends Transform\n * @summary A transform stream that emits CCTalk packets as they are received.\n * @example\nconst SerialPort = require('serialport')\nconst CCTalk = require('@serialport/parser-cctalk')\nconst port = new SerialPort('/dev/ttyUSB0')\nconst parser = port.pipe(new CCtalk())\nparser.on('data', console.log)\n */\nclass CCTalkParser extends Transform {\n  constructor () {\n    super()\n    this.array = []\n    this.cursor = 0\n  }\n  _transform (buffer, _, cb) {\n    this.cursor += buffer.length\n    // TODO: Better Faster es7 no supported by node 4\n    // ES7 allows directly push [...buffer]\n    // this.array = this.array.concat(Array.from(buffer)) //Slower ?!?\n    Array.from(buffer)\n      .map((byte) => this.array.push(byte))\n    while (this.cursor > 1 && this.cursor >= this.array[1] + 5) {\n      // full frame accumulated\n      // copy command from the array\n      const FullMsgLength = this.array[1] + 5\n\n      const frame = Buffer.from(this.array.slice(0, FullMsgLength))\n      // Preserve Extra Data\n      this.array = this.array.slice(frame.length, this.array.length)\n      this.cursor -= FullMsgLength\n      this.push(frame)\n    }\n    cb()\n  }\n}\n\nmodule.exports = CCTalkParser\n"},"lineCount":46}},"hash":"d5bad906ceff7eafc0d6dd3af260699a","cacheData":{"env":{}}}