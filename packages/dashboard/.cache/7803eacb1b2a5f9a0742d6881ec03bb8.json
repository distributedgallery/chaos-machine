{"id":"node_modules/multicodec/src/name-table.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/multicodec/package.json","includedInParent":true,"mtime":1533205844948},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1533219493444},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"./base-table","loc":{"line":2,"column":26},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/multicodec/src/name-table.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/multicodec/src/base-table.js"}],"generated":{"js":"'use strict'\nconst baseTable = require('./base-table')\n\n// this creates a map for code as hexString -> codecName\n\nconst nameTable = {}\nmodule.exports = nameTable\n\nfor (let encodingName in baseTable) {\n  let code = baseTable[encodingName]\n  nameTable[code.toString('hex')] = encodingName\n}\n","map":{"mappings":[{"source":"node_modules/multicodec/src/name-table.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/multicodec/src/name-table.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}}],"sources":{"node_modules/multicodec/src/name-table.js":"'use strict'\nconst baseTable = require('./base-table')\n\n// this creates a map for code as hexString -> codecName\n\nconst nameTable = {}\nmodule.exports = nameTable\n\nfor (let encodingName in baseTable) {\n  let code = baseTable[encodingName]\n  nameTable[code.toString('hex')] = encodingName\n}\n"},"lineCount":13}},"hash":"af1b8c17d968b22e49cea7016683ab97","cacheData":{"env":{}}}