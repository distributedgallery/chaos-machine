{"id":"node_modules/crypto-js/lib-typedarrays.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/package.json","includedInParent":true,"mtime":1533122127393},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"./core","loc":{"line":4,"column":45},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/lib-typedarrays.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/core.js"}],"generated":{"js":"var define;\n;(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));","map":{"mappings":[{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/crypto-js/lib-typedarrays.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}}],"sources":{"node_modules/crypto-js/lib-typedarrays.js":";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));"},"lineCount":77}},"hash":"8e3c89e11b24bc1cdf91215b9e54b1fa","cacheData":{"env":{}}}