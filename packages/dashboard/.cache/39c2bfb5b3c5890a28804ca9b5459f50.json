{"id":"node_modules/cwise-compiler/compiler.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/cwise-compiler/package.json","includedInParent":true,"mtime":1535727513053},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"./lib/thunk.js","loc":{"line":3,"column":26},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/cwise-compiler/compiler.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/cwise-compiler/lib/thunk.js"}],"generated":{"js":"\"use strict\"\n\nvar createThunk = require(\"./lib/thunk.js\")\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n","map":{"mappings":[{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/cwise-compiler/compiler.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}}],"sources":{"node_modules/cwise-compiler/compiler.js":"\"use strict\"\n\nvar createThunk = require(\"./lib/thunk.js\")\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n"},"lineCount":110}},"hash":"f4f520cda6a9ca59dc217b3c9dd804f4","cacheData":{"env":{}}}