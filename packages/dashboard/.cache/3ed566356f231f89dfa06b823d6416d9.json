{"id":"node_modules/through/index.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/through/package.json","includedInParent":true,"mtime":1535727512214},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"stream","loc":{"line":1,"column":21},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/through/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/stream-browserify/index.js"},{"name":"process","parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/through/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n","map":{"mappings":[{"source":"node_modules/through/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/through/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/through/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/through/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/through/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/through/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/through/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/through/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/through/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/through/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/through/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/through/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/through/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/through/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/through/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/through/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/through/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/through/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/through/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/through/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/through/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/through/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/through/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/through/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/through/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/through/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/through/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/through/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/through/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/through/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/through/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/through/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/through/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/through/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/through/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/through/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/through/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/through/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/through/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/through/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/through/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/through/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/through/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/through/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/through/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/through/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/through/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/through/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/through/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/through/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/through/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/through/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/through/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/through/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/through/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/through/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/through/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/through/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/through/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/through/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/through/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/through/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/through/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/through/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/through/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/through/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/through/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/through/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/through/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/through/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/through/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/through/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/through/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/through/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/through/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/through/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/through/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/through/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/through/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/through/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/through/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/through/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/through/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/through/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/through/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/through/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/through/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/through/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/through/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/through/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/through/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/through/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/through/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/through/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/through/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/through/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/through/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/through/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/through/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/through/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/through/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/through/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/through/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/through/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/through/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/through/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/through/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/through/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/through/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}}],"sources":{"node_modules/through/index.js":"var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n"},"lineCount":110}},"hash":"e9455795cdf6bfc8c2eac048d86808c0","cacheData":{"env":{}}}