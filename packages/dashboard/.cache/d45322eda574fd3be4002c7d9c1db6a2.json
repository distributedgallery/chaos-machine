{"id":"node_modules/stampit/dist/stampit.full.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/node_modules/stampit/package.json","includedInParent":true,"mtime":1533059672070},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/package.json","includedInParent":true,"mtime":1533059672870},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/dashboard/.babelrc","includedInParent":true,"mtime":1533058453931}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * The 'src' argument plays the command role.\n * The returned values is always of the same type as the 'src'.\n * @param dst\n * @param src\n * @returns {*}\n */\nfunction mergeOne(dst, src) {\n  if (src === undefined) { return dst; }\n\n  // According to specification arrays must be concatenated.\n  // Also, the '.concat' creates a new array instance. Overrides the 'dst'.\n  if (isArray(src)) { return (isArray(dst) ? dst : []).concat(src); }\n\n  // Now deal with non plain 'src' object. 'src' overrides 'dst'\n  // Note that functions are also assigned! We do not deep merge functions.\n  if (!isPlainObject(src)) { return src; }\n\n  // See if 'dst' is allowed to be mutated. If not - it's overridden with a new plain object.\n  var returnValue = isObject(dst) ? dst : {};\n\n  var keys = Object.keys(src);\n  for (var i = 0; i < keys.length; i += 1) {\n    var key = keys[i];\n\n    var srcValue = src[key];\n    // Do not merge properties with the 'undefined' value.\n    if (srcValue !== undefined) {\n      var dstValue = returnValue[key];\n      // Recursive calls to mergeOne() must allow only plain objects or arrays in dst\n      var newDst = isPlainObject(dstValue) || isArray(srcValue) ? dstValue : {};\n\n      // deep merge each property. Recursion!\n      returnValue[key] = mergeOne(newDst, srcValue);\n    }\n  }\n\n  return returnValue;\n}\n\nvar merge = function (dst) {\n  var srcs = [], len = arguments.length - 1;\n  while ( len-- > 0 ) srcs[ len ] = arguments[ len + 1 ];\n\n  return srcs.reduce(mergeOne, dst);\n};\n\nfunction isFunction(obj) {\n  return typeof obj === 'function';\n}\n\nfunction isObject(obj) {\n  var type = typeof obj;\n  return !!obj && (type === 'object' || type === 'function');\n}\n\nvar assign = Object.assign || function assign(to) {\n  var args = arguments;\n  for (var s = 1; s < args.length; s += 1) {\n    var from = args[s];\n    if (from) {\n      var keys = Object.keys(from);\n      for (var i = 0; i < keys.length; i += 1) {\n        var key = keys[i];\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n};\n\nvar isArray = Array.isArray;\n\nfunction isPlainObject(value) {\n  return !!value && typeof value === 'object' &&\n    Object.getPrototypeOf(value) === Object.prototype;\n}\n\n\nvar concat = Array.prototype.concat;\nfunction extractFunctions() {\n  var fns = concat.apply([], arguments).filter(isFunction);\n  return fns.length === 0 ? undefined : fns;\n}\n\nfunction concatAssignFunctions(dstObject, srcArray, propName) {\n  if (!isArray(srcArray)) { return; }\n\n  var length = srcArray.length;\n  var dstArray = dstObject[propName] || [];\n  dstObject[propName] = dstArray;\n  for (var i = 0; i < length; i += 1) {\n    var fn = srcArray[i];\n    if (isFunction(fn) && dstArray.indexOf(fn) < 0) {\n      dstArray.push(fn);\n    }\n  }\n}\n\n\nfunction combineProperties(dstObject, srcObject, propName, action) {\n  if (!isObject(srcObject[propName])) { return; }\n  if (!isObject(dstObject[propName])) { dstObject[propName] = {}; }\n  action(dstObject[propName], srcObject[propName]);\n}\n\nfunction deepMergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, merge);\n}\nfunction mergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, assign);\n}\n\n/**\n * Converts stampit extended descriptor to a standard one.\n * @param [methods]\n * @param [properties]\n * @param [props]\n * @param [refs]\n * @param [initializers]\n * @param [init]\n * @param [deepProperties]\n * @param [deepProps]\n * @param [propertyDescriptors]\n * @param [staticProperties]\n * @param [statics]\n * @param [staticDeepProperties]\n * @param [deepStatics]\n * @param [staticPropertyDescriptors]\n * @param [configuration]\n * @param [conf]\n * @param [deepConfiguration]\n * @param [deepConf]\n * @param [composers]\n * @returns {Descriptor}\n */\nvar standardiseDescriptor = function (ref) {\n  if ( ref === void 0 ) ref = {};\n  var methods = ref.methods;\n  var properties = ref.properties;\n  var props = ref.props;\n  var refs = ref.refs;\n  var initializers = ref.initializers;\n  var init = ref.init;\n  var composers = ref.composers;\n  var deepProperties = ref.deepProperties;\n  var deepProps = ref.deepProps;\n  var propertyDescriptors = ref.propertyDescriptors;\n  var staticProperties = ref.staticProperties;\n  var statics = ref.statics;\n  var staticDeepProperties = ref.staticDeepProperties;\n  var deepStatics = ref.deepStatics;\n  var staticPropertyDescriptors = ref.staticPropertyDescriptors;\n  var configuration = ref.configuration;\n  var conf = ref.conf;\n  var deepConfiguration = ref.deepConfiguration;\n  var deepConf = ref.deepConf;\n\n  var p = isObject(props) || isObject(refs) || isObject(properties) ?\n    assign({}, props, refs, properties) : undefined;\n\n  var dp = isObject(deepProps) ? merge({}, deepProps) : undefined;\n  dp = isObject(deepProperties) ? merge(dp, deepProperties) : dp;\n\n  var sp = isObject(statics) || isObject(staticProperties) ?\n    assign({}, statics, staticProperties) : undefined;\n\n  var dsp = isObject(deepStatics) ? merge({}, deepStatics) : undefined;\n  dsp = isObject(staticDeepProperties) ? merge(dsp, staticDeepProperties) : dsp;\n\n  var c = isObject(conf) || isObject(configuration) ?\n    assign({}, conf, configuration) : undefined;\n\n  var dc = isObject(deepConf) ? merge({}, deepConf) : undefined;\n  dc = isObject(deepConfiguration) ? merge(dc, deepConfiguration) : dc;\n\n  var ii = extractFunctions(init, initializers);\n\n  var composerFunctions = extractFunctions(composers);\n  if (composerFunctions) {\n    dc = dc || {};\n    concatAssignFunctions(dc, composerFunctions, 'composers');\n  }\n\n  var descriptor = {};\n  if (methods) { descriptor.methods = methods; }\n  if (p) { descriptor.properties = p; }\n  if (ii) { descriptor.initializers = ii; }\n  if (dp) { descriptor.deepProperties = dp; }\n  if (sp) { descriptor.staticProperties = sp; }\n  if (methods) { descriptor.methods = methods; }\n  if (dsp) { descriptor.staticDeepProperties = dsp; }\n  if (propertyDescriptors) { descriptor.propertyDescriptors = propertyDescriptors; }\n  if (staticPropertyDescriptors) { descriptor.staticPropertyDescriptors = staticPropertyDescriptors; }\n  if (c) { descriptor.configuration = c; }\n  if (dc) { descriptor.deepConfiguration = dc; }\n\n  return descriptor;\n};\n\n/**\n * Creates new factory instance.\n * @param {Descriptor} descriptor The information about the object the factory will be creating.\n * @returns {Function} The new factory function.\n */\nfunction createFactory(descriptor) {\n  return function Stamp(options) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    // Next line was optimized for most JS VMs. Please, be careful here!\n    var obj = Object.create(descriptor.methods || null);\n\n    merge(obj, descriptor.deepProperties);\n    assign(obj, descriptor.properties);\n    Object.defineProperties(obj, descriptor.propertyDescriptors || {});\n\n    if (!descriptor.initializers || descriptor.initializers.length === 0) { return obj; }\n\n    if (options === undefined) { options = {}; }\n    var inits = descriptor.initializers;\n    var length = inits.length;\n    for (var i = 0; i < length; i += 1) {\n      var initializer = inits[i];\n      if (isFunction(initializer)) {\n        var returnedValue = initializer.call(obj, options,\n          {instance: obj, stamp: Stamp, args: [options].concat(args)});\n        obj = returnedValue === undefined ? obj : returnedValue;\n      }\n    }\n\n    return obj;\n  };\n}\n\n/**\n * Returns a new stamp given a descriptor and a compose function implementation.\n * @param {Descriptor} [descriptor={}] The information about the object the stamp will be creating.\n * @param {Compose} composeFunction The \"compose\" function implementation.\n * @returns {Stamp}\n */\nfunction createStamp(descriptor, composeFunction) {\n  var Stamp = createFactory(descriptor);\n\n  merge(Stamp, descriptor.staticDeepProperties);\n  assign(Stamp, descriptor.staticProperties);\n  Object.defineProperties(Stamp, descriptor.staticPropertyDescriptors || {});\n\n  var composeImplementation = isFunction(Stamp.compose) ? Stamp.compose : composeFunction;\n  Stamp.compose = function _compose() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return composeImplementation.apply(this, args);\n  };\n  assign(Stamp.compose, descriptor);\n\n  return Stamp;\n}\n\n/**\n * Mutates the dstDescriptor by merging the srcComposable data into it.\n * @param {Descriptor} dstDescriptor The descriptor object to merge into.\n * @param {Composable} [srcComposable] The composable\n * (either descriptor or stamp) to merge data form.\n * @returns {Descriptor} Returns the dstDescriptor argument.\n */\nfunction mergeComposable(dstDescriptor, srcComposable) {\n  var srcDescriptor = (srcComposable && srcComposable.compose) || srcComposable;\n  if (!isObject(srcDescriptor)) { return dstDescriptor; }\n\n  mergeAssign(dstDescriptor, srcDescriptor, 'methods');\n  mergeAssign(dstDescriptor, srcDescriptor, 'properties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'propertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticProperties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'staticDeepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticPropertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'configuration');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepConfiguration');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.initializers, 'initializers');\n\n  return dstDescriptor;\n}\n\n/**\n * Given the list of composables (stamp descriptors and stamps) returns\n * a new stamp (composable factory function).\n * @typedef {Function} Compose\n * @param {...(Composable)} [composables] The list of composables.\n * @returns {Stamp} A new stamp (aka composable factory function)\n */\nfunction compose() {\n  var composables = [], len = arguments.length;\n  while ( len-- ) composables[ len ] = arguments[ len ];\n\n  var descriptor = [this]\n    .concat(composables)\n    .filter(isObject)\n    .reduce(mergeComposable, {});\n  return createStamp(descriptor, compose);\n}\n\n\n/**\n * The Stamp Descriptor\n * @typedef {Function|Object} Descriptor\n * @returns {Stamp} A new stamp based on this Stamp\n * @property {Object} [methods] Methods or other data used as object instances' prototype\n * @property {Array<Function>} [initializers] List of initializers called for each object instance\n * @property {Object} [properties] Shallow assigned properties of object instances\n * @property {Object} [deepProperties] Deeply merged properties of object instances\n * @property {Object} [staticProperties] Shallow assigned properties of Stamps\n * @property {Object} [staticDeepProperties] Deeply merged properties of Stamps\n * @property {Object} [configuration] Shallow assigned properties of Stamp arbitrary metadata\n * @property {Object} [deepConfiguration] Deeply merged properties of Stamp arbitrary metadata\n * @property {Object} [propertyDescriptors] ES5 Property Descriptors applied to object instances\n * @property {Object} [staticPropertyDescriptors] ES5 Property Descriptors applied to Stamps\n */\n\n/**\n * The Stamp factory function\n * @typedef {Function} Stamp\n * @returns {*} Instantiated object\n * @property {Descriptor} compose - The Stamp descriptor and composition function\n */\n\n/**\n * A composable object - stamp or descriptor\n * @typedef {Stamp|Descriptor} Composable\n */\n\n/**\n * Returns true if argument is a stamp.\n * @param {*} obj\n * @returns {Boolean}\n */\nfunction isStamp(obj) {\n  return isFunction(obj) && isFunction(obj.compose);\n}\n\nfunction createUtilityFunction(propName, action) {\n  return function composeUtil() {\n    var i = arguments.length, argsArray = Array(i);\n    while ( i-- ) argsArray[i] = arguments[i];\n\n    return ((this && this.compose) || stampit).call(this, ( obj = {}, obj[propName] = action.apply(void 0, [ {} ].concat( argsArray )), obj ));\n    var obj;\n  };\n}\n\nvar methods = createUtilityFunction('methods', assign);\n\nvar properties = createUtilityFunction('properties', assign);\nfunction initializers() {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return ((this && this.compose) || stampit).call(this, {\n    initializers: extractFunctions.apply(void 0, args)\n  });\n}\nfunction composers() {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return ((this && this.compose) || stampit).call(this, {\n    composers: extractFunctions.apply(void 0, args)\n  });\n}\n\nvar deepProperties = createUtilityFunction('deepProperties', merge);\nvar staticProperties = createUtilityFunction('staticProperties', assign);\nvar staticDeepProperties = createUtilityFunction('staticDeepProperties', merge);\nvar configuration = createUtilityFunction('configuration', assign);\nvar deepConfiguration = createUtilityFunction('deepConfiguration', merge);\nvar propertyDescriptors = createUtilityFunction('propertyDescriptors', assign);\n\nvar staticPropertyDescriptors = createUtilityFunction('staticPropertyDescriptors', assign);\n\nvar allUtilities = {\n  methods: methods,\n\n  properties: properties,\n  refs: properties,\n  props: properties,\n\n  initializers: initializers,\n  init: initializers,\n\n  composers: composers,\n\n  deepProperties: deepProperties,\n  deepProps: deepProperties,\n\n  staticProperties: staticProperties,\n  statics: staticProperties,\n\n  staticDeepProperties: staticDeepProperties,\n  deepStatics: staticDeepProperties,\n\n  configuration: configuration,\n  conf: configuration,\n\n  deepConfiguration: deepConfiguration,\n  deepConf: deepConfiguration,\n\n  propertyDescriptors: propertyDescriptors,\n\n  staticPropertyDescriptors: staticPropertyDescriptors\n};\n\n/**\n * Infected stamp. Used as a storage of the infection metadata\n * @type {Function}\n * @return {Stamp}\n */\nvar baseStampit = compose(\n  {staticProperties: allUtilities},\n  {\n    staticProperties: {\n      create: function create() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return this.apply(void 0, args);\n      },\n      compose: stampit // infecting\n    }\n  }\n);\n\n/**\n * Infected compose\n * @param {...(Composable)} [args] The list of composables.\n * @return {Stamp}\n */\nfunction stampit() {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  var composables = args.filter(isObject)\n    .map(function (arg) { return isStamp(arg) ? arg : standardiseDescriptor(arg); });\n\n  // Calling the standard pure compose function here.\n  var stamp = compose.apply(this || baseStampit, composables);\n\n  var composerFunctions = stamp.compose.deepConfiguration &&\n    stamp.compose.deepConfiguration.composers;\n  if (isArray(composerFunctions) && composerFunctions.length > 0) {\n    var uniqueComposers = [];\n    for (var i = 0; i < composerFunctions.length; i += 1) {\n      var composer = composerFunctions[i];\n      if (isFunction(composer) && uniqueComposers.indexOf(composer) < 0) {\n        uniqueComposers.push(composer);\n      }\n    }\n    stamp.compose.deepConfiguration.composers = uniqueComposers;\n\n    if (isStamp(this)) { composables.unshift(this); }\n    for (var i$1 = 0; i$1 < uniqueComposers.length; i$1 += 1) {\n      var composer$1 = uniqueComposers[i$1];\n      var returnedValue = composer$1({stamp: stamp, composables: composables});\n      stamp = isStamp(returnedValue) ? returnedValue : stamp;\n    }\n  }\n\n  return stamp;\n}\n\nvar exportedCompose = stampit.bind(); // bind to 'undefined'\nstampit.compose = exportedCompose;\n\n// Setting up the shortcut functions\nvar stampit$1 = assign(stampit, allUtilities);\n\nexports.methods = methods;\nexports.properties = properties;\nexports.refs = properties;\nexports.props = properties;\nexports.initializers = initializers;\nexports.init = initializers;\nexports.composers = composers;\nexports.deepProperties = deepProperties;\nexports.deepProps = deepProperties;\nexports.staticProperties = staticProperties;\nexports.statics = staticProperties;\nexports.staticDeepProperties = staticDeepProperties;\nexports.deepStatics = staticDeepProperties;\nexports.configuration = configuration;\nexports.conf = configuration;\nexports.deepConfiguration = deepConfiguration;\nexports.deepConf = deepConfiguration;\nexports.propertyDescriptors = propertyDescriptors;\nexports.staticPropertyDescriptors = staticPropertyDescriptors;\nexports.compose = exportedCompose;\nexports['default'] = stampit$1;\nmodule.exports = exports['default'];\n//# sourceMappingURL=stampit.full.js.map\n","map":{"mappings":[{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/stampit/dist/stampit.full.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}}],"sources":{"node_modules/stampit/dist/stampit.full.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * The 'src' argument plays the command role.\n * The returned values is always of the same type as the 'src'.\n * @param dst\n * @param src\n * @returns {*}\n */\nfunction mergeOne(dst, src) {\n  if (src === undefined) { return dst; }\n\n  // According to specification arrays must be concatenated.\n  // Also, the '.concat' creates a new array instance. Overrides the 'dst'.\n  if (isArray(src)) { return (isArray(dst) ? dst : []).concat(src); }\n\n  // Now deal with non plain 'src' object. 'src' overrides 'dst'\n  // Note that functions are also assigned! We do not deep merge functions.\n  if (!isPlainObject(src)) { return src; }\n\n  // See if 'dst' is allowed to be mutated. If not - it's overridden with a new plain object.\n  var returnValue = isObject(dst) ? dst : {};\n\n  var keys = Object.keys(src);\n  for (var i = 0; i < keys.length; i += 1) {\n    var key = keys[i];\n\n    var srcValue = src[key];\n    // Do not merge properties with the 'undefined' value.\n    if (srcValue !== undefined) {\n      var dstValue = returnValue[key];\n      // Recursive calls to mergeOne() must allow only plain objects or arrays in dst\n      var newDst = isPlainObject(dstValue) || isArray(srcValue) ? dstValue : {};\n\n      // deep merge each property. Recursion!\n      returnValue[key] = mergeOne(newDst, srcValue);\n    }\n  }\n\n  return returnValue;\n}\n\nvar merge = function (dst) {\n  var srcs = [], len = arguments.length - 1;\n  while ( len-- > 0 ) srcs[ len ] = arguments[ len + 1 ];\n\n  return srcs.reduce(mergeOne, dst);\n};\n\nfunction isFunction(obj) {\n  return typeof obj === 'function';\n}\n\nfunction isObject(obj) {\n  var type = typeof obj;\n  return !!obj && (type === 'object' || type === 'function');\n}\n\nvar assign = Object.assign || function assign(to) {\n  var args = arguments;\n  for (var s = 1; s < args.length; s += 1) {\n    var from = args[s];\n    if (from) {\n      var keys = Object.keys(from);\n      for (var i = 0; i < keys.length; i += 1) {\n        var key = keys[i];\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n};\n\nvar isArray = Array.isArray;\n\nfunction isPlainObject(value) {\n  return !!value && typeof value === 'object' &&\n    Object.getPrototypeOf(value) === Object.prototype;\n}\n\n\nvar concat = Array.prototype.concat;\nfunction extractFunctions() {\n  var fns = concat.apply([], arguments).filter(isFunction);\n  return fns.length === 0 ? undefined : fns;\n}\n\nfunction concatAssignFunctions(dstObject, srcArray, propName) {\n  if (!isArray(srcArray)) { return; }\n\n  var length = srcArray.length;\n  var dstArray = dstObject[propName] || [];\n  dstObject[propName] = dstArray;\n  for (var i = 0; i < length; i += 1) {\n    var fn = srcArray[i];\n    if (isFunction(fn) && dstArray.indexOf(fn) < 0) {\n      dstArray.push(fn);\n    }\n  }\n}\n\n\nfunction combineProperties(dstObject, srcObject, propName, action) {\n  if (!isObject(srcObject[propName])) { return; }\n  if (!isObject(dstObject[propName])) { dstObject[propName] = {}; }\n  action(dstObject[propName], srcObject[propName]);\n}\n\nfunction deepMergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, merge);\n}\nfunction mergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, assign);\n}\n\n/**\n * Converts stampit extended descriptor to a standard one.\n * @param [methods]\n * @param [properties]\n * @param [props]\n * @param [refs]\n * @param [initializers]\n * @param [init]\n * @param [deepProperties]\n * @param [deepProps]\n * @param [propertyDescriptors]\n * @param [staticProperties]\n * @param [statics]\n * @param [staticDeepProperties]\n * @param [deepStatics]\n * @param [staticPropertyDescriptors]\n * @param [configuration]\n * @param [conf]\n * @param [deepConfiguration]\n * @param [deepConf]\n * @param [composers]\n * @returns {Descriptor}\n */\nvar standardiseDescriptor = function (ref) {\n  if ( ref === void 0 ) ref = {};\n  var methods = ref.methods;\n  var properties = ref.properties;\n  var props = ref.props;\n  var refs = ref.refs;\n  var initializers = ref.initializers;\n  var init = ref.init;\n  var composers = ref.composers;\n  var deepProperties = ref.deepProperties;\n  var deepProps = ref.deepProps;\n  var propertyDescriptors = ref.propertyDescriptors;\n  var staticProperties = ref.staticProperties;\n  var statics = ref.statics;\n  var staticDeepProperties = ref.staticDeepProperties;\n  var deepStatics = ref.deepStatics;\n  var staticPropertyDescriptors = ref.staticPropertyDescriptors;\n  var configuration = ref.configuration;\n  var conf = ref.conf;\n  var deepConfiguration = ref.deepConfiguration;\n  var deepConf = ref.deepConf;\n\n  var p = isObject(props) || isObject(refs) || isObject(properties) ?\n    assign({}, props, refs, properties) : undefined;\n\n  var dp = isObject(deepProps) ? merge({}, deepProps) : undefined;\n  dp = isObject(deepProperties) ? merge(dp, deepProperties) : dp;\n\n  var sp = isObject(statics) || isObject(staticProperties) ?\n    assign({}, statics, staticProperties) : undefined;\n\n  var dsp = isObject(deepStatics) ? merge({}, deepStatics) : undefined;\n  dsp = isObject(staticDeepProperties) ? merge(dsp, staticDeepProperties) : dsp;\n\n  var c = isObject(conf) || isObject(configuration) ?\n    assign({}, conf, configuration) : undefined;\n\n  var dc = isObject(deepConf) ? merge({}, deepConf) : undefined;\n  dc = isObject(deepConfiguration) ? merge(dc, deepConfiguration) : dc;\n\n  var ii = extractFunctions(init, initializers);\n\n  var composerFunctions = extractFunctions(composers);\n  if (composerFunctions) {\n    dc = dc || {};\n    concatAssignFunctions(dc, composerFunctions, 'composers');\n  }\n\n  var descriptor = {};\n  if (methods) { descriptor.methods = methods; }\n  if (p) { descriptor.properties = p; }\n  if (ii) { descriptor.initializers = ii; }\n  if (dp) { descriptor.deepProperties = dp; }\n  if (sp) { descriptor.staticProperties = sp; }\n  if (methods) { descriptor.methods = methods; }\n  if (dsp) { descriptor.staticDeepProperties = dsp; }\n  if (propertyDescriptors) { descriptor.propertyDescriptors = propertyDescriptors; }\n  if (staticPropertyDescriptors) { descriptor.staticPropertyDescriptors = staticPropertyDescriptors; }\n  if (c) { descriptor.configuration = c; }\n  if (dc) { descriptor.deepConfiguration = dc; }\n\n  return descriptor;\n};\n\n/**\n * Creates new factory instance.\n * @param {Descriptor} descriptor The information about the object the factory will be creating.\n * @returns {Function} The new factory function.\n */\nfunction createFactory(descriptor) {\n  return function Stamp(options) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    // Next line was optimized for most JS VMs. Please, be careful here!\n    var obj = Object.create(descriptor.methods || null);\n\n    merge(obj, descriptor.deepProperties);\n    assign(obj, descriptor.properties);\n    Object.defineProperties(obj, descriptor.propertyDescriptors || {});\n\n    if (!descriptor.initializers || descriptor.initializers.length === 0) { return obj; }\n\n    if (options === undefined) { options = {}; }\n    var inits = descriptor.initializers;\n    var length = inits.length;\n    for (var i = 0; i < length; i += 1) {\n      var initializer = inits[i];\n      if (isFunction(initializer)) {\n        var returnedValue = initializer.call(obj, options,\n          {instance: obj, stamp: Stamp, args: [options].concat(args)});\n        obj = returnedValue === undefined ? obj : returnedValue;\n      }\n    }\n\n    return obj;\n  };\n}\n\n/**\n * Returns a new stamp given a descriptor and a compose function implementation.\n * @param {Descriptor} [descriptor={}] The information about the object the stamp will be creating.\n * @param {Compose} composeFunction The \"compose\" function implementation.\n * @returns {Stamp}\n */\nfunction createStamp(descriptor, composeFunction) {\n  var Stamp = createFactory(descriptor);\n\n  merge(Stamp, descriptor.staticDeepProperties);\n  assign(Stamp, descriptor.staticProperties);\n  Object.defineProperties(Stamp, descriptor.staticPropertyDescriptors || {});\n\n  var composeImplementation = isFunction(Stamp.compose) ? Stamp.compose : composeFunction;\n  Stamp.compose = function _compose() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return composeImplementation.apply(this, args);\n  };\n  assign(Stamp.compose, descriptor);\n\n  return Stamp;\n}\n\n/**\n * Mutates the dstDescriptor by merging the srcComposable data into it.\n * @param {Descriptor} dstDescriptor The descriptor object to merge into.\n * @param {Composable} [srcComposable] The composable\n * (either descriptor or stamp) to merge data form.\n * @returns {Descriptor} Returns the dstDescriptor argument.\n */\nfunction mergeComposable(dstDescriptor, srcComposable) {\n  var srcDescriptor = (srcComposable && srcComposable.compose) || srcComposable;\n  if (!isObject(srcDescriptor)) { return dstDescriptor; }\n\n  mergeAssign(dstDescriptor, srcDescriptor, 'methods');\n  mergeAssign(dstDescriptor, srcDescriptor, 'properties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'propertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticProperties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'staticDeepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticPropertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'configuration');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepConfiguration');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.initializers, 'initializers');\n\n  return dstDescriptor;\n}\n\n/**\n * Given the list of composables (stamp descriptors and stamps) returns\n * a new stamp (composable factory function).\n * @typedef {Function} Compose\n * @param {...(Composable)} [composables] The list of composables.\n * @returns {Stamp} A new stamp (aka composable factory function)\n */\nfunction compose() {\n  var composables = [], len = arguments.length;\n  while ( len-- ) composables[ len ] = arguments[ len ];\n\n  var descriptor = [this]\n    .concat(composables)\n    .filter(isObject)\n    .reduce(mergeComposable, {});\n  return createStamp(descriptor, compose);\n}\n\n\n/**\n * The Stamp Descriptor\n * @typedef {Function|Object} Descriptor\n * @returns {Stamp} A new stamp based on this Stamp\n * @property {Object} [methods] Methods or other data used as object instances' prototype\n * @property {Array<Function>} [initializers] List of initializers called for each object instance\n * @property {Object} [properties] Shallow assigned properties of object instances\n * @property {Object} [deepProperties] Deeply merged properties of object instances\n * @property {Object} [staticProperties] Shallow assigned properties of Stamps\n * @property {Object} [staticDeepProperties] Deeply merged properties of Stamps\n * @property {Object} [configuration] Shallow assigned properties of Stamp arbitrary metadata\n * @property {Object} [deepConfiguration] Deeply merged properties of Stamp arbitrary metadata\n * @property {Object} [propertyDescriptors] ES5 Property Descriptors applied to object instances\n * @property {Object} [staticPropertyDescriptors] ES5 Property Descriptors applied to Stamps\n */\n\n/**\n * The Stamp factory function\n * @typedef {Function} Stamp\n * @returns {*} Instantiated object\n * @property {Descriptor} compose - The Stamp descriptor and composition function\n */\n\n/**\n * A composable object - stamp or descriptor\n * @typedef {Stamp|Descriptor} Composable\n */\n\n/**\n * Returns true if argument is a stamp.\n * @param {*} obj\n * @returns {Boolean}\n */\nfunction isStamp(obj) {\n  return isFunction(obj) && isFunction(obj.compose);\n}\n\nfunction createUtilityFunction(propName, action) {\n  return function composeUtil() {\n    var i = arguments.length, argsArray = Array(i);\n    while ( i-- ) argsArray[i] = arguments[i];\n\n    return ((this && this.compose) || stampit).call(this, ( obj = {}, obj[propName] = action.apply(void 0, [ {} ].concat( argsArray )), obj ));\n    var obj;\n  };\n}\n\nvar methods = createUtilityFunction('methods', assign);\n\nvar properties = createUtilityFunction('properties', assign);\nfunction initializers() {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return ((this && this.compose) || stampit).call(this, {\n    initializers: extractFunctions.apply(void 0, args)\n  });\n}\nfunction composers() {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return ((this && this.compose) || stampit).call(this, {\n    composers: extractFunctions.apply(void 0, args)\n  });\n}\n\nvar deepProperties = createUtilityFunction('deepProperties', merge);\nvar staticProperties = createUtilityFunction('staticProperties', assign);\nvar staticDeepProperties = createUtilityFunction('staticDeepProperties', merge);\nvar configuration = createUtilityFunction('configuration', assign);\nvar deepConfiguration = createUtilityFunction('deepConfiguration', merge);\nvar propertyDescriptors = createUtilityFunction('propertyDescriptors', assign);\n\nvar staticPropertyDescriptors = createUtilityFunction('staticPropertyDescriptors', assign);\n\nvar allUtilities = {\n  methods: methods,\n\n  properties: properties,\n  refs: properties,\n  props: properties,\n\n  initializers: initializers,\n  init: initializers,\n\n  composers: composers,\n\n  deepProperties: deepProperties,\n  deepProps: deepProperties,\n\n  staticProperties: staticProperties,\n  statics: staticProperties,\n\n  staticDeepProperties: staticDeepProperties,\n  deepStatics: staticDeepProperties,\n\n  configuration: configuration,\n  conf: configuration,\n\n  deepConfiguration: deepConfiguration,\n  deepConf: deepConfiguration,\n\n  propertyDescriptors: propertyDescriptors,\n\n  staticPropertyDescriptors: staticPropertyDescriptors\n};\n\n/**\n * Infected stamp. Used as a storage of the infection metadata\n * @type {Function}\n * @return {Stamp}\n */\nvar baseStampit = compose(\n  {staticProperties: allUtilities},\n  {\n    staticProperties: {\n      create: function create() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return this.apply(void 0, args);\n      },\n      compose: stampit // infecting\n    }\n  }\n);\n\n/**\n * Infected compose\n * @param {...(Composable)} [args] The list of composables.\n * @return {Stamp}\n */\nfunction stampit() {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  var composables = args.filter(isObject)\n    .map(function (arg) { return isStamp(arg) ? arg : standardiseDescriptor(arg); });\n\n  // Calling the standard pure compose function here.\n  var stamp = compose.apply(this || baseStampit, composables);\n\n  var composerFunctions = stamp.compose.deepConfiguration &&\n    stamp.compose.deepConfiguration.composers;\n  if (isArray(composerFunctions) && composerFunctions.length > 0) {\n    var uniqueComposers = [];\n    for (var i = 0; i < composerFunctions.length; i += 1) {\n      var composer = composerFunctions[i];\n      if (isFunction(composer) && uniqueComposers.indexOf(composer) < 0) {\n        uniqueComposers.push(composer);\n      }\n    }\n    stamp.compose.deepConfiguration.composers = uniqueComposers;\n\n    if (isStamp(this)) { composables.unshift(this); }\n    for (var i$1 = 0; i$1 < uniqueComposers.length; i$1 += 1) {\n      var composer$1 = uniqueComposers[i$1];\n      var returnedValue = composer$1({stamp: stamp, composables: composables});\n      stamp = isStamp(returnedValue) ? returnedValue : stamp;\n    }\n  }\n\n  return stamp;\n}\n\nvar exportedCompose = stampit.bind(); // bind to 'undefined'\nstampit.compose = exportedCompose;\n\n// Setting up the shortcut functions\nvar stampit$1 = assign(stampit, allUtilities);\n\nexports.methods = methods;\nexports.properties = properties;\nexports.refs = properties;\nexports.props = properties;\nexports.initializers = initializers;\nexports.init = initializers;\nexports.composers = composers;\nexports.deepProperties = deepProperties;\nexports.deepProps = deepProperties;\nexports.staticProperties = staticProperties;\nexports.statics = staticProperties;\nexports.staticDeepProperties = staticDeepProperties;\nexports.deepStatics = staticDeepProperties;\nexports.configuration = configuration;\nexports.conf = configuration;\nexports.deepConfiguration = deepConfiguration;\nexports.deepConf = deepConfiguration;\nexports.propertyDescriptors = propertyDescriptors;\nexports.staticPropertyDescriptors = staticPropertyDescriptors;\nexports.compose = exportedCompose;\nexports['default'] = stampit$1;\nmodule.exports = exports['default'];\n//# sourceMappingURL=stampit.full.js.map\n"},"lineCount":505}},"hash":"b075e76ab76378b04265ce73e8fe9045","cacheData":{"env":{}}}