{"id":"node_modules/eccrypto/browser.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/eccrypto/package.json","includedInParent":true,"mtime":1535727513050},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"elliptic","loc":{"line":7,"column":17},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/eccrypto/browser.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/elliptic/lib/elliptic.js"},{"name":"buffer","parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/eccrypto/browser.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/buffer/index.js"}],"generated":{"js":"var global = arguments[3];\nvar Buffer = require(\"buffer\").Buffer;\n/**\n * Browser eccrypto implementation.\n */\n\n\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar cryptoObj = global.crypto || global.msCrypto || {};\nvar subtle = cryptoObj.subtle || cryptoObj.webkitSubtle;\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  global.crypto.getRandomValues(arr);\n  return new Buffer(arr);\n}\n\nfunction sha512(msg) {\n  return subtle.digest({name: \"SHA-512\"}, msg).then(function(hash) {\n    return new Buffer(new Uint8Array(hash));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    var importAlgorithm = {name: \"AES-CBC\"};\n    var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n    return keyp.then(function(cryptoKey) {\n      var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n      return subtle[op](encAlgorithm, cryptoKey, data);\n    }).then(function(result) {\n      return new Buffer(new Uint8Array(result));\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  var algorithm = {name: \"HMAC\", hash: {name: \"SHA-256\"}};\n  var keyp = subtle.importKey(\"raw\", key, algorithm, false, [\"sign\"]);\n  return keyp.then(function(cryptoKey) {\n    return subtle.sign(algorithm, cryptoKey, msg);\n  }).then(function(sig) {\n    return new Buffer(new Uint8Array(sig));\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  var algorithm = {name: \"HMAC\", hash: {name: \"SHA-256\"}};\n  var keyp = subtle.importKey(\"raw\", key, algorithm, false, [\"verify\"]);\n  return keyp.then(function(cryptoKey) {\n    return subtle.verify(algorithm, cryptoKey, sig, msg);\n  });\n}\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return new Buffer(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(new Buffer(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65, \"Bad public key\");\n    assert(publicKey[0] === 4, \"Bad public key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\nvar derive = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad input\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad input\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(publicKeyB.length === 65, \"Bad public key\");\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(new Buffer(Px.toArray()));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  assert(subtle, \"WebCryptoAPI is not available\");\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(derive(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nexports.decrypt = function(privateKey, opts) {\n  assert(subtle, \"WebCryptoAPI is not available\");\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    assert(macGood, \"Bad MAC\");\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext);\n  }).then(function(msg) {\n    return new Buffer(new Uint8Array(msg));\n  });\n};\n","map":{"mappings":[{"source":"node_modules/eccrypto/browser.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/eccrypto/browser.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}}],"sources":{"node_modules/eccrypto/browser.js":"/**\n * Browser eccrypto implementation.\n */\n\n\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar cryptoObj = global.crypto || global.msCrypto || {};\nvar subtle = cryptoObj.subtle || cryptoObj.webkitSubtle;\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  global.crypto.getRandomValues(arr);\n  return new Buffer(arr);\n}\n\nfunction sha512(msg) {\n  return subtle.digest({name: \"SHA-512\"}, msg).then(function(hash) {\n    return new Buffer(new Uint8Array(hash));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    var importAlgorithm = {name: \"AES-CBC\"};\n    var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n    return keyp.then(function(cryptoKey) {\n      var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n      return subtle[op](encAlgorithm, cryptoKey, data);\n    }).then(function(result) {\n      return new Buffer(new Uint8Array(result));\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  var algorithm = {name: \"HMAC\", hash: {name: \"SHA-256\"}};\n  var keyp = subtle.importKey(\"raw\", key, algorithm, false, [\"sign\"]);\n  return keyp.then(function(cryptoKey) {\n    return subtle.sign(algorithm, cryptoKey, msg);\n  }).then(function(sig) {\n    return new Buffer(new Uint8Array(sig));\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  var algorithm = {name: \"HMAC\", hash: {name: \"SHA-256\"}};\n  var keyp = subtle.importKey(\"raw\", key, algorithm, false, [\"verify\"]);\n  return keyp.then(function(cryptoKey) {\n    return subtle.verify(algorithm, cryptoKey, sig, msg);\n  });\n}\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return new Buffer(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(new Buffer(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65, \"Bad public key\");\n    assert(publicKey[0] === 4, \"Bad public key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\nvar derive = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad input\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad input\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(publicKeyB.length === 65, \"Bad public key\");\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(new Buffer(Px.toArray()));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  assert(subtle, \"WebCryptoAPI is not available\");\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(derive(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nexports.decrypt = function(privateKey, opts) {\n  assert(subtle, \"WebCryptoAPI is not available\");\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    assert(macGood, \"Bad MAC\");\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext);\n  }).then(function(msg) {\n    return new Buffer(new Uint8Array(msg));\n  });\n};\n"},"lineCount":169}},"hash":"4e9e7898c74d731d8134072755f44bba","cacheData":{"env":{}}}