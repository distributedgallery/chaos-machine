{"id":"node_modules/wcwidth/index.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/wcwidth/package.json","includedInParent":true,"mtime":1533058147563},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"defaults","loc":{"line":3,"column":23},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/wcwidth/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/defaults/index.js"},{"name":"./combining","loc":{"line":4,"column":24},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/wcwidth/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/wcwidth/combining.js"}],"generated":{"js":"\"use strict\"\n\nvar defaults = require('defaults')\nvar combining = require('./combining')\n\nvar DEFAULTS = {\n  nul: 0,\n  control: 0\n}\n\nmodule.exports = function wcwidth(str) {\n  return wcswidth(str, DEFAULTS)\n}\n\nmodule.exports.config = function(opts) {\n  opts = defaults(opts || {}, DEFAULTS)\n  return function wcwidth(str) {\n    return wcswidth(str, opts)\n  }\n}\n\n/*\n *  The following functions define the column width of an ISO 10646\n *  character as follows:\n *  - The null character (U+0000) has a column width of 0.\n *  - Other C0/C1 control characters and DEL will lead to a return value\n *    of -1.\n *  - Non-spacing and enclosing combining characters (general category\n *    code Mn or Me in the\n *    Unicode database) have a column width of 0.\n *  - SOFT HYPHEN (U+00AD) has a column width of 1.\n *  - Other format characters (general category code Cf in the Unicode\n *    database) and ZERO WIDTH\n *    SPACE (U+200B) have a column width of 0.\n *  - Hangul Jamo medial vowels and final consonants (U+1160-U+11FF)\n *    have a column width of 0.\n *  - Spacing characters in the East Asian Wide (W) or East Asian\n *    Full-width (F) category as\n *    defined in Unicode Technical Report #11 have a column width of 2.\n *  - All remaining characters (including all printable ISO 8859-1 and\n *    WGL4 characters, Unicode control characters, etc.) have a column\n *    width of 1.\n *  This implementation assumes that characters are encoded in ISO 10646.\n*/\n\nfunction wcswidth(str, opts) {\n  if (typeof str !== 'string') return wcwidth(str, opts)\n\n  var s = 0\n  for (var i = 0; i < str.length; i++) {\n    var n = wcwidth(str.charCodeAt(i), opts)\n    if (n < 0) return -1\n    s += n\n  }\n\n  return s\n}\n\nfunction wcwidth(ucs, opts) {\n  // test for 8-bit control characters\n  if (ucs === 0) return opts.nul\n  if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0)) return opts.control\n\n  // binary search in table of non-spacing characters\n  if (bisearch(ucs)) return 0\n\n  // if we arrive here, ucs is not a combining or C0/C1 control character\n  return 1 +\n      (ucs >= 0x1100 &&\n       (ucs <= 0x115f ||                       // Hangul Jamo init. consonants\n        ucs == 0x2329 || ucs == 0x232a ||\n        (ucs >= 0x2e80 && ucs <= 0xa4cf &&\n         ucs != 0x303f) ||                     // CJK ... Yi\n        (ucs >= 0xac00 && ucs <= 0xd7a3) ||    // Hangul Syllables\n        (ucs >= 0xf900 && ucs <= 0xfaff) ||    // CJK Compatibility Ideographs\n        (ucs >= 0xfe10 && ucs <= 0xfe19) ||    // Vertical forms\n        (ucs >= 0xfe30 && ucs <= 0xfe6f) ||    // CJK Compatibility Forms\n        (ucs >= 0xff00 && ucs <= 0xff60) ||    // Fullwidth Forms\n        (ucs >= 0xffe0 && ucs <= 0xffe6) ||\n        (ucs >= 0x20000 && ucs <= 0x2fffd) ||\n        (ucs >= 0x30000 && ucs <= 0x3fffd)));\n}\n\nfunction bisearch(ucs) {\n  var min = 0\n  var max = combining.length - 1\n  var mid\n\n  if (ucs < combining[0][0] || ucs > combining[max][1]) return false\n\n  while (max >= min) {\n    mid = Math.floor((min + max) / 2)\n    if (ucs > combining[mid][1]) min = mid + 1\n    else if (ucs < combining[mid][0]) max = mid - 1\n    else return true\n  }\n\n  return false\n}\n","map":{"mappings":[{"source":"node_modules/wcwidth/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/wcwidth/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}}],"sources":{"node_modules/wcwidth/index.js":"\"use strict\"\n\nvar defaults = require('defaults')\nvar combining = require('./combining')\n\nvar DEFAULTS = {\n  nul: 0,\n  control: 0\n}\n\nmodule.exports = function wcwidth(str) {\n  return wcswidth(str, DEFAULTS)\n}\n\nmodule.exports.config = function(opts) {\n  opts = defaults(opts || {}, DEFAULTS)\n  return function wcwidth(str) {\n    return wcswidth(str, opts)\n  }\n}\n\n/*\n *  The following functions define the column width of an ISO 10646\n *  character as follows:\n *  - The null character (U+0000) has a column width of 0.\n *  - Other C0/C1 control characters and DEL will lead to a return value\n *    of -1.\n *  - Non-spacing and enclosing combining characters (general category\n *    code Mn or Me in the\n *    Unicode database) have a column width of 0.\n *  - SOFT HYPHEN (U+00AD) has a column width of 1.\n *  - Other format characters (general category code Cf in the Unicode\n *    database) and ZERO WIDTH\n *    SPACE (U+200B) have a column width of 0.\n *  - Hangul Jamo medial vowels and final consonants (U+1160-U+11FF)\n *    have a column width of 0.\n *  - Spacing characters in the East Asian Wide (W) or East Asian\n *    Full-width (F) category as\n *    defined in Unicode Technical Report #11 have a column width of 2.\n *  - All remaining characters (including all printable ISO 8859-1 and\n *    WGL4 characters, Unicode control characters, etc.) have a column\n *    width of 1.\n *  This implementation assumes that characters are encoded in ISO 10646.\n*/\n\nfunction wcswidth(str, opts) {\n  if (typeof str !== 'string') return wcwidth(str, opts)\n\n  var s = 0\n  for (var i = 0; i < str.length; i++) {\n    var n = wcwidth(str.charCodeAt(i), opts)\n    if (n < 0) return -1\n    s += n\n  }\n\n  return s\n}\n\nfunction wcwidth(ucs, opts) {\n  // test for 8-bit control characters\n  if (ucs === 0) return opts.nul\n  if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0)) return opts.control\n\n  // binary search in table of non-spacing characters\n  if (bisearch(ucs)) return 0\n\n  // if we arrive here, ucs is not a combining or C0/C1 control character\n  return 1 +\n      (ucs >= 0x1100 &&\n       (ucs <= 0x115f ||                       // Hangul Jamo init. consonants\n        ucs == 0x2329 || ucs == 0x232a ||\n        (ucs >= 0x2e80 && ucs <= 0xa4cf &&\n         ucs != 0x303f) ||                     // CJK ... Yi\n        (ucs >= 0xac00 && ucs <= 0xd7a3) ||    // Hangul Syllables\n        (ucs >= 0xf900 && ucs <= 0xfaff) ||    // CJK Compatibility Ideographs\n        (ucs >= 0xfe10 && ucs <= 0xfe19) ||    // Vertical forms\n        (ucs >= 0xfe30 && ucs <= 0xfe6f) ||    // CJK Compatibility Forms\n        (ucs >= 0xff00 && ucs <= 0xff60) ||    // Fullwidth Forms\n        (ucs >= 0xffe0 && ucs <= 0xffe6) ||\n        (ucs >= 0x20000 && ucs <= 0x2fffd) ||\n        (ucs >= 0x30000 && ucs <= 0x3fffd)));\n}\n\nfunction bisearch(ucs) {\n  var min = 0\n  var max = combining.length - 1\n  var mid\n\n  if (ucs < combining[0][0] || ucs > combining[max][1]) return false\n\n  while (max >= min) {\n    mid = Math.floor((min + max) / 2)\n    if (ucs > combining[mid][1]) min = mid + 1\n    else if (ucs < combining[mid][0]) max = mid - 1\n    else return true\n  }\n\n  return false\n}\n"},"lineCount":100}},"hash":"8c35864a04ada0dd24251d11bf06a0ae","cacheData":{"env":{}}}