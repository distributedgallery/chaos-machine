{"id":"IEw+","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/libp2p-crypto/package.json","includedInParent":true,"mtime":1533205844947},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1533206489309},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"node-forge","loc":{"line":3,"column":22},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/libp2p-crypto/src/pbkdf2.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/node-forge/lib/index.js"}],"generated":{"js":"\"use strict\";var r=require(\"node-forge\"),s={sha1:\"sha1\",\"sha2-256\":\"sha256\",\"sha2-512\":\"sha512\"};function e(e,o,a,n,t){var h=s[t];if(!h)throw new Error(\"Hash '\"+t+\"' is unknown or not supported\");var u=r.pkcs5.pbkdf2(e,o,a,n,h);return r.util.encode64(u)}module.exports=e;","map":{"mappings":[{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"forge","original":{"line":3,"column":6},"generated":{"line":1,"column":17}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"require","original":{"line":3,"column":14},"generated":{"line":1,"column":19}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":3,"column":22},"generated":{"line":1,"column":27}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hashName","original":{"line":12,"column":6},"generated":{"line":1,"column":41}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":12,"column":17},"generated":{"line":1,"column":43}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":13,"column":8},"generated":{"line":1,"column":44}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":13,"column":8},"generated":{"line":1,"column":49}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":14,"column":14},"generated":{"line":1,"column":56}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":14,"column":14},"generated":{"line":1,"column":67}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":15,"column":14},"generated":{"line":1,"column":76}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":15,"column":14},"generated":{"line":1,"column":87}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":28,"column":0},"generated":{"line":1,"column":97}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"pbkdf2","original":{"line":28,"column":9},"generated":{"line":1,"column":106}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"password","original":{"line":28,"column":17},"generated":{"line":1,"column":108}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"salt","original":{"line":28,"column":27},"generated":{"line":1,"column":110}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"iterations","original":{"line":28,"column":33},"generated":{"line":1,"column":112}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"keySize","original":{"line":28,"column":45},"generated":{"line":1,"column":114}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hash","original":{"line":28,"column":54},"generated":{"line":1,"column":116}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hasher","original":{"line":29,"column":8},"generated":{"line":1,"column":119}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hasher","original":{"line":29,"column":8},"generated":{"line":1,"column":123}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hashName","original":{"line":29,"column":17},"generated":{"line":1,"column":125}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hash","original":{"line":29,"column":26},"generated":{"line":1,"column":127}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":30,"column":6},"generated":{"line":1,"column":130}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hasher","original":{"line":30,"column":7},"generated":{"line":1,"column":134}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":31,"column":10},"generated":{"line":1,"column":136}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":31,"column":10},"generated":{"line":1,"column":142}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"Error","original":{"line":31,"column":14},"generated":{"line":1,"column":146}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hash","original":{"line":31,"column":29},"generated":{"line":1,"column":152}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hash","original":{"line":31,"column":29},"generated":{"line":1,"column":161}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","original":{"line":31,"column":4},"generated":{"line":1,"column":163}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"dek","original":{"line":33,"column":8},"generated":{"line":1,"column":196}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"dek","original":{"line":33,"column":8},"generated":{"line":1,"column":200}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"forge","original":{"line":33,"column":14},"generated":{"line":1,"column":202}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"pkcs5","original":{"line":33,"column":20},"generated":{"line":1,"column":204}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"pbkdf2","original":{"line":33,"column":26},"generated":{"line":1,"column":210}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"password","original":{"line":34,"column":4},"generated":{"line":1,"column":217}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"salt","original":{"line":35,"column":4},"generated":{"line":1,"column":219}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"iterations","original":{"line":36,"column":4},"generated":{"line":1,"column":221}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"keySize","original":{"line":37,"column":4},"generated":{"line":1,"column":223}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"hasher","original":{"line":38,"column":4},"generated":{"line":1,"column":225}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"forge","original":{"line":39,"column":9},"generated":{"line":1,"column":228}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"forge","original":{"line":39,"column":9},"generated":{"line":1,"column":235}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"util","original":{"line":39,"column":15},"generated":{"line":1,"column":237}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"encode64","original":{"line":39,"column":20},"generated":{"line":1,"column":242}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"dek","original":{"line":39,"column":29},"generated":{"line":1,"column":251}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"module","original":{"line":42,"column":0},"generated":{"line":1,"column":254}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"exports","original":{"line":42,"column":7},"generated":{"line":1,"column":261}},{"source":"node_modules/libp2p-crypto/src/pbkdf2.js","name":"pbkdf2","original":{"line":42,"column":17},"generated":{"line":1,"column":269}}],"sources":{"node_modules/libp2p-crypto/src/pbkdf2.js":"'use strict'\n\nconst forge = require('node-forge')\n\n/**\n * Maps an IPFS hash name to its node-forge equivalent.\n *\n * See https://github.com/multiformats/multihash/blob/master/hashtable.csv\n *\n * @private\n */\nconst hashName = {\n  sha1: 'sha1',\n  'sha2-256': 'sha256',\n  'sha2-512': 'sha512'\n}\n\n/**\n * Computes the Password-Based Key Derivation Function 2.\n *\n * @param {string} password\n * @param {string} salt\n * @param {number} iterations\n * @param {number} keySize (in bytes)\n * @param {string} hash - The hash name ('sha1', 'sha2-512, ...)\n * @returns {string} - A new password\n */\nfunction pbkdf2 (password, salt, iterations, keySize, hash) {\n  const hasher = hashName[hash]\n  if (!hasher) {\n    throw new Error(`Hash '${hash}' is unknown or not supported`)\n  }\n  const dek = forge.pkcs5.pbkdf2(\n    password,\n    salt,\n    iterations,\n    keySize,\n    hasher)\n  return forge.util.encode64(dek)\n}\n\nmodule.exports = pbkdf2\n"},"lineCount":null}},"hash":"e040cbd59143c093e920927eb38271dd","cacheData":{"env":{}}}