{"id":"node_modules/ethers/utils/abi-coder.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/package.json","includedInParent":true,"mtime":1535727512263},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"../utils/convert.js","loc":{"line":6,"column":26},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/abi-coder.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/convert.js"},{"name":"../utils/utf8.js","loc":{"line":7,"column":23},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/abi-coder.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/utf8.js"},{"name":"../utils/properties.js","loc":{"line":10,"column":32},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/abi-coder.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/properties.js"},{"name":"../utils/bignumber.js","loc":{"line":15,"column":30},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/abi-coder.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/bignumber.js"},{"name":"../utils/address","loc":{"line":17,"column":28},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/abi-coder.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/address.js"},{"name":"./errors","loc":{"line":28,"column":21},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/abi-coder.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/ethers/utils/errors.js"}],"generated":{"js":"'use strict';\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nvar utils = (function() {\n    var convert = require('../utils/convert.js');\n    var utf8 = require('../utils/utf8.js');\n\n    return {\n        defineProperty: require('../utils/properties.js').defineProperty,\n\n        arrayify: convert.arrayify,\n        padZeros: convert.padZeros,\n\n        bigNumberify: require('../utils/bignumber.js').bigNumberify,\n\n        getAddress: require('../utils/address').getAddress,\n\n        concat: convert.concat,\n\n        toUtf8Bytes: utf8.toUtf8Bytes,\n        toUtf8String: utf8.toUtf8String,\n\n        hexlify: convert.hexlify,\n    };\n})();\n\nvar errors = require('./errors');\n\nvar paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nvar paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nvar paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nvar defaultCoerceFunc = function(type, value) {\n    var match = type.match(paramTypeNumber)\n    if (match && parseInt(match[2]) <= 48) { return value.toNumber(); }\n    return value;\n}\n\n// Shallow copy object (will move to utils/properties in v4)\nfunction shallowCopy(object) {\n    var result = {};\n    for (var key in object) { result[key] = object[key]; }\n    return result;\n}\n\n///////////////////////////////////\n// Parsing for Solidity Signatures\n\nvar regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nvar regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\n\nvar close = { \"(\": \")\", \"[\": \"]\" };\n\nfunction verifyType(type) {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = 'uint256' + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = 'int256' + type.substring(3);\n    }\n\n    return type;\n}\n\nfunction parseParam(param, allowIndexed) {\n    function throwError(i) {\n        throw new Error('unexpected character \"' + param[i] + '\" at position ' + i + ' in \"' + param + '\"');\n    }\n\n    var parent = { type: '', name: '', state: { allowType: true } };\n    var node = parent;\n\n    for (var i = 0; i < param.length; i++) {\n        var c = param[i];\n        switch (c) {\n            case '(':\n                if (!node.state.allowParams) { throwError(i); }\n                delete node.state.allowType;\n                node.type = verifyType(node.type);\n                node.components = [ { type: '', name: '', parent: node, state: { allowType: true } } ];\n                node = node.components[0];\n                break;\n\n            case ')':\n                delete node.state;\n                node.type = verifyType(node.type);\n\n                var child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                delete node.state.allowParams;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case ',':\n                delete node.state;\n                node.type = verifyType(node.type);\n\n                var sibling = { type: '', name: '', parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case ' ':\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== '') {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== '') {\n                        if (allowIndexed && node.name === 'indexed') {\n                            node.indexed = true;\n                            node.name = '';\n                        } else {\n                            delete node.state.allowName;\n                        }\n                    }\n                }\n\n                break;\n\n            case '[':\n                if (!node.state.allowArray) { throwError(i); }\n\n                //if (!node.array) { node.array = ''; }\n                //node.array += c;\n                node.type += c;\n\n                delete node.state.allowArray;\n                delete node.state.allowName;\n                node.state.readArray = true;\n                break;\n\n            case ']':\n                if (!node.state.readArray) { throwError(i); }\n\n                //node.array += c;\n                node.type += c;\n\n                delete node.state.readArray;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    //node.array += c;\n                    node.type += c;\n                } else {\n                    throwError(i);\n                }\n        }\n    }\n\n    if (node.parent) { throw new Error(\"unexpected eof\"); }\n\n    delete parent.state;\n    parent.type = verifyType(parent.type);\n\n    //verifyType(parent);\n\n    return parent;\n}\n\nfunction parseSignatureEvent(fragment) {\n\n    var abi = {\n        anonymous: false,\n        inputs: [],\n        type: 'event'\n    }\n\n    var match = fragment.match(regexParen);\n    if (!match) { throw new Error('invalid event: ' + fragment); }\n\n    abi.name = match[1].trim();\n\n    splitNesting(match[2]).forEach(function(param) {\n        param = parseParam(param, true);\n        param.indexed = !!param.indexed;\n        abi.inputs.push(param);\n    });\n\n    match[3].split(' ').forEach(function(modifier) {\n        switch(modifier) {\n            case 'anonymous':\n                abi.anonymous = true;\n                break;\n            case '':\n                break;\n            default:\n                console.log('unknown modifier: ' + mdifier);\n        }\n    });\n\n    if (abi.name && !abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + result.name + '\"');\n    }\n\n    return abi;\n}\n\nfunction parseSignatureFunction(fragment) {\n    var abi = {\n        constant: false,\n        inputs: [],\n        outputs: [],\n        payable: false,\n        type: 'function'\n    };\n\n    var comps = fragment.split(' returns ');\n    var left = comps[0].match(regexParen);\n    if (!left) { throw new Error('invalid signature'); }\n\n    abi.name = left[1].trim();\n    if (!abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + left[1] + '\"');\n    }\n\n    splitNesting(left[2]).forEach(function(param) {\n        abi.inputs.push(parseParam(param));\n    });\n\n    left[3].split(' ').forEach(function(modifier) {\n        switch (modifier) {\n            case 'constant':\n                abi.constant = true;\n                break;\n            case 'payable':\n                abi.payable = true;\n                break;\n            case 'pure':\n                abi.constant = true;\n                abi.stateMutability = 'pure';\n                break;\n            case 'view':\n                abi.constant = true;\n                abi.stateMutability = 'view';\n                break;\n            case '':\n                break;\n            default:\n                console.log('unknown modifier: ' + modifier);\n        }\n    });\n\n    // We have outputs\n    if (comps.length > 1) {\n        var right = comps[1].match(regexParen);\n        if (right[1].trim() != '' || right[3].trim() != '') {\n            throw new Error('unexpected tokens');\n        }\n\n        splitNesting(right[2]).forEach(function(param) {\n            abi.outputs.push(parseParam(param));\n        });\n    }\n\n    return abi;\n}\n\n\nfunction parseSignature(fragment) {\n    if(typeof(fragment) === 'string') {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        fragment = fragment.replace(/\\(/g, ' (').replace(/\\)/g, ') ').replace(/\\s+/g, ' ');\n        fragment = fragment.trim();\n\n        if (fragment.substring(0, 6) === 'event ') {\n           return parseSignatureEvent(fragment.substring(6).trim());\n\n        } else {\n            if (fragment.substring(0, 9) === 'function ') {\n                fragment = fragment.substring(9);\n            }\n            return parseSignatureFunction(fragment.trim());\n        }\n    }\n\n    throw new Error('unknown fragment');\n}\n\n\n///////////////////////////////////\n// Coders\n\nvar coderNull = function(coerceFunc) {\n    return {\n        name: 'null',\n        type: '',\n        encode: function(value) {\n            return utils.arrayify([]);\n        },\n        decode: function(data, offset) {\n            if (offset > data.length) { throw new Error('invalid null'); }\n            return {\n                consumed: 0,\n                value: coerceFunc('null', undefined)\n            }\n        },\n        dynamic: false\n    };\n}\n\nvar coderNumber = function(coerceFunc, size, signed, localName) {\n    var name = ((signed ? 'int': 'uint') + (size * 8));\n    return {\n        localName: localName,\n        name: name,\n        type: name,\n        encode: function(value) {\n            try {\n                value = utils.bigNumberify(value)\n            } catch (error) {\n                errors.throwError('invalid number value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: value\n                });\n            }\n            value = value.toTwos(size * 8).maskn(size * 8);\n            //value = value.toTwos(size * 8).maskn(size * 8);\n            if (signed) {\n                value = value.fromTwos(size * 8).toTwos(256);\n            }\n            return utils.padZeros(utils.arrayify(value), 32);\n        },\n        decode: function(data, offset) {\n            if (data.length < offset + 32) {\n                errors.throwError('insufficient data for ' + name + ' type', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: name,\n                    value: utils.hexlify(data.slice(offset, offset + 32))\n                });\n            }\n            var junkLength = 32 - size;\n            var value = utils.bigNumberify(data.slice(offset + junkLength, offset + 32));\n            if (signed) {\n                value = value.fromTwos(size * 8);\n            } else {\n                value = value.maskn(size * 8);\n            }\n\n            //if (size <= 6) { value = value.toNumber(); }\n\n            return {\n                consumed: 32,\n                value: coerceFunc(name, value),\n            }\n        }\n    };\n}\nvar uint256Coder = coderNumber(function(type, value) { return value; }, 32, false);\n\nvar coderBoolean = function(coerceFunc, localName) {\n    return {\n        localName: localName,\n        name: 'bool',\n        type: 'bool',\n        encode: function(value) {\n           return uint256Coder.encode(!!value ? 1: 0);\n        },\n        decode: function(data, offset) {\n            try {\n                var result = uint256Coder.decode(data, offset);\n            } catch (error) {\n                if (error.reason === 'insufficient data for uint256 type') {\n                    errors.throwError('insufficient data for boolean type', errors.INVALID_ARGUMENT, {\n                        arg: localName,\n                        coderType: 'boolean',\n                        value: error.value\n                    });\n                }\n                throw error;\n            }\n            return {\n                consumed: result.consumed,\n                value: coerceFunc('boolean', !result.value.isZero())\n            }\n        }\n    }\n}\n\nvar coderFixedBytes = function(coerceFunc, length, localName) {\n    var name = ('bytes' + length);\n    return {\n        localName: localName,\n        name: name,\n        type: name,\n        encode: function(value) {\n            try {\n                value = utils.arrayify(value);\n            } catch (error) {\n                errors.throwError('invalid ' + name + ' value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: error.value\n                });\n            }\n            if (length === 32) { return value; }\n\n            var result = new Uint8Array(32);\n            result.set(value);\n            return result;\n        },\n        decode: function(data, offset) {\n            if (data.length < offset + 32) {\n                errors.throwError('insufficient data for ' + name + ' type', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: name,\n                    value: utils.hexlify(data.slice(offset, offset + 32))\n                });\n            }\n\n            return {\n                consumed: 32,\n                value: coerceFunc(name, utils.hexlify(data.slice(offset, offset + length)))\n            }\n        }\n    };\n}\n\nvar coderAddress = function(coerceFunc, localName) {\n    return {\n        localName: localName,\n        name: 'address',\n        type: 'address',\n        encode: function(value) {\n            try {\n                value = utils.arrayify(utils.getAddress(value));\n            } catch (error) {\n                errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: value\n                });\n            }\n            var result = new Uint8Array(32);\n            result.set(value, 12);\n            return result;\n        },\n        decode: function(data, offset) {\n            if (data.length < offset + 32) {\n                errors.throwError('insufficuent data for address type', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: 'address',\n                    value: utils.hexlify(data.slice(offset, offset + 32))\n                });\n            }\n            return {\n                consumed: 32,\n                value: coerceFunc('address', utils.getAddress(utils.hexlify(data.slice(offset + 12, offset + 32))))\n           }\n        }\n    }\n}\n\nfunction _encodeDynamicBytes(value) {\n    var dataLength = parseInt(32 * Math.ceil(value.length / 32));\n    var padding = new Uint8Array(dataLength - value.length);\n\n    return utils.concat([\n        uint256Coder.encode(value.length),\n        value,\n        padding\n    ]);\n}\n\nfunction _decodeDynamicBytes(data, offset, localName) {\n    if (data.length < offset + 32) {\n        errors.throwError('insufficient data for dynamicBytes length', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: utils.hexlify(data.slice(offset, offset + 32))\n        });\n    }\n\n    var length = uint256Coder.decode(data, offset).value;\n    try {\n        length = length.toNumber();\n    } catch (error) {\n        errors.throwError('dynamic bytes count too large', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: length.toString()\n        });\n    }\n\n    if (data.length < offset + 32 + length) {\n        errors.throwError('insufficient data for dynamicBytes type', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: utils.hexlify(data.slice(offset, offset + 32 + length))\n        });\n    }\n\n    return {\n        consumed: parseInt(32 + 32 * Math.ceil(length / 32)),\n        value: data.slice(offset + 32, offset + 32 + length),\n    }\n}\n\nvar coderDynamicBytes = function(coerceFunc, localName) {\n    return {\n        localName: localName,\n        name: 'bytes',\n        type: 'bytes',\n        encode: function(value) {\n            try {\n                value = utils.arrayify(value);\n            } catch (error) {\n                errors.throwError('invalid bytes value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: error.value\n                });\n            }\n            return _encodeDynamicBytes(value);\n        },\n        decode: function(data, offset) {\n            var result = _decodeDynamicBytes(data, offset, localName);\n            result.value = coerceFunc('bytes', utils.hexlify(result.value));\n            return result;\n        },\n        dynamic: true\n    };\n}\n\nvar coderString = function(coerceFunc, localName) {\n    return {\n        localName: localName,\n        name: 'string',\n        type: 'string',\n        encode: function(value) {\n            if (typeof(value) !== 'string') {\n                errors.throwError('invalid string value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: value\n                });\n            }\n            return _encodeDynamicBytes(utils.toUtf8Bytes(value));\n        },\n        decode: function(data, offset) {\n            var result = _decodeDynamicBytes(data, offset, localName);\n            result.value = coerceFunc('string', utils.toUtf8String(result.value));\n            return result;\n        },\n        dynamic: true\n    };\n}\n\nfunction alignSize(size) {\n    return parseInt(32 * Math.ceil(size / 32));\n}\n\nfunction pack(coders, values) {\n\n    if (Array.isArray(values)) {\n       // do nothing\n\n    } else if (values && typeof(values) === 'object') {\n        var arrayValues = [];\n        coders.forEach(function(coder) {\n            arrayValues.push(values[coder.localName]);\n        });\n        values = arrayValues;\n\n    } else {\n        errors.throwError('invalid tuple value', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            type: typeof(values),\n            value: values\n        });\n    }\n\n    if (coders.length !== values.length) {\n        errors.throwError('types/value length mismatch', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            value: values\n        });\n    }\n\n    var parts = [];\n\n    coders.forEach(function(coder, index) {\n        parts.push({ dynamic: coder.dynamic, value: coder.encode(values[index]) });\n    });\n\n    var staticSize = 0, dynamicSize = 0;\n    parts.forEach(function(part, index) {\n        if (part.dynamic) {\n            staticSize += 32;\n            dynamicSize += alignSize(part.value.length);\n        } else {\n            staticSize += alignSize(part.value.length);\n        }\n    });\n\n    var offset = 0, dynamicOffset = staticSize;\n    var data = new Uint8Array(staticSize + dynamicSize);\n\n    parts.forEach(function(part, index) {\n        if (part.dynamic) {\n            //uint256Coder.encode(dynamicOffset).copy(data, offset);\n            data.set(uint256Coder.encode(dynamicOffset), offset);\n            offset += 32;\n\n            //part.value.copy(data, dynamicOffset);  @TODO\n            data.set(part.value, dynamicOffset);\n            dynamicOffset += alignSize(part.value.length);\n        } else {\n            //part.value.copy(data, offset);  @TODO\n            data.set(part.value, offset);\n            offset += alignSize(part.value.length);\n        }\n    });\n\n    return data;\n}\n\nfunction unpack(coders, data, offset) {\n    var baseOffset = offset;\n    var consumed = 0;\n    var value = [];\n    coders.forEach(function(coder) {\n        if (coder.dynamic) {\n            var dynamicOffset = uint256Coder.decode(data, offset);\n            var result = coder.decode(data, baseOffset + dynamicOffset.value.toNumber());\n            // The dynamic part is leap-frogged somewhere else; doesn't count towards size\n            result.consumed = dynamicOffset.consumed;\n        } else {\n            var result = coder.decode(data, offset);\n        }\n\n        if (result.value != undefined) {\n            value.push(result.value);\n        }\n\n        offset += result.consumed;\n        consumed += result.consumed;\n    });\n\n    coders.forEach(function(coder, index) {\n        var name = coder.localName;\n        if (!name) { return; }\n\n        if (typeof(name) === 'object') { name = name.name; }\n        if (!name) { return; }\n\n        if (name === 'length') { name = '_length'; }\n\n        if (value[name] != null) { return; }\n\n        value[name] = value[index];\n    });\n\n    return {\n        value: value,\n        consumed: consumed\n    }\n\n    return result;\n}\n\nfunction coderArray(coerceFunc, coder, length, localName) {\n    var type = (coder.type + '[' + (length >= 0 ? length: '') + ']');\n\n    return {\n        coder: coder,\n        localName: localName,\n        length: length,\n        name: 'array',\n        type: type,\n        encode: function(value) {\n            if (!Array.isArray(value)) {\n                errors.throwError('expected array value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: 'array',\n                    type: typeof(value),\n                    value: value\n                });\n            }\n\n            var count = length;\n\n            var result = new Uint8Array(0);\n            if (count === -1) {\n                count = value.length;\n                result = uint256Coder.encode(count);\n            }\n\n            if (count !== value.length) {\n                error.throwError('array value length mismatch', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: 'array',\n                    count: value.length,\n                    expectedCount: count,\n                    value: value\n                });\n            }\n\n            var coders = [];\n            value.forEach(function(value) { coders.push(coder); });\n\n            return utils.concat([result, pack(coders, value)]);\n        },\n        decode: function(data, offset) {\n            // @TODO:\n            //if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n\n            var consumed = 0;\n\n            var count = length;\n\n            if (count === -1) {\n                 try {\n                      var decodedLength = uint256Coder.decode(data, offset);\n                 } catch (error) {\n                     errors.throwError('insufficient data for dynamic array length', errors.INVALID_ARGUMENT, {\n                         arg: localName,\n                         coderType: 'array',\n                         value: error.value\n                     });\n                 }\n                 try {\n                     count = decodedLength.value.toNumber();\n                 } catch (error) {\n                     errors.throwError('array count too large', errors.INVALID_ARGUMENT, {\n                         arg: localName,\n                         coderType: 'array',\n                         value: decodedLength.value.toString()\n                     });\n                 }\n                 consumed += decodedLength.consumed;\n                 offset += decodedLength.consumed;\n            }\n\n            // We don't want the children to have a localName\n            var subCoder = {\n                name: coder.name,\n                type: coder.type,\n                encode: coder.encode,\n                decode: coder.decode,\n                dynamic: coder.dynamic\n            };\n\n            var coders = [];\n            for (var i = 0; i < count; i++) { coders.push(subCoder); }\n\n            var result = unpack(coders, data, offset);\n            result.consumed += consumed;\n            result.value = coerceFunc(type, result.value);\n            return result;\n        },\n        dynamic: (length === -1 || coder.dynamic)\n    }\n}\n\n\nfunction coderTuple(coerceFunc, coders, localName) {\n\n    var dynamic = false;\n    var types = [];\n    coders.forEach(function(coder) {\n        if (coder.dynamic) { dynamic = true; }\n        types.push(coder.type);\n    });\n\n    var type = ('tuple(' + types.join(',') + ')');\n\n    return {\n        coders: coders,\n        localName: localName,\n        name: 'tuple',\n        type: type,\n        encode: function(value) {\n            return pack(coders, value);\n        },\n        decode: function(data, offset) {\n            var result = unpack(coders, data, offset);\n            result.value = coerceFunc(type, result.value);\n            return result;\n        },\n        dynamic: dynamic\n    };\n}\n/*\nfunction getTypes(coders) {\n    var type = coderTuple(coders).type;\n    return type.substring(6, type.length - 1);\n}\n*/\nfunction splitNesting(value) {\n    var result = [];\n    var accum = '';\n    var depth = 0;\n    for (var offset = 0; offset < value.length; offset++) {\n        var c = value[offset];\n        if (c === ',' && depth === 0) {\n            result.push(accum);\n            accum = '';\n        } else {\n            accum += c;\n            if (c === '(') {\n                depth++;\n            } else if (c === ')') {\n                depth--;\n                if (depth === -1) {\n                    throw new Error('unbalanced parenthsis');\n                }\n            }\n        }\n    }\n    result.push(accum);\n\n    return result;\n}\n\nvar paramTypeSimple = {\n    address: coderAddress,\n    bool: coderBoolean,\n    string: coderString,\n    bytes: coderDynamicBytes,\n};\n\nfunction getTupleParamCoder(coerceFunc, components, localName) {\n    if (!components) { components = []; }\n    var coders = [];\n    components.forEach(function(component) {\n        coders.push(getParamCoder(coerceFunc, component));\n    });\n\n    return coderTuple(coerceFunc, coders, localName);\n}\n\nfunction getParamCoder(coerceFunc, param) {\n    var coder = paramTypeSimple[param.type];\n    if (coder) { return coder(coerceFunc, param.name); }\n\n    var match = param.type.match(paramTypeNumber);\n    if (match) {\n        var size = parseInt(match[2] || 256);\n        if (size === 0 || size > 256 || (size % 8) !== 0) {\n            errors.throwError('invalid ' + match[1] + ' bit length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return coderNumber(coerceFunc, size / 8, (match[1] === 'int'), param.name);\n    }\n\n    var match = param.type.match(paramTypeBytes);\n    if (match) {\n        var size = parseInt(match[1]);\n        if (size === 0 || size > 32) {\n            errors.throwError('invalid bytes length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return coderFixedBytes(coerceFunc, size, param.name);\n    }\n\n    var match = param.type.match(paramTypeArray);\n    if (match) {\n        param = shallowCopy(param);\n        var size = parseInt(match[2] || -1);\n        param.type = match[1];\n        return coderArray(coerceFunc, getParamCoder(coerceFunc, param), size, param.name);\n    }\n\n    if (param.type.substring(0, 5) === 'tuple') {\n        return getTupleParamCoder(coerceFunc, param.components, param.name);\n    }\n\n    if (type === '') {\n        return coderNull(coerceFunc);\n    }\n\n    errors.throwError('invalid type', errors.INVALID_ARGUMENT, {\n        arg: 'type',\n        value: type\n    });\n}\n\nfunction Coder(coerceFunc) {\n    if (!(this instanceof Coder)) { throw new Error('missing new'); }\n    if (!coerceFunc) { coerceFunc = defaultCoerceFunc; }\n    utils.defineProperty(this, 'coerceFunc', coerceFunc);\n}\n\n// Legacy name support\n// @TODO: In the next major version, remove names from decode/encode and don't do this\nfunction populateNames(type, name) {\n    if (!name) { return; }\n\n    if (type.type.substring(0, 5) === 'tuple' && typeof(name) !== 'string') {\n        if (type.components.length != name.names.length) {\n            errors.throwError('names/types length mismatch', errors.INVALID_ARGUMENT, {\n                count: { names: name.names.length, types: type.components.length },\n                value: { names: name.names, types: type.components }\n            });\n        }\n\n        name.names.forEach(function(name, index) {\n            populateNames(type.components[index], name);\n        });\n\n        name = (name.name || '');\n    }\n\n    if (!type.name && typeof(name) === 'string') {\n        type.name = name;\n    }\n}\n\nutils.defineProperty(Coder.prototype, 'encode', function(names, types, values) {\n\n    // Names is optional, so shift over all the parameters if not provided\n    if (arguments.length < 3) {\n        values = types;\n        types = names;\n        names = [];\n    }\n\n    if (types.length !== values.length) {\n        errors.throwError('types/values length mismatch', errors.INVALID_ARGUMENT, {\n            count: { types: types.length, values: values.length },\n            value: { types: types, values: values }\n        });\n    }\n\n    var coders = [];\n    types.forEach(function(type, index) {\n        // Convert types to type objects\n        //   - \"uint foo\" => { type: \"uint\", name: \"foo\" }\n        //   - \"tuple(uint, uint)\" => { type: \"tuple\", components: [ { type: \"uint\" }, { type: \"uint\" }, ] }\n        if (typeof(type) === 'string') {\n            type = parseParam(type);\n        }\n\n        // Legacy support for passing in names (this is going away in the next major version)\n        populateNames(type, names[index]);\n\n        coders.push(getParamCoder(this.coerceFunc, type));\n    }, this);\n\n    return utils.hexlify(coderTuple(this.coerceFunc, coders).encode(values));\n});\n\nutils.defineProperty(Coder.prototype, 'decode', function(names, types, data) {\n\n    // Names is optional, so shift over all the parameters if not provided\n    if (arguments.length < 3) {\n        data = types;\n        types = names;\n        names = [];\n    }\n\n    data = utils.arrayify(data);\n\n    var coders = [];\n    types.forEach(function(type, index) {\n\n        // See encode for details\n        if (typeof(type) === 'string') {\n            type = parseParam(type);\n        }\n\n        // Legacy; going away in the next major version\n        populateNames(type, names[index]);\n\n        coders.push(getParamCoder(this.coerceFunc, type));\n    }, this);\n\n    return coderTuple(this.coerceFunc, coders).decode(data, 0).value;\n\n});\n\nutils.defineProperty(Coder, 'defaultCoder', new Coder());\n\nutils.defineProperty(Coder, 'parseSignature', parseSignature);\n\n\nmodule.exports = Coder\n","map":{"mappings":[{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/ethers/utils/abi-coder.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}}],"sources":{"node_modules/ethers/utils/abi-coder.js":"'use strict';\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nvar utils = (function() {\n    var convert = require('../utils/convert.js');\n    var utf8 = require('../utils/utf8.js');\n\n    return {\n        defineProperty: require('../utils/properties.js').defineProperty,\n\n        arrayify: convert.arrayify,\n        padZeros: convert.padZeros,\n\n        bigNumberify: require('../utils/bignumber.js').bigNumberify,\n\n        getAddress: require('../utils/address').getAddress,\n\n        concat: convert.concat,\n\n        toUtf8Bytes: utf8.toUtf8Bytes,\n        toUtf8String: utf8.toUtf8String,\n\n        hexlify: convert.hexlify,\n    };\n})();\n\nvar errors = require('./errors');\n\nvar paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nvar paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nvar paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nvar defaultCoerceFunc = function(type, value) {\n    var match = type.match(paramTypeNumber)\n    if (match && parseInt(match[2]) <= 48) { return value.toNumber(); }\n    return value;\n}\n\n// Shallow copy object (will move to utils/properties in v4)\nfunction shallowCopy(object) {\n    var result = {};\n    for (var key in object) { result[key] = object[key]; }\n    return result;\n}\n\n///////////////////////////////////\n// Parsing for Solidity Signatures\n\nvar regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nvar regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\n\nvar close = { \"(\": \")\", \"[\": \"]\" };\n\nfunction verifyType(type) {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = 'uint256' + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = 'int256' + type.substring(3);\n    }\n\n    return type;\n}\n\nfunction parseParam(param, allowIndexed) {\n    function throwError(i) {\n        throw new Error('unexpected character \"' + param[i] + '\" at position ' + i + ' in \"' + param + '\"');\n    }\n\n    var parent = { type: '', name: '', state: { allowType: true } };\n    var node = parent;\n\n    for (var i = 0; i < param.length; i++) {\n        var c = param[i];\n        switch (c) {\n            case '(':\n                if (!node.state.allowParams) { throwError(i); }\n                delete node.state.allowType;\n                node.type = verifyType(node.type);\n                node.components = [ { type: '', name: '', parent: node, state: { allowType: true } } ];\n                node = node.components[0];\n                break;\n\n            case ')':\n                delete node.state;\n                node.type = verifyType(node.type);\n\n                var child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                delete node.state.allowParams;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case ',':\n                delete node.state;\n                node.type = verifyType(node.type);\n\n                var sibling = { type: '', name: '', parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case ' ':\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== '') {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== '') {\n                        if (allowIndexed && node.name === 'indexed') {\n                            node.indexed = true;\n                            node.name = '';\n                        } else {\n                            delete node.state.allowName;\n                        }\n                    }\n                }\n\n                break;\n\n            case '[':\n                if (!node.state.allowArray) { throwError(i); }\n\n                //if (!node.array) { node.array = ''; }\n                //node.array += c;\n                node.type += c;\n\n                delete node.state.allowArray;\n                delete node.state.allowName;\n                node.state.readArray = true;\n                break;\n\n            case ']':\n                if (!node.state.readArray) { throwError(i); }\n\n                //node.array += c;\n                node.type += c;\n\n                delete node.state.readArray;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    //node.array += c;\n                    node.type += c;\n                } else {\n                    throwError(i);\n                }\n        }\n    }\n\n    if (node.parent) { throw new Error(\"unexpected eof\"); }\n\n    delete parent.state;\n    parent.type = verifyType(parent.type);\n\n    //verifyType(parent);\n\n    return parent;\n}\n\nfunction parseSignatureEvent(fragment) {\n\n    var abi = {\n        anonymous: false,\n        inputs: [],\n        type: 'event'\n    }\n\n    var match = fragment.match(regexParen);\n    if (!match) { throw new Error('invalid event: ' + fragment); }\n\n    abi.name = match[1].trim();\n\n    splitNesting(match[2]).forEach(function(param) {\n        param = parseParam(param, true);\n        param.indexed = !!param.indexed;\n        abi.inputs.push(param);\n    });\n\n    match[3].split(' ').forEach(function(modifier) {\n        switch(modifier) {\n            case 'anonymous':\n                abi.anonymous = true;\n                break;\n            case '':\n                break;\n            default:\n                console.log('unknown modifier: ' + mdifier);\n        }\n    });\n\n    if (abi.name && !abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + result.name + '\"');\n    }\n\n    return abi;\n}\n\nfunction parseSignatureFunction(fragment) {\n    var abi = {\n        constant: false,\n        inputs: [],\n        outputs: [],\n        payable: false,\n        type: 'function'\n    };\n\n    var comps = fragment.split(' returns ');\n    var left = comps[0].match(regexParen);\n    if (!left) { throw new Error('invalid signature'); }\n\n    abi.name = left[1].trim();\n    if (!abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + left[1] + '\"');\n    }\n\n    splitNesting(left[2]).forEach(function(param) {\n        abi.inputs.push(parseParam(param));\n    });\n\n    left[3].split(' ').forEach(function(modifier) {\n        switch (modifier) {\n            case 'constant':\n                abi.constant = true;\n                break;\n            case 'payable':\n                abi.payable = true;\n                break;\n            case 'pure':\n                abi.constant = true;\n                abi.stateMutability = 'pure';\n                break;\n            case 'view':\n                abi.constant = true;\n                abi.stateMutability = 'view';\n                break;\n            case '':\n                break;\n            default:\n                console.log('unknown modifier: ' + modifier);\n        }\n    });\n\n    // We have outputs\n    if (comps.length > 1) {\n        var right = comps[1].match(regexParen);\n        if (right[1].trim() != '' || right[3].trim() != '') {\n            throw new Error('unexpected tokens');\n        }\n\n        splitNesting(right[2]).forEach(function(param) {\n            abi.outputs.push(parseParam(param));\n        });\n    }\n\n    return abi;\n}\n\n\nfunction parseSignature(fragment) {\n    if(typeof(fragment) === 'string') {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        fragment = fragment.replace(/\\(/g, ' (').replace(/\\)/g, ') ').replace(/\\s+/g, ' ');\n        fragment = fragment.trim();\n\n        if (fragment.substring(0, 6) === 'event ') {\n           return parseSignatureEvent(fragment.substring(6).trim());\n\n        } else {\n            if (fragment.substring(0, 9) === 'function ') {\n                fragment = fragment.substring(9);\n            }\n            return parseSignatureFunction(fragment.trim());\n        }\n    }\n\n    throw new Error('unknown fragment');\n}\n\n\n///////////////////////////////////\n// Coders\n\nvar coderNull = function(coerceFunc) {\n    return {\n        name: 'null',\n        type: '',\n        encode: function(value) {\n            return utils.arrayify([]);\n        },\n        decode: function(data, offset) {\n            if (offset > data.length) { throw new Error('invalid null'); }\n            return {\n                consumed: 0,\n                value: coerceFunc('null', undefined)\n            }\n        },\n        dynamic: false\n    };\n}\n\nvar coderNumber = function(coerceFunc, size, signed, localName) {\n    var name = ((signed ? 'int': 'uint') + (size * 8));\n    return {\n        localName: localName,\n        name: name,\n        type: name,\n        encode: function(value) {\n            try {\n                value = utils.bigNumberify(value)\n            } catch (error) {\n                errors.throwError('invalid number value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: value\n                });\n            }\n            value = value.toTwos(size * 8).maskn(size * 8);\n            //value = value.toTwos(size * 8).maskn(size * 8);\n            if (signed) {\n                value = value.fromTwos(size * 8).toTwos(256);\n            }\n            return utils.padZeros(utils.arrayify(value), 32);\n        },\n        decode: function(data, offset) {\n            if (data.length < offset + 32) {\n                errors.throwError('insufficient data for ' + name + ' type', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: name,\n                    value: utils.hexlify(data.slice(offset, offset + 32))\n                });\n            }\n            var junkLength = 32 - size;\n            var value = utils.bigNumberify(data.slice(offset + junkLength, offset + 32));\n            if (signed) {\n                value = value.fromTwos(size * 8);\n            } else {\n                value = value.maskn(size * 8);\n            }\n\n            //if (size <= 6) { value = value.toNumber(); }\n\n            return {\n                consumed: 32,\n                value: coerceFunc(name, value),\n            }\n        }\n    };\n}\nvar uint256Coder = coderNumber(function(type, value) { return value; }, 32, false);\n\nvar coderBoolean = function(coerceFunc, localName) {\n    return {\n        localName: localName,\n        name: 'bool',\n        type: 'bool',\n        encode: function(value) {\n           return uint256Coder.encode(!!value ? 1: 0);\n        },\n        decode: function(data, offset) {\n            try {\n                var result = uint256Coder.decode(data, offset);\n            } catch (error) {\n                if (error.reason === 'insufficient data for uint256 type') {\n                    errors.throwError('insufficient data for boolean type', errors.INVALID_ARGUMENT, {\n                        arg: localName,\n                        coderType: 'boolean',\n                        value: error.value\n                    });\n                }\n                throw error;\n            }\n            return {\n                consumed: result.consumed,\n                value: coerceFunc('boolean', !result.value.isZero())\n            }\n        }\n    }\n}\n\nvar coderFixedBytes = function(coerceFunc, length, localName) {\n    var name = ('bytes' + length);\n    return {\n        localName: localName,\n        name: name,\n        type: name,\n        encode: function(value) {\n            try {\n                value = utils.arrayify(value);\n            } catch (error) {\n                errors.throwError('invalid ' + name + ' value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: error.value\n                });\n            }\n            if (length === 32) { return value; }\n\n            var result = new Uint8Array(32);\n            result.set(value);\n            return result;\n        },\n        decode: function(data, offset) {\n            if (data.length < offset + 32) {\n                errors.throwError('insufficient data for ' + name + ' type', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: name,\n                    value: utils.hexlify(data.slice(offset, offset + 32))\n                });\n            }\n\n            return {\n                consumed: 32,\n                value: coerceFunc(name, utils.hexlify(data.slice(offset, offset + length)))\n            }\n        }\n    };\n}\n\nvar coderAddress = function(coerceFunc, localName) {\n    return {\n        localName: localName,\n        name: 'address',\n        type: 'address',\n        encode: function(value) {\n            try {\n                value = utils.arrayify(utils.getAddress(value));\n            } catch (error) {\n                errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: value\n                });\n            }\n            var result = new Uint8Array(32);\n            result.set(value, 12);\n            return result;\n        },\n        decode: function(data, offset) {\n            if (data.length < offset + 32) {\n                errors.throwError('insufficuent data for address type', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: 'address',\n                    value: utils.hexlify(data.slice(offset, offset + 32))\n                });\n            }\n            return {\n                consumed: 32,\n                value: coerceFunc('address', utils.getAddress(utils.hexlify(data.slice(offset + 12, offset + 32))))\n           }\n        }\n    }\n}\n\nfunction _encodeDynamicBytes(value) {\n    var dataLength = parseInt(32 * Math.ceil(value.length / 32));\n    var padding = new Uint8Array(dataLength - value.length);\n\n    return utils.concat([\n        uint256Coder.encode(value.length),\n        value,\n        padding\n    ]);\n}\n\nfunction _decodeDynamicBytes(data, offset, localName) {\n    if (data.length < offset + 32) {\n        errors.throwError('insufficient data for dynamicBytes length', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: utils.hexlify(data.slice(offset, offset + 32))\n        });\n    }\n\n    var length = uint256Coder.decode(data, offset).value;\n    try {\n        length = length.toNumber();\n    } catch (error) {\n        errors.throwError('dynamic bytes count too large', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: length.toString()\n        });\n    }\n\n    if (data.length < offset + 32 + length) {\n        errors.throwError('insufficient data for dynamicBytes type', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: utils.hexlify(data.slice(offset, offset + 32 + length))\n        });\n    }\n\n    return {\n        consumed: parseInt(32 + 32 * Math.ceil(length / 32)),\n        value: data.slice(offset + 32, offset + 32 + length),\n    }\n}\n\nvar coderDynamicBytes = function(coerceFunc, localName) {\n    return {\n        localName: localName,\n        name: 'bytes',\n        type: 'bytes',\n        encode: function(value) {\n            try {\n                value = utils.arrayify(value);\n            } catch (error) {\n                errors.throwError('invalid bytes value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: error.value\n                });\n            }\n            return _encodeDynamicBytes(value);\n        },\n        decode: function(data, offset) {\n            var result = _decodeDynamicBytes(data, offset, localName);\n            result.value = coerceFunc('bytes', utils.hexlify(result.value));\n            return result;\n        },\n        dynamic: true\n    };\n}\n\nvar coderString = function(coerceFunc, localName) {\n    return {\n        localName: localName,\n        name: 'string',\n        type: 'string',\n        encode: function(value) {\n            if (typeof(value) !== 'string') {\n                errors.throwError('invalid string value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    type: typeof(value),\n                    value: value\n                });\n            }\n            return _encodeDynamicBytes(utils.toUtf8Bytes(value));\n        },\n        decode: function(data, offset) {\n            var result = _decodeDynamicBytes(data, offset, localName);\n            result.value = coerceFunc('string', utils.toUtf8String(result.value));\n            return result;\n        },\n        dynamic: true\n    };\n}\n\nfunction alignSize(size) {\n    return parseInt(32 * Math.ceil(size / 32));\n}\n\nfunction pack(coders, values) {\n\n    if (Array.isArray(values)) {\n       // do nothing\n\n    } else if (values && typeof(values) === 'object') {\n        var arrayValues = [];\n        coders.forEach(function(coder) {\n            arrayValues.push(values[coder.localName]);\n        });\n        values = arrayValues;\n\n    } else {\n        errors.throwError('invalid tuple value', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            type: typeof(values),\n            value: values\n        });\n    }\n\n    if (coders.length !== values.length) {\n        errors.throwError('types/value length mismatch', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            value: values\n        });\n    }\n\n    var parts = [];\n\n    coders.forEach(function(coder, index) {\n        parts.push({ dynamic: coder.dynamic, value: coder.encode(values[index]) });\n    });\n\n    var staticSize = 0, dynamicSize = 0;\n    parts.forEach(function(part, index) {\n        if (part.dynamic) {\n            staticSize += 32;\n            dynamicSize += alignSize(part.value.length);\n        } else {\n            staticSize += alignSize(part.value.length);\n        }\n    });\n\n    var offset = 0, dynamicOffset = staticSize;\n    var data = new Uint8Array(staticSize + dynamicSize);\n\n    parts.forEach(function(part, index) {\n        if (part.dynamic) {\n            //uint256Coder.encode(dynamicOffset).copy(data, offset);\n            data.set(uint256Coder.encode(dynamicOffset), offset);\n            offset += 32;\n\n            //part.value.copy(data, dynamicOffset);  @TODO\n            data.set(part.value, dynamicOffset);\n            dynamicOffset += alignSize(part.value.length);\n        } else {\n            //part.value.copy(data, offset);  @TODO\n            data.set(part.value, offset);\n            offset += alignSize(part.value.length);\n        }\n    });\n\n    return data;\n}\n\nfunction unpack(coders, data, offset) {\n    var baseOffset = offset;\n    var consumed = 0;\n    var value = [];\n    coders.forEach(function(coder) {\n        if (coder.dynamic) {\n            var dynamicOffset = uint256Coder.decode(data, offset);\n            var result = coder.decode(data, baseOffset + dynamicOffset.value.toNumber());\n            // The dynamic part is leap-frogged somewhere else; doesn't count towards size\n            result.consumed = dynamicOffset.consumed;\n        } else {\n            var result = coder.decode(data, offset);\n        }\n\n        if (result.value != undefined) {\n            value.push(result.value);\n        }\n\n        offset += result.consumed;\n        consumed += result.consumed;\n    });\n\n    coders.forEach(function(coder, index) {\n        var name = coder.localName;\n        if (!name) { return; }\n\n        if (typeof(name) === 'object') { name = name.name; }\n        if (!name) { return; }\n\n        if (name === 'length') { name = '_length'; }\n\n        if (value[name] != null) { return; }\n\n        value[name] = value[index];\n    });\n\n    return {\n        value: value,\n        consumed: consumed\n    }\n\n    return result;\n}\n\nfunction coderArray(coerceFunc, coder, length, localName) {\n    var type = (coder.type + '[' + (length >= 0 ? length: '') + ']');\n\n    return {\n        coder: coder,\n        localName: localName,\n        length: length,\n        name: 'array',\n        type: type,\n        encode: function(value) {\n            if (!Array.isArray(value)) {\n                errors.throwError('expected array value', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: 'array',\n                    type: typeof(value),\n                    value: value\n                });\n            }\n\n            var count = length;\n\n            var result = new Uint8Array(0);\n            if (count === -1) {\n                count = value.length;\n                result = uint256Coder.encode(count);\n            }\n\n            if (count !== value.length) {\n                error.throwError('array value length mismatch', errors.INVALID_ARGUMENT, {\n                    arg: localName,\n                    coderType: 'array',\n                    count: value.length,\n                    expectedCount: count,\n                    value: value\n                });\n            }\n\n            var coders = [];\n            value.forEach(function(value) { coders.push(coder); });\n\n            return utils.concat([result, pack(coders, value)]);\n        },\n        decode: function(data, offset) {\n            // @TODO:\n            //if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n\n            var consumed = 0;\n\n            var count = length;\n\n            if (count === -1) {\n                 try {\n                      var decodedLength = uint256Coder.decode(data, offset);\n                 } catch (error) {\n                     errors.throwError('insufficient data for dynamic array length', errors.INVALID_ARGUMENT, {\n                         arg: localName,\n                         coderType: 'array',\n                         value: error.value\n                     });\n                 }\n                 try {\n                     count = decodedLength.value.toNumber();\n                 } catch (error) {\n                     errors.throwError('array count too large', errors.INVALID_ARGUMENT, {\n                         arg: localName,\n                         coderType: 'array',\n                         value: decodedLength.value.toString()\n                     });\n                 }\n                 consumed += decodedLength.consumed;\n                 offset += decodedLength.consumed;\n            }\n\n            // We don't want the children to have a localName\n            var subCoder = {\n                name: coder.name,\n                type: coder.type,\n                encode: coder.encode,\n                decode: coder.decode,\n                dynamic: coder.dynamic\n            };\n\n            var coders = [];\n            for (var i = 0; i < count; i++) { coders.push(subCoder); }\n\n            var result = unpack(coders, data, offset);\n            result.consumed += consumed;\n            result.value = coerceFunc(type, result.value);\n            return result;\n        },\n        dynamic: (length === -1 || coder.dynamic)\n    }\n}\n\n\nfunction coderTuple(coerceFunc, coders, localName) {\n\n    var dynamic = false;\n    var types = [];\n    coders.forEach(function(coder) {\n        if (coder.dynamic) { dynamic = true; }\n        types.push(coder.type);\n    });\n\n    var type = ('tuple(' + types.join(',') + ')');\n\n    return {\n        coders: coders,\n        localName: localName,\n        name: 'tuple',\n        type: type,\n        encode: function(value) {\n            return pack(coders, value);\n        },\n        decode: function(data, offset) {\n            var result = unpack(coders, data, offset);\n            result.value = coerceFunc(type, result.value);\n            return result;\n        },\n        dynamic: dynamic\n    };\n}\n/*\nfunction getTypes(coders) {\n    var type = coderTuple(coders).type;\n    return type.substring(6, type.length - 1);\n}\n*/\nfunction splitNesting(value) {\n    var result = [];\n    var accum = '';\n    var depth = 0;\n    for (var offset = 0; offset < value.length; offset++) {\n        var c = value[offset];\n        if (c === ',' && depth === 0) {\n            result.push(accum);\n            accum = '';\n        } else {\n            accum += c;\n            if (c === '(') {\n                depth++;\n            } else if (c === ')') {\n                depth--;\n                if (depth === -1) {\n                    throw new Error('unbalanced parenthsis');\n                }\n            }\n        }\n    }\n    result.push(accum);\n\n    return result;\n}\n\nvar paramTypeSimple = {\n    address: coderAddress,\n    bool: coderBoolean,\n    string: coderString,\n    bytes: coderDynamicBytes,\n};\n\nfunction getTupleParamCoder(coerceFunc, components, localName) {\n    if (!components) { components = []; }\n    var coders = [];\n    components.forEach(function(component) {\n        coders.push(getParamCoder(coerceFunc, component));\n    });\n\n    return coderTuple(coerceFunc, coders, localName);\n}\n\nfunction getParamCoder(coerceFunc, param) {\n    var coder = paramTypeSimple[param.type];\n    if (coder) { return coder(coerceFunc, param.name); }\n\n    var match = param.type.match(paramTypeNumber);\n    if (match) {\n        var size = parseInt(match[2] || 256);\n        if (size === 0 || size > 256 || (size % 8) !== 0) {\n            errors.throwError('invalid ' + match[1] + ' bit length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return coderNumber(coerceFunc, size / 8, (match[1] === 'int'), param.name);\n    }\n\n    var match = param.type.match(paramTypeBytes);\n    if (match) {\n        var size = parseInt(match[1]);\n        if (size === 0 || size > 32) {\n            errors.throwError('invalid bytes length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return coderFixedBytes(coerceFunc, size, param.name);\n    }\n\n    var match = param.type.match(paramTypeArray);\n    if (match) {\n        param = shallowCopy(param);\n        var size = parseInt(match[2] || -1);\n        param.type = match[1];\n        return coderArray(coerceFunc, getParamCoder(coerceFunc, param), size, param.name);\n    }\n\n    if (param.type.substring(0, 5) === 'tuple') {\n        return getTupleParamCoder(coerceFunc, param.components, param.name);\n    }\n\n    if (type === '') {\n        return coderNull(coerceFunc);\n    }\n\n    errors.throwError('invalid type', errors.INVALID_ARGUMENT, {\n        arg: 'type',\n        value: type\n    });\n}\n\nfunction Coder(coerceFunc) {\n    if (!(this instanceof Coder)) { throw new Error('missing new'); }\n    if (!coerceFunc) { coerceFunc = defaultCoerceFunc; }\n    utils.defineProperty(this, 'coerceFunc', coerceFunc);\n}\n\n// Legacy name support\n// @TODO: In the next major version, remove names from decode/encode and don't do this\nfunction populateNames(type, name) {\n    if (!name) { return; }\n\n    if (type.type.substring(0, 5) === 'tuple' && typeof(name) !== 'string') {\n        if (type.components.length != name.names.length) {\n            errors.throwError('names/types length mismatch', errors.INVALID_ARGUMENT, {\n                count: { names: name.names.length, types: type.components.length },\n                value: { names: name.names, types: type.components }\n            });\n        }\n\n        name.names.forEach(function(name, index) {\n            populateNames(type.components[index], name);\n        });\n\n        name = (name.name || '');\n    }\n\n    if (!type.name && typeof(name) === 'string') {\n        type.name = name;\n    }\n}\n\nutils.defineProperty(Coder.prototype, 'encode', function(names, types, values) {\n\n    // Names is optional, so shift over all the parameters if not provided\n    if (arguments.length < 3) {\n        values = types;\n        types = names;\n        names = [];\n    }\n\n    if (types.length !== values.length) {\n        errors.throwError('types/values length mismatch', errors.INVALID_ARGUMENT, {\n            count: { types: types.length, values: values.length },\n            value: { types: types, values: values }\n        });\n    }\n\n    var coders = [];\n    types.forEach(function(type, index) {\n        // Convert types to type objects\n        //   - \"uint foo\" => { type: \"uint\", name: \"foo\" }\n        //   - \"tuple(uint, uint)\" => { type: \"tuple\", components: [ { type: \"uint\" }, { type: \"uint\" }, ] }\n        if (typeof(type) === 'string') {\n            type = parseParam(type);\n        }\n\n        // Legacy support for passing in names (this is going away in the next major version)\n        populateNames(type, names[index]);\n\n        coders.push(getParamCoder(this.coerceFunc, type));\n    }, this);\n\n    return utils.hexlify(coderTuple(this.coerceFunc, coders).encode(values));\n});\n\nutils.defineProperty(Coder.prototype, 'decode', function(names, types, data) {\n\n    // Names is optional, so shift over all the parameters if not provided\n    if (arguments.length < 3) {\n        data = types;\n        types = names;\n        names = [];\n    }\n\n    data = utils.arrayify(data);\n\n    var coders = [];\n    types.forEach(function(type, index) {\n\n        // See encode for details\n        if (typeof(type) === 'string') {\n            type = parseParam(type);\n        }\n\n        // Legacy; going away in the next major version\n        populateNames(type, names[index]);\n\n        coders.push(getParamCoder(this.coerceFunc, type));\n    }, this);\n\n    return coderTuple(this.coerceFunc, coders).decode(data, 0).value;\n\n});\n\nutils.defineProperty(Coder, 'defaultCoder', new Coder());\n\nutils.defineProperty(Coder, 'parseSignature', parseSignature);\n\n\nmodule.exports = Coder\n"},"lineCount":1009}},"hash":"b2ad182cb05ecc6768c5e97632baaae1","cacheData":{"env":{}}}