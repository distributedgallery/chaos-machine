{"id":"node_modules/is-hex-prefixed/src/index.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/is-hex-prefixed/package.json","includedInParent":true,"mtime":1535727512867},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246}],"generated":{"js":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str === \"undefined\" ? \"undefined\" : _typeof(str)) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n};","map":{"mappings":[{"generated":{"line":3,"column":0},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":1,"column":0}},{"name":"module","generated":{"line":9,"column":0},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":0}},{"name":"exports","generated":{"line":9,"column":7},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":7}},{"generated":{"line":9,"column":14},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":0}},{"generated":{"line":9,"column":17},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":17}},{"name":"isHexPrefixed","generated":{"line":9,"column":26},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":26}},{"generated":{"line":9,"column":39},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":17}},{"name":"str","generated":{"line":9,"column":40},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":40}},{"generated":{"line":9,"column":43},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":17}},{"generated":{"line":9,"column":45},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":45}},{"generated":{"line":10,"column":0},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":2}},{"generated":{"line":10,"column":6},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":6}},{"name":"str","generated":{"line":10,"column":13},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":13}},{"generated":{"line":10,"column":16},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":6}},{"generated":{"line":10,"column":21},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":21}},{"generated":{"line":10,"column":29},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":2}},{"generated":{"line":10,"column":31},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":31}},{"generated":{"line":11,"column":0},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":4}},{"generated":{"line":11,"column":10},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":10}},{"name":"Error","generated":{"line":11,"column":14},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":14}},{"generated":{"line":11,"column":19},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":10}},{"generated":{"line":11,"column":20},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":20}},{"name":"str","generated":{"line":11,"column":98},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":98}},{"generated":{"line":11,"column":101},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":20}},{"name":"str","generated":{"line":11,"column":142},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":98}},{"generated":{"line":11,"column":145},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":20}},{"generated":{"line":11,"column":150},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":105}},{"generated":{"line":11,"column":183},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":10}},{"generated":{"line":11,"column":184},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":4}},{"generated":{"line":12,"column":0},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":10,"column":3}},{"generated":{"line":14,"column":0},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":2}},{"name":"str","generated":{"line":14,"column":9},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":9}},{"name":"slice","generated":{"line":14,"column":13},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":13}},{"generated":{"line":14,"column":18},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":9}},{"generated":{"line":14,"column":19},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":19}},{"generated":{"line":14,"column":20},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":9}},{"generated":{"line":14,"column":22},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":22}},{"generated":{"line":14,"column":23},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":9}},{"generated":{"line":14,"column":29},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":29}},{"generated":{"line":14,"column":33},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":2}},{"generated":{"line":15,"column":0},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":13,"column":1}},{"generated":{"line":15,"column":1},"source":"node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":0}}],"sources":{"node_modules/is-hex-prefixed/src/index.js":"/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n"},"lineCount":null}},"hash":"a3dd1424040be5deb603e3580315b1a8","cacheData":{"env":{}}}