{"id":"node_modules/truffle-contract/statuserror.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract/package.json","includedInParent":true,"mtime":1535727511817},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"truffle-error","loc":{"line":1,"column":27},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract/statuserror.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-error/index.js"},{"name":"util","loc":{"line":2,"column":23},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract/statuserror.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/util/util.js"},{"name":"web3","loc":{"line":3,"column":19},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/truffle-contract/statuserror.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/web3/index.js"}],"generated":{"js":"var TruffleError = require(\"truffle-error\");\nvar inherits = require(\"util\").inherits;\nvar web3 = require(\"web3\");\n\ninherits(StatusError, TruffleError);\n\nvar defaultGas = 90000;\n\nfunction StatusError(args, tx, receipt) {\n  var message;\n  var gasLimit = parseInt(args.gas) || defaultGas;\n\n  if(receipt.gasUsed === gasLimit){\n\n    message = \"Transaction: \" + tx + \" exited with an error (status 0) after consuming all gas.\\n\" +\n      \"Please check that the transaction:\\n\" +\n      \"    - satisfies all conditions set by Solidity `assert` statements.\\n\" +\n      \"    - has enough gas to execute the full transaction.\\n\" +\n      \"    - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).\";\n\n  } else {\n\n    message = \"Transaction: \" + tx + \" exited with an error (status 0).\\n\" +\n      \"Please check that the transaction:\\n\" +\n      \"    - satisfies all conditions set by Solidity `require` statements.\\n\" +\n      \"    - does not trigger a Solidity `revert` statement.\\n\";\n  }\n\n  StatusError.super_.call(this, message);\n  this.tx = tx;\n  this.receipt = receipt;\n}\n\nmodule.exports = StatusError;","map":{"mappings":[{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/truffle-contract/statuserror.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/truffle-contract/statuserror.js":"var TruffleError = require(\"truffle-error\");\nvar inherits = require(\"util\").inherits;\nvar web3 = require(\"web3\");\n\ninherits(StatusError, TruffleError);\n\nvar defaultGas = 90000;\n\nfunction StatusError(args, tx, receipt) {\n  var message;\n  var gasLimit = parseInt(args.gas) || defaultGas;\n\n  if(receipt.gasUsed === gasLimit){\n\n    message = \"Transaction: \" + tx + \" exited with an error (status 0) after consuming all gas.\\n\" +\n      \"Please check that the transaction:\\n\" +\n      \"    - satisfies all conditions set by Solidity `assert` statements.\\n\" +\n      \"    - has enough gas to execute the full transaction.\\n\" +\n      \"    - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).\";\n\n  } else {\n\n    message = \"Transaction: \" + tx + \" exited with an error (status 0).\\n\" +\n      \"Please check that the transaction:\\n\" +\n      \"    - satisfies all conditions set by Solidity `require` statements.\\n\" +\n      \"    - does not trigger a Solidity `revert` statement.\\n\";\n  }\n\n  StatusError.super_.call(this, message);\n  this.tx = tx;\n  this.receipt = receipt;\n}\n\nmodule.exports = StatusError;"},"lineCount":34}},"hash":"c7a5376decadaac234b543c8ce830a92","cacheData":{"env":{}}}