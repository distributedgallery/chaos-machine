{"id":"node_modules/crypto-js/rabbit.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/package.json","includedInParent":true,"mtime":1533122127393},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1533219493444},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"./core","loc":{"line":4,"column":45},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/rabbit.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/core.js"},{"name":"./enc-base64","loc":{"line":4,"column":64},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/rabbit.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/enc-base64.js"},{"name":"./md5","loc":{"line":4,"column":89},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/rabbit.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/md5.js"},{"name":"./evpkdf","loc":{"line":4,"column":107},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/rabbit.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/evpkdf.js"},{"name":"./cipher-core","loc":{"line":4,"column":128},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/rabbit.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/cipher-core.js"}],"generated":{"js":"var define;\n;(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));","map":{"mappings":[{"source":"node_modules/crypto-js/rabbit.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/crypto-js/rabbit.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}}],"sources":{"node_modules/crypto-js/rabbit.js":";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));"},"lineCount":193}},"hash":"e2c58d915f2b6af90b77145599cba373","cacheData":{"env":{}}}