{"id":"node_modules/data-uri-to-buffer/index.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/data-uri-to-buffer/package.json","includedInParent":true,"mtime":1535727513052},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1535727539307},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"buffer","parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/data-uri-to-buffer/index.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\n/**\n * Module exports.\n */\n\nmodule.exports = dataUriToBuffer;\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @return {Buffer} Buffer instance from Data URI\n * @api public\n */\n\nfunction dataUriToBuffer (uri) {\n  if (!/^data\\:/i.test(uri)) {\n    throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n  }\n\n  // strip newlines\n  uri = uri.replace(/\\r?\\n/g, '');\n\n  // split the URI up into the \"metadata\" and the \"data\" portions\n  var firstComma = uri.indexOf(',');\n  if (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data: URI');\n\n  // remove the \"data:\" scheme and parse the metadata\n  var meta = uri.substring(5, firstComma).split(';');\n\n  var base64 = false;\n  var charset = 'US-ASCII';\n  for (var i = 0; i < meta.length; i++) {\n    if ('base64' == meta[i]) {\n      base64 = true;\n    } else if (0 == meta[i].indexOf('charset=')) {\n      charset = meta[i].substring(8);\n    }\n  }\n\n  // get the encoded data portion and decode URI-encoded chars\n  var data = unescape(uri.substring(firstComma + 1));\n\n  var encoding = base64 ? 'base64' : 'ascii';\n  var buffer = new Buffer(data, encoding);\n\n  // set `.type` property to MIME type\n  buffer.type = meta[0] || 'text/plain';\n\n  // set the `.charset` property\n  buffer.charset = charset;\n\n  return buffer;\n}\n","map":{"mappings":[{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}}],"sources":{"node_modules/data-uri-to-buffer/index.js":"\n/**\n * Module exports.\n */\n\nmodule.exports = dataUriToBuffer;\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @return {Buffer} Buffer instance from Data URI\n * @api public\n */\n\nfunction dataUriToBuffer (uri) {\n  if (!/^data\\:/i.test(uri)) {\n    throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n  }\n\n  // strip newlines\n  uri = uri.replace(/\\r?\\n/g, '');\n\n  // split the URI up into the \"metadata\" and the \"data\" portions\n  var firstComma = uri.indexOf(',');\n  if (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data: URI');\n\n  // remove the \"data:\" scheme and parse the metadata\n  var meta = uri.substring(5, firstComma).split(';');\n\n  var base64 = false;\n  var charset = 'US-ASCII';\n  for (var i = 0; i < meta.length; i++) {\n    if ('base64' == meta[i]) {\n      base64 = true;\n    } else if (0 == meta[i].indexOf('charset=')) {\n      charset = meta[i].substring(8);\n    }\n  }\n\n  // get the encoded data portion and decode URI-encoded chars\n  var data = unescape(uri.substring(firstComma + 1));\n\n  var encoding = base64 ? 'base64' : 'ascii';\n  var buffer = new Buffer(data, encoding);\n\n  // set `.type` property to MIME type\n  buffer.type = meta[0] || 'text/plain';\n\n  // set the `.charset` property\n  buffer.charset = charset;\n\n  return buffer;\n}\n"},"lineCount":56}},"hash":"528229ff995899c22e54aea5b26772e2","cacheData":{"env":{}}}