{"id":"node_modules/crypto-js/pbkdf2.js","dependencies":[{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/package.json","includedInParent":true,"mtime":1533122127393},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/package.json","includedInParent":true,"mtime":1533219493444},{"name":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/.babelrc","includedInParent":true,"mtime":1533206516246},{"name":"./core","loc":{"line":4,"column":45},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/pbkdf2.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/core.js"},{"name":"./sha1","loc":{"line":4,"column":64},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/pbkdf2.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/sha1.js"},{"name":"./hmac","loc":{"line":4,"column":83},"parent":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/pbkdf2.js","resolved":"/Users/osarrouy/Documents/devs/dapps/@distributedgallery/@chaosmachine/packages/dashboard/node_modules/crypto-js/hmac.js"}],"generated":{"js":"var define;\n;(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));","map":{"mappings":[{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/crypto-js/pbkdf2.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}}],"sources":{"node_modules/crypto-js/pbkdf2.js":";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));"},"lineCount":146}},"hash":"37440b8b23f1f7bfd847fb703dc64943","cacheData":{"env":{}}}